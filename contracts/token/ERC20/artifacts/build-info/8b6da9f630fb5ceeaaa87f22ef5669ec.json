{
	"id": "8b6da9f630fb5ceeaaa87f22ef5669ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/ERC20/MyFaucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\ncontract MyFaucet {\n    error RequestMultipleTimes(address requester);\n    error FaucetEmpty();\n\n    event SendTokens(address requester, uint256 amount);\n\n    // IERC20合约地址\n    IERC20 private immutable tokenContract;\n    // 每次发放的token数量\n    uint256 public constant amountAllowed = 100;\n    // 领取的人\n    mapping(address => bool) requestedAddress;\n\n    // token代币合约\n    constructor(IERC20 _tokenContract) {\n        tokenContract = _tokenContract;\n    }\n\n    // 用户领取代币\n    function requestTokens() external {\n        // checks\n        if (requestedAddress[msg.sender]) {\n            revert RequestMultipleTimes(msg.sender);\n        }\n        if (tokenContract.balanceOf(address(this)) < amountAllowed) {\n            revert FaucetEmpty();\n        }\n        // effects\n        requestedAddress[msg.sender] = true;\n        // interactions\n        tokenContract.transfer(msg.sender, amountAllowed);\n        emit SendTokens(msg.sender, amountAllowed);\n    }\n\n    function balanceOf() external view returns (uint256) {\n        return tokenContract.balanceOf(address(this));\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/MyFaucet.sol": {
				"MyFaucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FaucetEmpty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								}
							],
							"name": "RequestMultipleTimes",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SendTokens",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "amountAllowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/MyFaucet.sol\":114:1235  contract MyFaucet {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/token/ERC20/MyFaucet.sol\":519:601  constructor(IERC20 _tokenContract) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/ERC20/MyFaucet.sol\":580:594  _tokenContract */\n  dup1\n    /* \"contracts/token/ERC20/MyFaucet.sol\":564:594  tokenContract = _tokenContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/token/ERC20/MyFaucet.sol\":519:601  constructor(IERC20 _tokenContract) {... */\n  pop\n    /* \"contracts/token/ERC20/MyFaucet.sol\":114:1235  contract MyFaucet {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_23\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_25\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_26:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_28\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1112:1231   */\ntag_30:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_32\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/MyFaucet.sol\":114:1235  contract MyFaucet {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5b9d82bdb7ae056a203cf64bdf26f3fdec584cdfaca2ac8b4c3d0c5b66e90969\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/MyFaucet.sol\":114:1235  contract MyFaucet {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x359cf2b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ad2cd14\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/MyFaucet.sol\":633:1112  function requestTokens() external {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1118:1233  function balanceOf() external view returns (uint256) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/MyFaucet.sol\":377:420  uint256 public constant amountAllowed = 100 */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/MyFaucet.sol\":633:1112  function requestTokens() external {... */\n    tag_7:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":699:715  requestedAddress */\n      0x00\n        /* \"contracts/token/ERC20/MyFaucet.sol\":699:727  requestedAddress[msg.sender] */\n      dup1\n        /* \"contracts/token/ERC20/MyFaucet.sol\":716:726  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/MyFaucet.sol\":699:727  requestedAddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/ERC20/MyFaucet.sol\":695:793  if (requestedAddress[msg.sender]) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/token/ERC20/MyFaucet.sol\":771:781  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/MyFaucet.sol\":750:782  RequestMultipleTimes(msg.sender) */\n      mload(0x40)\n      0x83cc3b6f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/MyFaucet.sol\":695:793  if (requestedAddress[msg.sender]) {... */\n    tag_16:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":417:420  100 */\n      0x64\n        /* \"contracts/token/ERC20/MyFaucet.sol\":806:819  tokenContract */\n      immutable(\"0x5b9d82bdb7ae056a203cf64bdf26f3fdec584cdfaca2ac8b4c3d0c5b66e90969\")\n        /* \"contracts/token/ERC20/MyFaucet.sol\":806:829  tokenContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/ERC20/MyFaucet.sol\":838:842  this */\n      address\n        /* \"contracts/token/ERC20/MyFaucet.sol\":806:844  tokenContract.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":806:860  tokenContract.balanceOf(address(this)) < amountAllowed */\n      lt\n        /* \"contracts/token/ERC20/MyFaucet.sol\":802:907  if (tokenContract.balanceOf(address(this)) < amountAllowed) {... */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/token/ERC20/MyFaucet.sol\":883:896  FaucetEmpty() */\n      mload(0x40)\n      0xc1336f8500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/MyFaucet.sol\":802:907  if (tokenContract.balanceOf(address(this)) < amountAllowed) {... */\n    tag_24:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":966:970  true */\n      0x01\n        /* \"contracts/token/ERC20/MyFaucet.sol\":935:951  requestedAddress */\n      0x00\n        /* \"contracts/token/ERC20/MyFaucet.sol\":935:963  requestedAddress[msg.sender] */\n      dup1\n        /* \"contracts/token/ERC20/MyFaucet.sol\":952:962  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/MyFaucet.sol\":935:963  requestedAddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC20/MyFaucet.sol\":935:970  requestedAddress[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1004:1017  tokenContract */\n      immutable(\"0x5b9d82bdb7ae056a203cf64bdf26f3fdec584cdfaca2ac8b4c3d0c5b66e90969\")\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1004:1026  tokenContract.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1027:1037  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/MyFaucet.sol\":417:420  100 */\n      0x64\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1004:1053  tokenContract.transfer(msg.sender, amountAllowed) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      pop\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1068:1105  SendTokens(msg.sender, amountAllowed) */\n      0x09bd3894cb7ab22415416dac0fecc519855a4b0842f1c9115e562ef557ab577b\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1079:1089  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/MyFaucet.sol\":417:420  100 */\n      0x64\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1068:1105  SendTokens(msg.sender, amountAllowed) */\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token/ERC20/MyFaucet.sol\":633:1112  function requestTokens() external {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1118:1233  function balanceOf() external view returns (uint256) {... */\n    tag_9:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1162:1169  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1188:1201  tokenContract */\n      immutable(\"0x5b9d82bdb7ae056a203cf64bdf26f3fdec584cdfaca2ac8b4c3d0c5b66e90969\")\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1188:1211  tokenContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1220:1224  this */\n      address\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1188:1226  tokenContract.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1181:1226  return tokenContract.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/MyFaucet.sol\":1118:1233  function balanceOf() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/MyFaucet.sol\":377:420  uint256 public constant amountAllowed = 100 */\n    tag_13:\n        /* \"contracts/token/ERC20/MyFaucet.sol\":417:420  100 */\n      0x64\n        /* \"contracts/token/ERC20/MyFaucet.sol\":377:420  uint256 public constant amountAllowed = 100 */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_37:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_38:\n        /* \"#utility.yul\":177:201   */\n      tag_53\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_55\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_39:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_40:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_58\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_39\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_41:\n        /* \"#utility.yul\":763:787   */\n      tag_60\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_40\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_18:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_62\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_43:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_45:\n        /* \"#utility.yul\":1428:1452   */\n      tag_67\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_37\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_68:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1626   */\n    tag_46:\n        /* \"#utility.yul\":1540:1545   */\n      0x00\n        /* \"#utility.yul\":1571:1577   */\n      dup2\n        /* \"#utility.yul\":1565:1578   */\n      mload\n        /* \"#utility.yul\":1556:1578   */\n      swap1\n      pop\n        /* \"#utility.yul\":1587:1620   */\n      tag_70\n        /* \"#utility.yul\":1614:1619   */\n      dup2\n        /* \"#utility.yul\":1587:1620   */\n      tag_45\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1483:1626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1983   */\n    tag_23:\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1751:1753   */\n      0x20\n        /* \"#utility.yul\":1739:1748   */\n      dup3\n        /* \"#utility.yul\":1730:1737   */\n      dup5\n        /* \"#utility.yul\":1726:1749   */\n      sub\n        /* \"#utility.yul\":1722:1754   */\n      slt\n        /* \"#utility.yul\":1719:1838   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1757:1836   */\n      tag_73\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1719:1838   */\n    tag_72:\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1902:1966   */\n      tag_74\n        /* \"#utility.yul\":1958:1965   */\n      dup5\n        /* \"#utility.yul\":1949:1955   */\n      dup3\n        /* \"#utility.yul\":1938:1947   */\n      dup6\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1902:1966   */\n      tag_46\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1892:1966   */\n      swap2\n      pop\n        /* \"#utility.yul\":1848:1976   */\n      pop\n        /* \"#utility.yul\":1632:1983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2321   */\n    tag_26:\n        /* \"#utility.yul\":2110:2114   */\n      0x00\n        /* \"#utility.yul\":2148:2150   */\n      0x40\n        /* \"#utility.yul\":2137:2146   */\n      dup3\n        /* \"#utility.yul\":2133:2151   */\n      add\n        /* \"#utility.yul\":2125:2151   */\n      swap1\n      pop\n        /* \"#utility.yul\":2161:2232   */\n      tag_76\n        /* \"#utility.yul\":2229:2230   */\n      0x00\n        /* \"#utility.yul\":2218:2227   */\n      dup4\n        /* \"#utility.yul\":2214:2231   */\n      add\n        /* \"#utility.yul\":2205:2211   */\n      dup6\n        /* \"#utility.yul\":2161:2232   */\n      tag_41\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2242:2314   */\n      tag_77\n        /* \"#utility.yul\":2310:2312   */\n      0x20\n        /* \"#utility.yul\":2299:2308   */\n      dup4\n        /* \"#utility.yul\":2295:2313   */\n      add\n        /* \"#utility.yul\":2286:2292   */\n      dup5\n        /* \"#utility.yul\":2242:2314   */\n      tag_38\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1989:2321   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2417   */\n    tag_47:\n        /* \"#utility.yul\":2361:2368   */\n      0x00\n        /* \"#utility.yul\":2404:2409   */\n      dup2\n        /* \"#utility.yul\":2397:2410   */\n      iszero\n        /* \"#utility.yul\":2390:2411   */\n      iszero\n        /* \"#utility.yul\":2379:2411   */\n      swap1\n      pop\n        /* \"#utility.yul\":2327:2417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2423:2539   */\n    tag_48:\n        /* \"#utility.yul\":2493:2514   */\n      tag_80\n        /* \"#utility.yul\":2508:2513   */\n      dup2\n        /* \"#utility.yul\":2493:2514   */\n      tag_47\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2486:2491   */\n      dup2\n        /* \"#utility.yul\":2483:2515   */\n      eq\n        /* \"#utility.yul\":2473:2533   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2529:2530   */\n      0x00\n        /* \"#utility.yul\":2526:2527   */\n      dup1\n        /* \"#utility.yul\":2519:2531   */\n      revert\n        /* \"#utility.yul\":2473:2533   */\n    tag_81:\n        /* \"#utility.yul\":2423:2539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2545:2682   */\n    tag_49:\n        /* \"#utility.yul\":2599:2604   */\n      0x00\n        /* \"#utility.yul\":2630:2636   */\n      dup2\n        /* \"#utility.yul\":2624:2637   */\n      mload\n        /* \"#utility.yul\":2615:2637   */\n      swap1\n      pop\n        /* \"#utility.yul\":2646:2676   */\n      tag_83\n        /* \"#utility.yul\":2670:2675   */\n      dup2\n        /* \"#utility.yul\":2646:2676   */\n      tag_48\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2545:2682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:3033   */\n    tag_30:\n        /* \"#utility.yul\":2755:2761   */\n      0x00\n        /* \"#utility.yul\":2804:2806   */\n      0x20\n        /* \"#utility.yul\":2792:2801   */\n      dup3\n        /* \"#utility.yul\":2783:2790   */\n      dup5\n        /* \"#utility.yul\":2779:2802   */\n      sub\n        /* \"#utility.yul\":2775:2807   */\n      slt\n        /* \"#utility.yul\":2772:2891   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":2810:2889   */\n      tag_86\n      tag_43\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2772:2891   */\n    tag_85:\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2955:3016   */\n      tag_87\n        /* \"#utility.yul\":3008:3015   */\n      dup5\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2988:2997   */\n      dup6\n        /* \"#utility.yul\":2984:3006   */\n      add\n        /* \"#utility.yul\":2955:3016   */\n      tag_49\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2945:3016   */\n      swap2\n      pop\n        /* \"#utility.yul\":2901:3026   */\n      pop\n        /* \"#utility.yul\":2688:3033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b17e465e93ea1bee1a1a56e5ffcbb048b75bd374dedd5dc6c56884da0855938464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:2",
										"nodeType": "YulBlock",
										"src": "0:1392:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "626:51:2",
													"nodeType": "YulBlock",
													"src": "626:51:2",
													"statements": [
														{
															"nativeSrc": "636:35:2",
															"nodeType": "YulAssignment",
															"src": "636:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:2"
																},
																"nativeSrc": "647:24:2",
																"nodeType": "YulFunctionCall",
																"src": "647:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nativeSrc": "568:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:2",
														"nodeType": "YulTypedName",
														"src": "608:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:2",
														"nodeType": "YulTypedName",
														"src": "618:7:2",
														"type": ""
													}
												],
												"src": "568:109:2"
											},
											{
												"body": {
													"nativeSrc": "739:92:2",
													"nodeType": "YulBlock",
													"src": "739:92:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:2",
																"nodeType": "YulBlock",
																"src": "809:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:2",
																					"nodeType": "YulLiteral",
																					"src": "818:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:2",
																					"nodeType": "YulLiteral",
																					"src": "821:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:2"
																			},
																			"nativeSrc": "811:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:2"
																		},
																		"nativeSrc": "811:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nativeSrc": "769:30:2",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:2"
																				},
																				"nativeSrc": "769:37:2",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:2"
																		},
																		"nativeSrc": "759:48:2",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:2"
																},
																"nativeSrc": "752:56:2",
																"nodeType": "YulFunctionCall",
																"src": "752:56:2"
															},
															"nativeSrc": "749:76:2",
															"nodeType": "YulIf",
															"src": "749:76:2"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nativeSrc": "683:148:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:2",
														"nodeType": "YulTypedName",
														"src": "732:5:2",
														"type": ""
													}
												],
												"src": "683:148:2"
											},
											{
												"body": {
													"nativeSrc": "913:93:2",
													"nodeType": "YulBlock",
													"src": "913:93:2",
													"statements": [
														{
															"nativeSrc": "923:22:2",
															"nodeType": "YulAssignment",
															"src": "923:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:2"
																},
																"nativeSrc": "932:13:2",
																"nodeType": "YulFunctionCall",
																"src": "932:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nativeSrc": "954:39:2",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:2"
																},
																"nativeSrc": "954:46:2",
																"nodeType": "YulFunctionCall",
																"src": "954:46:2"
															},
															"nativeSrc": "954:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:2"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "837:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:2",
														"nodeType": "YulTypedName",
														"src": "891:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:2",
														"nodeType": "YulTypedName",
														"src": "899:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:2",
														"nodeType": "YulTypedName",
														"src": "907:5:2",
														"type": ""
													}
												],
												"src": "837:169:2"
											},
											{
												"body": {
													"nativeSrc": "1102:287:2",
													"nodeType": "YulBlock",
													"src": "1102:287:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:2",
																"nodeType": "YulBlock",
																"src": "1148:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:2"
																			},
																			"nativeSrc": "1150:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:2"
																		},
																		"nativeSrc": "1150:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:2"
																		},
																		"nativeSrc": "1119:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:2"
																},
																"nativeSrc": "1115:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:2"
															},
															"nativeSrc": "1112:119:2",
															"nodeType": "YulIf",
															"src": "1112:119:2"
														},
														{
															"nativeSrc": "1241:141:2",
															"nodeType": "YulBlock",
															"src": "1241:141:2",
															"statements": [
																{
																	"nativeSrc": "1256:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:2",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:2"
																				},
																				"nativeSrc": "1340:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nativeSrc": "1295:44:2",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:2"
																		},
																		"nativeSrc": "1295:77:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "1012:377:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:2",
														"nodeType": "YulTypedName",
														"src": "1072:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:2",
														"nodeType": "YulTypedName",
														"src": "1083:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:2",
														"nodeType": "YulTypedName",
														"src": "1095:6:2",
														"type": ""
													}
												],
												"src": "1012:377:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610680380380610680833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b60805161055561012b5f395f81816101180152818161023c015261031601526105555ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063359cf2b714610043578063722713f71461004d5780639ad2cd141461006b575b5f80fd5b61004b610089565b005b610055610313565b60405161006291906103ce565b60405180910390f35b6100736103b1565b60405161008091906103ce565b60405180910390f35b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561011457336040517f83cc3b6f00000000000000000000000000000000000000000000000000000000815260040161010b9190610426565b60405180910390fd5b60647f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016f9190610426565b602060405180830381865afa15801561018a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ae919061046d565b10156101e6576040517fc1336f8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360646040518363ffffffff1660e01b8152600401610296929190610498565b6020604051808303815f875af11580156102b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d691906104f4565b507f09bd3894cb7ab22415416dac0fecc519855a4b0842f1c9115e562ef557ab577b336064604051610309929190610498565b60405180910390a1565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161036d9190610426565b602060405180830381865afa158015610388573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ac919061046d565b905090565b606481565b5f819050919050565b6103c8816103b6565b82525050565b5f6020820190506103e15f8301846103bf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610410826103e7565b9050919050565b61042081610406565b82525050565b5f6020820190506104395f830184610417565b92915050565b5f80fd5b61044c816103b6565b8114610456575f80fd5b50565b5f8151905061046781610443565b92915050565b5f602082840312156104825761048161043f565b5b5f61048f84828501610459565b91505092915050565b5f6040820190506104ab5f830185610417565b6104b860208301846103bf565b9392505050565b5f8115159050919050565b6104d3816104bf565b81146104dd575f80fd5b50565b5f815190506104ee816104ca565b92915050565b5f602082840312156105095761050861043f565b5b5f610516848285016104e0565b9150509291505056fea2646970667358221220b17e465e93ea1bee1a1a56e5ffcbb048b75bd374dedd5dc6c56884da0855938464736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x680 CODESIZE SUB DUP1 PUSH2 0x680 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x555 PUSH2 0x12B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x118 ADD MSTORE DUP2 DUP2 PUSH2 0x23C ADD MSTORE PUSH2 0x316 ADD MSTORE PUSH2 0x555 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x9AD2CD14 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x114 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x83CC3B6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1336F8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP3 SWAP2 SWAP1 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST POP PUSH32 0x9BD3894CB7AB22415416DAC0FECC519855A4B0842F1C9115E562EF557AB577B CALLER PUSH1 0x64 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x410 DUP3 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x406 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x439 PUSH0 DUP4 ADD DUP5 PUSH2 0x417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x44C DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x467 DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x43F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x48F DUP5 DUP3 DUP6 ADD PUSH2 0x459 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4AB PUSH0 DUP4 ADD DUP6 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D3 DUP2 PUSH2 0x4BF JUMP JUMPDEST DUP2 EQ PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4EE DUP2 PUSH2 0x4CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x509 JUMPI PUSH2 0x508 PUSH2 0x43F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x516 DUP5 DUP3 DUP6 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH31 0x465E93EA1BEE1A1A56E5FFCBB048B75BD374DEDD5DC6C56884DA0855938464 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "114:1121:1:-:0;;;519:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;580:14;564:30;;;;;;;;;;519:82;114:1121;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;114:1121:1:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@amountAllowed_98": {
									"entryPoint": 945,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_177": {
									"entryPoint": 787,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@requestTokens_163": {
									"entryPoint": 137,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3036:2",
										"nodeType": "YulBlock",
										"src": "0:3036:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "155:53:2",
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nativeSrc": "177:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nativeSrc": "165:37:2",
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nativeSrc": "165:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:2",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:2",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nativeSrc": "312:124:2",
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nativeSrc": "322:26:2",
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:2",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nativeSrc": "330:18:2",
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:2",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nativeSrc": "411:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nativeSrc": "358:71:2",
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nativeSrc": "358:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:2",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:2",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nativeSrc": "487:81:2",
													"nodeType": "YulBlock",
													"src": "487:81:2",
													"statements": [
														{
															"nativeSrc": "497:65:2",
															"nodeType": "YulAssignment",
															"src": "497:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:2",
																		"nodeType": "YulLiteral",
																		"src": "519:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:2"
																},
																"nativeSrc": "508:54:2",
																"nodeType": "YulFunctionCall",
																"src": "508:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:2",
														"nodeType": "YulTypedName",
														"src": "469:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:2",
														"nodeType": "YulTypedName",
														"src": "479:7:2",
														"type": ""
													}
												],
												"src": "442:126:2"
											},
											{
												"body": {
													"nativeSrc": "619:51:2",
													"nodeType": "YulBlock",
													"src": "619:51:2",
													"statements": [
														{
															"nativeSrc": "629:35:2",
															"nodeType": "YulAssignment",
															"src": "629:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:2"
																},
																"nativeSrc": "640:24:2",
																"nodeType": "YulFunctionCall",
																"src": "640:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:2",
														"nodeType": "YulTypedName",
														"src": "601:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:2",
														"nodeType": "YulTypedName",
														"src": "611:7:2",
														"type": ""
													}
												],
												"src": "574:96:2"
											},
											{
												"body": {
													"nativeSrc": "741:53:2",
													"nodeType": "YulBlock",
													"src": "741:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:2"
																		},
																		"nativeSrc": "763:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:2"
																},
																"nativeSrc": "751:37:2",
																"nodeType": "YulFunctionCall",
																"src": "751:37:2"
															},
															"nativeSrc": "751:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:2",
														"nodeType": "YulTypedName",
														"src": "729:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:2",
														"nodeType": "YulTypedName",
														"src": "736:3:2",
														"type": ""
													}
												],
												"src": "676:118:2"
											},
											{
												"body": {
													"nativeSrc": "898:124:2",
													"nodeType": "YulBlock",
													"src": "898:124:2",
													"statements": [
														{
															"nativeSrc": "908:26:2",
															"nodeType": "YulAssignment",
															"src": "908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:2",
																		"nodeType": "YulLiteral",
																		"src": "931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nativeSrc": "916:18:2",
																"nodeType": "YulFunctionCall",
																"src": "916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nativeSrc": "997:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:2"
																},
																"nativeSrc": "944:71:2",
																"nodeType": "YulFunctionCall",
																"src": "944:71:2"
															},
															"nativeSrc": "944:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:2",
														"nodeType": "YulTypedName",
														"src": "870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:2",
														"nodeType": "YulTypedName",
														"src": "882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:2",
														"nodeType": "YulTypedName",
														"src": "893:4:2",
														"type": ""
													}
												],
												"src": "800:222:2"
											},
											{
												"body": {
													"nativeSrc": "1068:35:2",
													"nodeType": "YulBlock",
													"src": "1068:35:2",
													"statements": [
														{
															"nativeSrc": "1078:19:2",
															"nodeType": "YulAssignment",
															"src": "1078:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:2"
																},
																"nativeSrc": "1088:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:2",
														"nodeType": "YulTypedName",
														"src": "1061:6:2",
														"type": ""
													}
												],
												"src": "1028:75:2"
											},
											{
												"body": {
													"nativeSrc": "1198:28:2",
													"nodeType": "YulBlock",
													"src": "1198:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:2"
																},
																"nativeSrc": "1208:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:2"
															},
															"nativeSrc": "1208:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:2"
											},
											{
												"body": {
													"nativeSrc": "1321:28:2",
													"nodeType": "YulBlock",
													"src": "1321:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:2"
																},
																"nativeSrc": "1331:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:2"
															},
															"nativeSrc": "1331:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:2"
											},
											{
												"body": {
													"nativeSrc": "1398:79:2",
													"nodeType": "YulBlock",
													"src": "1398:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:2",
																"nodeType": "YulBlock",
																"src": "1455:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:2"
																			},
																			"nativeSrc": "1457:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:2"
																		},
																		"nativeSrc": "1457:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:2"
																				},
																				"nativeSrc": "1428:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:2"
																		},
																		"nativeSrc": "1418:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:2"
																},
																"nativeSrc": "1411:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:2"
															},
															"nativeSrc": "1408:63:2",
															"nodeType": "YulIf",
															"src": "1408:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:2",
														"nodeType": "YulTypedName",
														"src": "1391:5:2",
														"type": ""
													}
												],
												"src": "1355:122:2"
											},
											{
												"body": {
													"nativeSrc": "1546:80:2",
													"nodeType": "YulBlock",
													"src": "1546:80:2",
													"statements": [
														{
															"nativeSrc": "1556:22:2",
															"nodeType": "YulAssignment",
															"src": "1556:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1571:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1565:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1565:5:2"
																},
																"nativeSrc": "1565:13:2",
																"nodeType": "YulFunctionCall",
																"src": "1565:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1556:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1556:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1614:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1614:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1587:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1587:26:2"
																},
																"nativeSrc": "1587:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1587:33:2"
															},
															"nativeSrc": "1587:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1587:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1483:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1524:6:2",
														"nodeType": "YulTypedName",
														"src": "1524:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1532:3:2",
														"nodeType": "YulTypedName",
														"src": "1532:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1540:5:2",
														"nodeType": "YulTypedName",
														"src": "1540:5:2",
														"type": ""
													}
												],
												"src": "1483:143:2"
											},
											{
												"body": {
													"nativeSrc": "1709:274:2",
													"nodeType": "YulBlock",
													"src": "1709:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1755:83:2",
																"nodeType": "YulBlock",
																"src": "1755:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1757:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1757:77:2"
																			},
																			"nativeSrc": "1757:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:79:2"
																		},
																		"nativeSrc": "1757:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1730:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1730:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1739:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1739:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1726:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:2"
																		},
																		"nativeSrc": "1726:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1726:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1751:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1751:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1722:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:2"
																},
																"nativeSrc": "1722:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1722:32:2"
															},
															"nativeSrc": "1719:119:2",
															"nodeType": "YulIf",
															"src": "1719:119:2"
														},
														{
															"nativeSrc": "1848:128:2",
															"nodeType": "YulBlock",
															"src": "1848:128:2",
															"statements": [
																{
																	"nativeSrc": "1863:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1863:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1877:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1877:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1867:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1867:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1892:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1892:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1938:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1938:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1949:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1949:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1934:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1934:3:2"
																				},
																				"nativeSrc": "1934:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1934:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1958:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1958:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1902:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1902:31:2"
																		},
																		"nativeSrc": "1902:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1902:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1892:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1892:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1632:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1679:9:2",
														"nodeType": "YulTypedName",
														"src": "1679:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1690:7:2",
														"nodeType": "YulTypedName",
														"src": "1690:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1702:6:2",
														"nodeType": "YulTypedName",
														"src": "1702:6:2",
														"type": ""
													}
												],
												"src": "1632:351:2"
											},
											{
												"body": {
													"nativeSrc": "2115:206:2",
													"nodeType": "YulBlock",
													"src": "2115:206:2",
													"statements": [
														{
															"nativeSrc": "2125:26:2",
															"nodeType": "YulAssignment",
															"src": "2125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2137:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2148:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2133:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2133:3:2"
																},
																"nativeSrc": "2133:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2125:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2205:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2205:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2218:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2218:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2229:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2229:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2214:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:2"
																		},
																		"nativeSrc": "2214:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2161:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2161:43:2"
																},
																"nativeSrc": "2161:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2161:71:2"
															},
															"nativeSrc": "2161:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2161:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2286:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2299:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2310:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2310:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2295:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:2"
																		},
																		"nativeSrc": "2295:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2242:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2242:43:2"
																},
																"nativeSrc": "2242:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2242:72:2"
															},
															"nativeSrc": "2242:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2242:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1989:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2079:9:2",
														"nodeType": "YulTypedName",
														"src": "2079:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2091:6:2",
														"nodeType": "YulTypedName",
														"src": "2091:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2099:6:2",
														"nodeType": "YulTypedName",
														"src": "2099:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2110:4:2",
														"nodeType": "YulTypedName",
														"src": "2110:4:2",
														"type": ""
													}
												],
												"src": "1989:332:2"
											},
											{
												"body": {
													"nativeSrc": "2369:48:2",
													"nodeType": "YulBlock",
													"src": "2369:48:2",
													"statements": [
														{
															"nativeSrc": "2379:32:2",
															"nodeType": "YulAssignment",
															"src": "2379:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2404:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2404:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2397:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2397:6:2"
																		},
																		"nativeSrc": "2397:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2390:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:2"
																},
																"nativeSrc": "2390:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2390:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2379:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2379:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2327:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2351:5:2",
														"nodeType": "YulTypedName",
														"src": "2351:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2361:7:2",
														"nodeType": "YulTypedName",
														"src": "2361:7:2",
														"type": ""
													}
												],
												"src": "2327:90:2"
											},
											{
												"body": {
													"nativeSrc": "2463:76:2",
													"nodeType": "YulBlock",
													"src": "2463:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2517:16:2",
																"nodeType": "YulBlock",
																"src": "2517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:2"
																			},
																			"nativeSrc": "2519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2519:12:2"
																		},
																		"nativeSrc": "2519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2486:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2486:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2493:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "2493:14:2"
																				},
																				"nativeSrc": "2493:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2493:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2483:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2483:2:2"
																		},
																		"nativeSrc": "2483:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2476:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:2"
																},
																"nativeSrc": "2476:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2476:40:2"
															},
															"nativeSrc": "2473:60:2",
															"nodeType": "YulIf",
															"src": "2473:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2423:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2456:5:2",
														"nodeType": "YulTypedName",
														"src": "2456:5:2",
														"type": ""
													}
												],
												"src": "2423:116:2"
											},
											{
												"body": {
													"nativeSrc": "2605:77:2",
													"nodeType": "YulBlock",
													"src": "2605:77:2",
													"statements": [
														{
															"nativeSrc": "2615:22:2",
															"nodeType": "YulAssignment",
															"src": "2615:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2630:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2630:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2624:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2624:5:2"
																},
																"nativeSrc": "2624:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2624:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2615:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2615:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2670:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2670:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2646:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "2646:23:2"
																},
																"nativeSrc": "2646:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2646:30:2"
															},
															"nativeSrc": "2646:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2646:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2545:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2583:6:2",
														"nodeType": "YulTypedName",
														"src": "2583:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2591:3:2",
														"nodeType": "YulTypedName",
														"src": "2591:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2599:5:2",
														"nodeType": "YulTypedName",
														"src": "2599:5:2",
														"type": ""
													}
												],
												"src": "2545:137:2"
											},
											{
												"body": {
													"nativeSrc": "2762:271:2",
													"nodeType": "YulBlock",
													"src": "2762:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2808:83:2",
																"nodeType": "YulBlock",
																"src": "2808:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2810:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2810:77:2"
																			},
																			"nativeSrc": "2810:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2810:79:2"
																		},
																		"nativeSrc": "2810:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2810:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2783:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2792:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2792:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2779:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:2"
																		},
																		"nativeSrc": "2779:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2804:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2804:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2775:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:2"
																},
																"nativeSrc": "2775:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2775:32:2"
															},
															"nativeSrc": "2772:119:2",
															"nodeType": "YulIf",
															"src": "2772:119:2"
														},
														{
															"nativeSrc": "2901:125:2",
															"nodeType": "YulBlock",
															"src": "2901:125:2",
															"statements": [
																{
																	"nativeSrc": "2916:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2916:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2930:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2920:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2920:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2945:71:2",
																	"nodeType": "YulAssignment",
																	"src": "2945:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2988:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2988:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2999:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2999:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2984:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2984:3:2"
																				},
																				"nativeSrc": "2984:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3008:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3008:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2955:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "2955:28:2"
																		},
																		"nativeSrc": "2955:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2955:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2945:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2945:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2688:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2732:9:2",
														"nodeType": "YulTypedName",
														"src": "2732:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2743:7:2",
														"nodeType": "YulTypedName",
														"src": "2743:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2755:6:2",
														"nodeType": "YulTypedName",
														"src": "2755:6:2",
														"type": ""
													}
												],
												"src": "2688:345:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"95": [
									{
										"length": 32,
										"start": 280
									},
									{
										"length": 32,
										"start": 572
									},
									{
										"length": 32,
										"start": 790
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063359cf2b714610043578063722713f71461004d5780639ad2cd141461006b575b5f80fd5b61004b610089565b005b610055610313565b60405161006291906103ce565b60405180910390f35b6100736103b1565b60405161008091906103ce565b60405180910390f35b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561011457336040517f83cc3b6f00000000000000000000000000000000000000000000000000000000815260040161010b9190610426565b60405180910390fd5b60647f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016f9190610426565b602060405180830381865afa15801561018a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ae919061046d565b10156101e6576040517fc1336f8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360646040518363ffffffff1660e01b8152600401610296929190610498565b6020604051808303815f875af11580156102b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d691906104f4565b507f09bd3894cb7ab22415416dac0fecc519855a4b0842f1c9115e562ef557ab577b336064604051610309929190610498565b60405180910390a1565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161036d9190610426565b602060405180830381865afa158015610388573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ac919061046d565b905090565b606481565b5f819050919050565b6103c8816103b6565b82525050565b5f6020820190506103e15f8301846103bf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610410826103e7565b9050919050565b61042081610406565b82525050565b5f6020820190506104395f830184610417565b92915050565b5f80fd5b61044c816103b6565b8114610456575f80fd5b50565b5f8151905061046781610443565b92915050565b5f602082840312156104825761048161043f565b5b5f61048f84828501610459565b91505092915050565b5f6040820190506104ab5f830185610417565b6104b860208301846103bf565b9392505050565b5f8115159050919050565b6104d3816104bf565b81146104dd575f80fd5b50565b5f815190506104ee816104ca565b92915050565b5f602082840312156105095761050861043f565b5b5f610516848285016104e0565b9150509291505056fea2646970667358221220b17e465e93ea1bee1a1a56e5ffcbb048b75bd374dedd5dc6c56884da0855938464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x9AD2CD14 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x114 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x83CC3B6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1336F8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP3 SWAP2 SWAP1 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST POP PUSH32 0x9BD3894CB7AB22415416DAC0FECC519855A4B0842F1C9115E562EF557AB577B CALLER PUSH1 0x64 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x410 DUP3 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x406 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x439 PUSH0 DUP4 ADD DUP5 PUSH2 0x417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x44C DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x467 DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x43F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x48F DUP5 DUP3 DUP6 ADD PUSH2 0x459 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4AB PUSH0 DUP4 ADD DUP6 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D3 DUP2 PUSH2 0x4BF JUMP JUMPDEST DUP2 EQ PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4EE DUP2 PUSH2 0x4CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x509 JUMPI PUSH2 0x508 PUSH2 0x43F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x516 DUP5 DUP3 DUP6 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH31 0x465E93EA1BEE1A1A56E5FFCBB048B75BD374DEDD5DC6C56884DA0855938464 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "114:1121:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:479;;;:::i;:::-;;1118:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;633:479;699:16;:28;716:10;699:28;;;;;;;;;;;;;;;;;;;;;;;;;695:98;;;771:10;750:32;;;;;;;;;;;:::i;:::-;;;;;;;;695:98;417:3;806:13;:23;;;838:4;806:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;802:105;;;883:13;;;;;;;;;;;;;;802:105;966:4;935:16;:28;952:10;935:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1004:13;:22;;;1027:10;417:3;1004:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1068:37;1079:10;417:3;1068:37;;;;;;;:::i;:::-;;;;;;;;633:479::o;1118:115::-;1162:7;1188:13;:23;;;1220:4;1188:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1181:45;;1118:115;:::o;377:43::-;417:3;377:43;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:143::-;1540:5;1571:6;1565:13;1556:22;;1587:33;1614:5;1587:33;:::i;:::-;1483:143;;;;:::o;1632:351::-;1702:6;1751:2;1739:9;1730:7;1726:23;1722:32;1719:119;;;1757:79;;:::i;:::-;1719:119;1877:1;1902:64;1958:7;1949:6;1938:9;1934:22;1902:64;:::i;:::-;1892:74;;1848:128;1632:351;;;;:::o;1989:332::-;2110:4;2148:2;2137:9;2133:18;2125:26;;2161:71;2229:1;2218:9;2214:17;2205:6;2161:71;:::i;:::-;2242:72;2310:2;2299:9;2295:18;2286:6;2242:72;:::i;:::-;1989:332;;;;;:::o;2327:90::-;2361:7;2404:5;2397:13;2390:21;2379:32;;2327:90;;;:::o;2423:116::-;2493:21;2508:5;2493:21;:::i;:::-;2486:5;2483:32;2473:60;;2529:1;2526;2519:12;2473:60;2423:116;:::o;2545:137::-;2599:5;2630:6;2624:13;2615:22;;2646:30;2670:5;2646:30;:::i;:::-;2545:137;;;;:::o;2688:345::-;2755:6;2804:2;2792:9;2783:7;2779:23;2775:32;2772:119;;;2810:79;;:::i;:::-;2772:119;2930:1;2955:61;3008:7;2999:6;2988:9;2984:22;2955:61;:::i;:::-;2945:71;;2901:125;2688:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "273000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountAllowed()": "347",
								"balanceOf()": "infinite",
								"requestTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 519,
									"end": 601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 519,
									"end": 601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 594,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 564,
									"end": 594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 594,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 564,
									"end": 594,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 519,
									"end": 601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1235,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b17e465e93ea1bee1a1a56e5ffcbb048b75bd374dedd5dc6c56884da0855938464736f6c634300081a0033",
									".code": [
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "359CF2B7"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "722713F7"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "9AD2CD14"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 114,
											"end": 1235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 633,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1118,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1118,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 633,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 726,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 699,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 699,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 695,
											"end": 793,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 695,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 695,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 771,
											"end": 781,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "83CC3B6F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 750,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 695,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 695,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 806,
											"end": 819,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 806,
											"end": 829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 806,
											"end": 829,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 838,
											"end": 842,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 806,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 806,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 806,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 860,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 802,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 802,
											"end": 907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "C1336F8500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 896,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 802,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 962,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 935,
											"end": 970,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 935,
											"end": 970,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 935,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1027,
											"end": 1037,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1004,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1004,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "9BD3894CB7AB22415416DAC0FECC519855A4B0842F1C9115E562EF557AB577B"
										},
										{
											"begin": 1079,
											"end": 1089,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1068,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 1112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1201,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1220,
											"end": 1224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1188,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 377,
											"end": 420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1614,
											"end": 1619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1587,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1737,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1749,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1757,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1757,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1836,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1757,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1902,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1966,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1902,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2161,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2232,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2161,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2242,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2314,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2242,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2417,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2327,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2539,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2423,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2493,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2514,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2493,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2473,
											"end": 2533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2473,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2670,
											"end": 2675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2646,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2802,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2807,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2772,
											"end": 2891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2772,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2772,
											"end": 2891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2810,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2810,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2810,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2772,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2772,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3008,
											"end": 3015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 2997,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2955,
											"end": 3016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 3016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 3026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/MyFaucet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"amountAllowed()": "9ad2cd14",
							"balanceOf()": "722713f7",
							"requestTokens()": "359cf2b7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FaucetEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"RequestMultipleTimes\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SendTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amountAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/MyFaucet.sol\":\"MyFaucet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/token/ERC20/MyFaucet.sol\":{\"keccak256\":\"0x6c087add8e892e7f73160a17cbd696814445af23cbe0f45b5f4ee8140dfb1edd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93d33515b0283a5d9b111f877d546f69d75ac84b1dd9e2e3020251b8821236c8\",\"dweb:/ipfs/QmNW84ZsrhHzwaHmx6xKQFVAKagEsd7cEdqVALTxGdZeBe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 102,
								"contract": "contracts/token/ERC20/MyFaucet.sol:MyFaucet",
								"label": "requestedAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"contracts/token/ERC20/MyFaucet.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/MyFaucet.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"MyFaucet": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 179,
							"sourceUnit": 78,
							"src": "57:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyFaucet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "MyFaucet",
							"nameLocation": "123:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "83cc3b6f",
									"id": 84,
									"name": "RequestMultipleTimes",
									"nameLocation": "144:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "173:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "165:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:19:1"
									},
									"src": "138:46:1"
								},
								{
									"errorSelector": "c1336f85",
									"id": 86,
									"name": "FaucetEmpty",
									"nameLocation": "195:11:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "206:2:1"
									},
									"src": "189:20:1"
								},
								{
									"anonymous": false,
									"eventSelector": "09bd3894cb7ab22415416dac0fecc519855a4b0842f1c9115e562ef557ab577b",
									"id": 92,
									"name": "SendTokens",
									"nameLocation": "221:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "240:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "232:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:35:1"
									},
									"src": "215:52:1"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "immutable",
									"name": "tokenContract",
									"nameLocation": "324:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "299:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 94,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 93,
											"name": "IERC20",
											"nameLocations": [
												"299:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "299:6:1"
										},
										"referencedDeclaration": 77,
										"src": "299:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "9ad2cd14",
									"id": 98,
									"mutability": "constant",
									"name": "amountAllowed",
									"nameLocation": "401:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "377:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "417:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "requestedAddress",
									"nameLocation": "471:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "446:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 101,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 99,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "454:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "446:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 100,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "465:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "554:47:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "564:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 109,
														"name": "_tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "580:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "564:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "564:30:1"
											}
										]
									},
									"id": 113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "538:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "531:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "IERC20",
														"nameLocations": [
															"531:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "531:6:1"
													},
													"referencedDeclaration": 77,
													"src": "531:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:23:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:1"
									},
									"scope": 178,
									"src": "519:82:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "667:445:1",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 116,
														"name": "requestedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "699:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 119,
													"indexExpression": {
														"expression": {
															"id": 117,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "716:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "720:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "716:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "699:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "695:98:1",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "729:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 121,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "771:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "775:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "771:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 120,
																	"name": "RequestMultipleTimes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "750:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "750:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 124,
															"nodeType": "RevertStatement",
															"src": "743:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 131,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "838:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MyFaucet_$178",
																			"typeString": "contract MyFaucet"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MyFaucet_$178",
																			"typeString": "contract MyFaucet"
																		}
																	],
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "830:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 129,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "830:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "830:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 127,
																"name": "tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "806:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "820:9:1",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "806:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "806:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 134,
														"name": "amountAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "847:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "806:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 140,
												"nodeType": "IfStatement",
												"src": "802:105:1",
												"trueBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "862:45:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 136,
																	"name": "FaucetEmpty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "883:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 138,
															"nodeType": "RevertStatement",
															"src": "876:20:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 141,
															"name": "requestedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "935:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 144,
														"indexExpression": {
															"expression": {
																"id": 142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "952:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "956:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "952:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "935:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "966:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "935:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "935:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1027:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1031:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1027:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "amountAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1039:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 148,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1004:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1018:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1004:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1004:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1004:49:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1079:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1083:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1079:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "amountAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1091:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "SendTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1068:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "EmitStatement",
												"src": "1063:42:1"
											}
										]
									},
									"functionSelector": "359cf2b7",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestTokens",
									"nameLocation": "642:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:1"
									},
									"scope": 178,
									"src": "633:479:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1171:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 172,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1220:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyFaucet_$178",
																		"typeString": "contract MyFaucet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyFaucet_$178",
																		"typeString": "contract MyFaucet"
																	}
																],
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1212:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1212:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1212:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 168,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1188:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1202:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1188:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 175,
												"nodeType": "Return",
												"src": "1181:45:1"
											}
										]
									},
									"functionSelector": "722713f7",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1127:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1162:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:9:1"
									},
									"scope": 178,
									"src": "1118:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "114:1121:1",
							"usedErrors": [
								84,
								86
							],
							"usedEvents": [
								92
							]
						}
					],
					"src": "32:1203:1"
				},
				"id": 1
			}
		}
	}
}