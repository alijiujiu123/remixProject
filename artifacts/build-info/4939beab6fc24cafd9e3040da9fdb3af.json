{
	"id": "4939beab6fc24cafd9e3040da9fdb3af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/ERC20/CustomeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"contracts/utils/GrantPrivileges.sol\";\ncontract MyERC20 is ERC20,GrantPrivileges {\n    // string public constant TOKEN_NAME=\"NEZHA\";\n    // string public constant TOKEN_SYMBOL=\"NZ\";\n    constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_){\n        _mint(msg.sender, 10000000000*10**18);\n    }\n    function mint(address account, uint256 value) external onlyAdmin {\n        _mint(account, value);\n    }\n\n}"
			},
			"contracts/utils/GrantPrivileges.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport \"@openzeppelin/contracts/utils/SlotDerivation.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\n/**\n * @title GrantPrivileges\n * @dev Abstract contract to manage time-based access control for specific functions.\n * Admin can grant temporary access to users, enabling functionalities like subscriptions\n * or time-limited permissions.\n *\n * ## Usage Example:\n * contract EatFoodContract is GrantPrivileges {\n *     function eatFood(string calldata str) external view onlyOwner returns (bytes32) {\n *         return keccak256(abi.encode(str));\n *     }\n * }\n *\n * 1. Inherit from `GrantPrivileges` in your contract.\n * 2. Use `onlyAdmin` for admin-restricted functions and `onlyOwner` for time-limited access control.\n * 3. Deploy your contract, and the deploying address will be the initial admin.\n * 4. Admin can add authorized users using `addOwner()`.\n * 5. Authorized users can access `onlyOwner` functions within the granted time frame.\n */\nabstract contract GrantPrivileges {\n    using SlotDerivation for *;\n    using StorageSlot for *;\n\n    string public constant GRANTPRIVILEGES_NAMESPACE = \"GrantPrivileges.Namespace\";\n\n    // Custom errors for better gas efficiency and debugging\n    error AddressEmpty();\n    error TimeLimitZero();\n    error OnlyAdmin(string info);\n    error OnlyLegalOwner(string info);\n\n    // Storage key for admin address\n    string private constant ADMIN_ADDRESS = \"GrantPrivileges.adminAddress\";\n\n    /**\n     * @dev Retrieves the current admin address from the storage slot.\n     */\n    function _getAdminAddress() private view returns (address) {\n        return ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value;\n    }\n\n    /**\n     * @dev Sets a new admin address in the storage slot.\n     * @param _newAddress New admin address.\n     */\n    function _setAdminAddress(address _newAddress) private {\n        ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value = _newAddress;\n    }\n\n    // Struct to store information about authorized users\n    struct OwnerInfo {\n        uint timestamp;    // The time when authorization starts\n        uint timeLimit;    // Duration of authorization in seconds\n    }\n\n    /**\n     * @dev Retrieves the storage slot for an owner's authorization info.\n     * @param slot The storage slot derived for the owner.\n     */\n    function _getOwnerInfoSlot(bytes32 slot) private pure returns (OwnerInfo storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns the OwnerInfo struct for a given address.\n     * @param _address Address of the owner to fetch authorization info.\n     */\n    function _getOwnerInfoByAddress(address _address) private pure returns (OwnerInfo storage r) {\n        bytes32 ownerInfoSlot = GRANTPRIVILEGES_NAMESPACE.erc7201Slot().deriveMapping(_address);\n        return _getOwnerInfoSlot(ownerInfoSlot);\n    }\n\n    /**\n     * @dev Constructor sets the deploying address as the initial admin.\n     */\n    constructor() {\n        _setAdminAddress(msg.sender);\n    }\n\n    // Modifiers for access control\n\n    /**\n     * @dev Restricts function access to the admin only.\n     */\n    modifier onlyAdmin() {\n        if (msg.sender != _getAdminAddress()) {\n            revert OnlyAdmin(\"only admin address can access\");\n        }\n        _;\n    }\n\n    /**\n     * @dev Restricts function access to the admin or valid authorized users.\n     */\n    modifier onlyOwner() {\n        if (msg.sender != _getAdminAddress() && !_legalOwner(msg.sender)) {\n            revert OnlyLegalOwner(\"only legal owner address can access\");\n        }\n        _;\n    }\n\n    /**\n     * @dev Checks if an address is within its authorized period.\n     * @param senderAddress The address to verify.\n     */\n    function _legalOwner(address senderAddress) private view returns (bool) {\n        OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(senderAddress);\n        uint timestamp = ownerInfo.timestamp;\n        uint timeLimit = ownerInfo.timeLimit;\n\n        if (timestamp == 0 || timeLimit == 0) {\n            return false; // Not authorized\n        }\n\n        // Check if authorization has expired\n        if (block.timestamp > (timestamp + timeLimit)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @dev Adds a new authorized user with a time limit.\n     * @param newOwner Address of the new user.\n     * @param _timeLimit Duration of access in seconds.\n     */\n    function addOwner(address newOwner, uint _timeLimit) external onlyAdmin {\n        if (newOwner == address(0)) {\n            revert AddressEmpty();\n        }\n        if (_timeLimit == 0) {\n            revert TimeLimitZero();\n        }\n        OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(newOwner);\n        ownerInfo.timestamp = block.timestamp;\n        ownerInfo.timeLimit = _timeLimit;\n    }\n\n    /**\n     * @dev Allows authorized users to check their remaining access time.\n     * @return Remaining time in seconds, or 0 if authorization has expired.\n     */\n    function getRemainingTime() external view onlyOwner returns (uint) {\n        OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(msg.sender);\n        uint timestamp = ownerInfo.timestamp;\n        uint timeLimit = ownerInfo.timeLimit;\n\n        if (timestamp == 0 || timeLimit == 0) {\n            return 0; // No authorization\n        }\n\n        if ((timestamp + timeLimit) < block.timestamp) {\n            return 0; // Authorization expired\n        }\n\n        return (timestamp + timeLimit) - block.timestamp;\n    }\n\n    /**\n     * @dev Public function to get the current admin address.\n     * @return Admin address.\n     */\n    function getAdminAddress() external view returns (address) {\n        return _getAdminAddress();\n    }\n\n    /**\n     * @dev Allows the current admin to transfer admin privileges to a new address.\n     * @param newAdmin Address of the new admin.\n     */\n    function changeAdmin(address newAdmin) external onlyAdmin {\n        if (newAdmin == address(0)) {\n            revert AddressEmpty();\n        }\n        _setAdminAddress(newAdmin);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"SlotDerivation": {
					"abi": [],
					"devdoc": {
						"details": "Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1599:5322  library SlotDerivation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1599:5322  library SlotDerivation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d461fa6f38f3f99517af844882f41bd62679ec9b0b4fa2c6e5698c778f141ed064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d461fa6f38f3f99517af844882f41bd62679ec9b0b4fa2c6e5698c778f141ed064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH2 0xFA6F CODESIZE RETURN EXTDELEGATECALL SWAP6 OR 0xAF DUP5 BASEFEE DUP3 DELEGATECALL SHL 0xD6 0x26 PUSH26 0xEC9B0B4FA2C6E5698C778F141ED064736F6C634300081E003300 ",
							"sourceMap": "1599:3723:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d461fa6f38f3f99517af844882f41bd62679ec9b0b4fa2c6e5698c778f141ed064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH2 0xFA6F CODESIZE RETURN EXTDELEGATECALL SWAP6 OR 0xAF DUP5 BASEFEE DUP3 DELEGATECALL SHL 0xD6 0x26 PUSH26 0xEC9B0B4FA2C6E5698C778F141ED064736F6C634300081E003300 ",
							"sourceMap": "1599:3723:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"deriveArray(bytes32)": "infinite",
								"deriveMapping(bytes32,address)": "infinite",
								"deriveMapping(bytes32,bool)": "infinite",
								"deriveMapping(bytes32,bytes memory)": "infinite",
								"deriveMapping(bytes32,bytes32)": "infinite",
								"deriveMapping(bytes32,int256)": "infinite",
								"deriveMapping(bytes32,string memory)": "infinite",
								"deriveMapping(bytes32,uint256)": "infinite",
								"erc7201Slot(string memory)": "infinite",
								"offset(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 5322,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d461fa6f38f3f99517af844882f41bd62679ec9b0b4fa2c6e5698c778f141ed064736f6c634300081e0033",
									".code": [
										{
											"begin": 1599,
											"end": 5322,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 5322,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/ERC20/CustomeERC20.sol",
								"contracts/utils/GrantPrivileges.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/ERC20/CustomeERC20.sol",
								"contracts/utils/GrantPrivileges.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/CustomeERC20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AddressEmpty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "info",
									"type": "string"
								}
							],
							"name": "OnlyAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "info",
									"type": "string"
								}
							],
							"name": "OnlyLegalOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TimeLimitZero",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GRANTPRIVILEGES_NAMESPACE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_timeLimit",
									"type": "uint256"
								}
							],
							"name": "addOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAdminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRemainingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addOwner(address,uint256)": {
								"details": "Adds a new authorized user with a time limit.",
								"params": {
									"_timeLimit": "Duration of access in seconds.",
									"newOwner": "Address of the new user."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"changeAdmin(address)": {
								"details": "Allows the current admin to transfer admin privileges to a new address.",
								"params": {
									"newAdmin": "Address of the new admin."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAdminAddress()": {
								"details": "Public function to get the current admin address.",
								"returns": {
									"_0": "Admin address."
								}
							},
							"getRemainingTime()": {
								"details": "Allows authorized users to check their remaining access time.",
								"returns": {
									"_0": "Remaining time in seconds, or 0 if authorization has expired."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/CustomeERC20.sol\":159:548  contract MyERC20 is ERC20,GrantPrivileges {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":306:437  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":368:373  name_ */\n  dup2\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":375:382  symbol_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/utils/GrantPrivileges.sol\":3053:3081  _setAdminAddress(msg.sender) */\n  tag_12\n    /* \"contracts/utils/GrantPrivileges.sol\":3070:3080  msg.sender */\n  caller\n    /* \"contracts/utils/GrantPrivileges.sol\":3053:3069  _setAdminAddress */\n  shl(0x20, tag_13)\n    /* \"contracts/utils/GrantPrivileges.sol\":3053:3081  _setAdminAddress(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":393:430  _mint(msg.sender, 10000000000*10**18) */\n  tag_15\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":399:409  msg.sender */\n  caller\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":411:429  10000000000*10**18 */\n  0x204fce5e3e25026110000000\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":393:398  _mint */\n  shl(0x20, tag_16)\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":393:430  _mint(msg.sender, 10000000000*10**18) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":306:437  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_){... */\n  pop\n  pop\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":159:548  contract MyERC20 is ERC20,GrantPrivileges {... */\n  jump(tag_17)\n    /* \"contracts/utils/GrantPrivileges.sol\":1857:1993  function _setAdminAddress(address _newAddress) private {... */\ntag_13:\n    /* \"contracts/utils/GrantPrivileges.sol\":1975:1986  _newAddress */\n  dup1\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1966  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n  tag_19\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1949  ADMIN_ADDRESS.erc7201Slot() */\n  tag_20\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1935  ADMIN_ADDRESS */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1c\n  dup2\n  mstore\n  0x20\n  add\n  0x4772616e7450726976696c656765732e61646d696e4164647265737300000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1947  ADMIN_ADDRESS.erc7201Slot */\n  shl(0x20, tag_21)\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1949  ADMIN_ADDRESS.erc7201Slot() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1964  ADMIN_ADDRESS.erc7201Slot().getAddressSlot */\n  shl(0x20, tag_22)\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1966  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1972  ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value */\n  0x00\n  add\n  0x00\n    /* \"contracts/utils/GrantPrivileges.sol\":1922:1986  ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value = _newAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/utils/GrantPrivileges.sol\":1857:1993  function _setAdminAddress(address _newAddress) private {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1707:1984  function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1776:1788  bytes32 slot */\n  0x00\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1907:1908  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1894:1903  namespace */\n  dup3\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1888:1904  mload(namespace) */\n  mload\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1881:1885  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1870:1879  namespace */\n  dup5\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1866:1886  add(namespace, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1856:1905  keccak256(add(namespace, 0x20), mload(namespace)) */\n  keccak256\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1852:1909  sub(keccak256(add(namespace, 0x20), mload(namespace)), 1) */\n  sub\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1846:1850  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1839:1910  mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1)) */\n  mstore\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1962:1966  0xff */\n  0xff\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1958:1967  not(0xff) */\n  not\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1951:1955  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1945:1949  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1935:1956  keccak256(0x00, 0x20) */\n  keccak256\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1931:1968  and(keccak256(0x00, 0x20), not(0xff)) */\n  and\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1923:1968  slot := and(keccak256(0x00, 0x20), not(0xff)) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1707:1984  function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_35)\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_43:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_44:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_45:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_46:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_47:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_48:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_49:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_50:\n    /* \"#utility.yul\":957:984   */\n  tag_89\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_91\n  tag_49\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1030:1118   */\ntag_90:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_51:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_93\n  tag_43\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_94\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_50\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_52:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_97\n  tag_49\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1434:1490   */\ntag_96:\n    /* \"#utility.yul\":1508:1537   */\n  tag_98\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_48\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_53:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_54:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_101\n    /* \"#utility.yul\":1885:1934   */\n  tag_102\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_52\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1869:1935   */\n  tag_51\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_104\n  tag_47\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2010:2122   */\ntag_103:\n    /* \"#utility.yul\":2131:2183   */\n  tag_105\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_55:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_108\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2292:2414   */\ntag_107:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_109\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_54\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_112\n  tag_44\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2694:2813   */\ntag_111:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_114\n  tag_45\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2889:3006   */\ntag_113:\n    /* \"#utility.yul\":3030:3104   */\n  tag_115\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_117\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3191:3308   */\ntag_116:\n    /* \"#utility.yul\":3332:3406   */\n  tag_118\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_55\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_56:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_57:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_58:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_122:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_124\n  tag_57\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3950:4034   */\ntag_123:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_59:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_60:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_61:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_62:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_129\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_61\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4665:4704   */\n  tag_130\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_61\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_63:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_64:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_65:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_134\n    /* \"#utility.yul\":5054:5088   */\n  tag_135\n    /* \"#utility.yul\":5063:5087   */\n  tag_136\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_63\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5054:5088   */\n  tag_64\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5036:5089   */\n  tag_63\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_66:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_67:\n    /* \"#utility.yul\":5292:5331   */\n  tag_139\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5353:5444   */\n  tag_140\n    /* \"#utility.yul\":5402:5443   */\n  tag_141\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_66\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_62\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_68:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_69:\n    /* \"#utility.yul\":5613:5645   */\n  tag_144\n  tag_68\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5654:5719   */\n  tag_145\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_67\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_70:\n    /* \"#utility.yul\":5791:5911   */\ntag_147:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_150\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_71:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_153\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_59\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6142:6171   */\n  tag_154\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_60\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_155:\n    /* \"#utility.yul\":6369:6449   */\n  tag_156\n    /* \"#utility.yul\":6425:6447   */\n  tag_157\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_60\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_70\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_152:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_72:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_73:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_160\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_72\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_74:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_162\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_73\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_9:\n    /* \"#utility.yul\":7186:7223   */\n  tag_164\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_56\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_166\n  tag_49\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7274:7330   */\ntag_165:\n    /* \"#utility.yul\":7354:7392   */\n  tag_167\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_58\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7439:7506   */\n  tag_168\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_71\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_171:\n    /* \"#utility.yul\":8380:8447   */\n  tag_172\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_74\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_169)\n    /* \"#utility.yul\":7601:8219   */\ntag_170:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_173\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_59\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_174:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_174)\ntag_176:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_178\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_73\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_177:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_169:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8470:8596   */\ntag_75:\n    /* \"#utility.yul\":8507:8514   */\n  0x00\n    /* \"#utility.yul\":8547:8589   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8536:8590   */\n  and\n    /* \"#utility.yul\":8525:8590   */\n  swap1\n  pop\n    /* \"#utility.yul\":8470:8596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8602:8698   */\ntag_76:\n    /* \"#utility.yul\":8639:8646   */\n  0x00\n    /* \"#utility.yul\":8668:8692   */\n  tag_181\n    /* \"#utility.yul\":8686:8691   */\n  dup3\n    /* \"#utility.yul\":8668:8692   */\n  tag_75\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8657:8692   */\n  swap1\n  pop\n    /* \"#utility.yul\":8602:8698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8704:8822   */\ntag_77:\n    /* \"#utility.yul\":8791:8815   */\n  tag_183\n    /* \"#utility.yul\":8809:8814   */\n  dup2\n    /* \"#utility.yul\":8791:8815   */\n  tag_76\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8786:8789   */\n  dup3\n    /* \"#utility.yul\":8779:8816   */\n  mstore\n    /* \"#utility.yul\":8704:8822   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8828:9050   */\ntag_26:\n    /* \"#utility.yul\":8921:8925   */\n  0x00\n    /* \"#utility.yul\":8959:8961   */\n  0x20\n    /* \"#utility.yul\":8948:8957   */\n  dup3\n    /* \"#utility.yul\":8944:8962   */\n  add\n    /* \"#utility.yul\":8936:8962   */\n  swap1\n  pop\n    /* \"#utility.yul\":8972:9043   */\n  tag_185\n    /* \"#utility.yul\":9040:9041   */\n  0x00\n    /* \"#utility.yul\":9029:9038   */\n  dup4\n    /* \"#utility.yul\":9025:9042   */\n  add\n    /* \"#utility.yul\":9016:9022   */\n  dup5\n    /* \"#utility.yul\":8972:9043   */\n  tag_77\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8828:9050   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9056:9236   */\ntag_78:\n    /* \"#utility.yul\":9104:9181   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9101:9102   */\n  0x00\n    /* \"#utility.yul\":9094:9182   */\n  mstore\n    /* \"#utility.yul\":9201:9205   */\n  0x11\n    /* \"#utility.yul\":9198:9199   */\n  0x04\n    /* \"#utility.yul\":9191:9206   */\n  mstore\n    /* \"#utility.yul\":9225:9229   */\n  0x24\n    /* \"#utility.yul\":9222:9223   */\n  0x00\n    /* \"#utility.yul\":9215:9230   */\n  revert\n    /* \"#utility.yul\":9242:9433   */\ntag_34:\n    /* \"#utility.yul\":9282:9285   */\n  0x00\n    /* \"#utility.yul\":9301:9321   */\n  tag_188\n    /* \"#utility.yul\":9319:9320   */\n  dup3\n    /* \"#utility.yul\":9301:9321   */\n  tag_63\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9296:9321   */\n  swap2\n  pop\n    /* \"#utility.yul\":9335:9355   */\n  tag_189\n    /* \"#utility.yul\":9353:9354   */\n  dup4\n    /* \"#utility.yul\":9335:9355   */\n  tag_63\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9330:9355   */\n  swap3\n  pop\n    /* \"#utility.yul\":9378:9379   */\n  dup3\n    /* \"#utility.yul\":9375:9376   */\n  dup3\n    /* \"#utility.yul\":9371:9380   */\n  add\n    /* \"#utility.yul\":9364:9380   */\n  swap1\n  pop\n    /* \"#utility.yul\":9399:9402   */\n  dup1\n    /* \"#utility.yul\":9396:9397   */\n  dup3\n    /* \"#utility.yul\":9393:9403   */\n  gt\n    /* \"#utility.yul\":9390:9426   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":9406:9424   */\n  tag_191\n  tag_78\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9390:9426   */\ntag_190:\n    /* \"#utility.yul\":9242:9433   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9439:9557   */\ntag_79:\n    /* \"#utility.yul\":9526:9550   */\n  tag_193\n    /* \"#utility.yul\":9544:9549   */\n  dup2\n    /* \"#utility.yul\":9526:9550   */\n  tag_63\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9521:9524   */\n  dup3\n    /* \"#utility.yul\":9514:9551   */\n  mstore\n    /* \"#utility.yul\":9439:9557   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9563:10005   */\ntag_38:\n    /* \"#utility.yul\":9712:9716   */\n  0x00\n    /* \"#utility.yul\":9750:9752   */\n  0x60\n    /* \"#utility.yul\":9739:9748   */\n  dup3\n    /* \"#utility.yul\":9735:9753   */\n  add\n    /* \"#utility.yul\":9727:9753   */\n  swap1\n  pop\n    /* \"#utility.yul\":9763:9834   */\n  tag_195\n    /* \"#utility.yul\":9831:9832   */\n  0x00\n    /* \"#utility.yul\":9820:9829   */\n  dup4\n    /* \"#utility.yul\":9816:9833   */\n  add\n    /* \"#utility.yul\":9807:9813   */\n  dup7\n    /* \"#utility.yul\":9763:9834   */\n  tag_77\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9844:9916   */\n  tag_196\n    /* \"#utility.yul\":9912:9914   */\n  0x20\n    /* \"#utility.yul\":9901:9910   */\n  dup4\n    /* \"#utility.yul\":9897:9915   */\n  add\n    /* \"#utility.yul\":9888:9894   */\n  dup6\n    /* \"#utility.yul\":9844:9916   */\n  tag_79\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9926:9998   */\n  tag_197\n    /* \"#utility.yul\":9994:9996   */\n  0x40\n    /* \"#utility.yul\":9983:9992   */\n  dup4\n    /* \"#utility.yul\":9979:9997   */\n  add\n    /* \"#utility.yul\":9970:9976   */\n  dup5\n    /* \"#utility.yul\":9926:9998   */\n  tag_79\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9563:10005   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10011:10233   */\ntag_42:\n    /* \"#utility.yul\":10104:10108   */\n  0x00\n    /* \"#utility.yul\":10142:10144   */\n  0x20\n    /* \"#utility.yul\":10131:10140   */\n  dup3\n    /* \"#utility.yul\":10127:10145   */\n  add\n    /* \"#utility.yul\":10119:10145   */\n  swap1\n  pop\n    /* \"#utility.yul\":10155:10226   */\n  tag_199\n    /* \"#utility.yul\":10223:10224   */\n  0x00\n    /* \"#utility.yul\":10212:10221   */\n  dup4\n    /* \"#utility.yul\":10208:10225   */\n  add\n    /* \"#utility.yul\":10199:10205   */\n  dup5\n    /* \"#utility.yul\":10155:10226   */\n  tag_79\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10011:10233   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/CustomeERC20.sol\":159:548  contract MyERC20 is ERC20,GrantPrivileges {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":159:548  contract MyERC20 is ERC20,GrantPrivileges {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb2e6b912\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xefb98bcf\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95cfbf6d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3cc38f5c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/GrantPrivileges.sol\":4498:4898  function addOwner(address newOwner, uint _timeLimit) external onlyAdmin {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":442:545  function mint(address account, uint256 value) external onlyAdmin {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/GrantPrivileges.sol\":5956:6140  function changeAdmin(address newAdmin) external onlyAdmin {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/utils/GrantPrivileges.sol\":1125:1203  string public constant GRANTPRIVILEGES_NAMESPACE = \"GrantPrivileges.Namespace\" */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/GrantPrivileges.sol\":5700:5801  function getAdminAddress() external view returns (address) {... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/GrantPrivileges.sol\":5071:5586  function getRemainingTime() external view onlyOwner returns (uint) {... */\n    tag_17:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":4498:4898  function addOwner(address newOwner, uint _timeLimit) external onlyAdmin {... */\n    tag_46:\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      tag_101\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3269  _getAdminAddress */\n      tag_102\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3249  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n      tag_103\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":3294:3336  OnlyAdmin(\"only admin address can access\") */\n      mload(0x40)\n      0x0a2a9e3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n    tag_103:\n        /* \"contracts/utils/GrantPrivileges.sol\":4604:4605  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4584:4606  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":4584:4592  newOwner */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":4584:4606  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/utils/GrantPrivileges.sol\":4580:4654  if (newOwner == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":4629:4643  AddressEmpty() */\n      mload(0x40)\n      0x5bb7a72300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":4580:4654  if (newOwner == address(0)) {... */\n    tag_107:\n        /* \"contracts/utils/GrantPrivileges.sol\":4681:4682  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4667:4677  _timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":4667:4682  _timeLimit == 0 */\n      sub\n        /* \"contracts/utils/GrantPrivileges.sol\":4663:4731  if (_timeLimit == 0) {... */\n      tag_108\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":4705:4720  TimeLimitZero() */\n      mload(0x40)\n      0xe16a8aa400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":4663:4731  if (_timeLimit == 0) {... */\n    tag_108:\n        /* \"contracts/utils/GrantPrivileges.sol\":4740:4767  OwnerInfo storage ownerInfo */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4770:4802  _getOwnerInfoByAddress(newOwner) */\n      tag_109\n        /* \"contracts/utils/GrantPrivileges.sol\":4793:4801  newOwner */\n      dup4\n        /* \"contracts/utils/GrantPrivileges.sol\":4770:4792  _getOwnerInfoByAddress */\n      tag_110\n        /* \"contracts/utils/GrantPrivileges.sol\":4770:4802  _getOwnerInfoByAddress(newOwner) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/utils/GrantPrivileges.sol\":4740:4802  OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(newOwner) */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4834:4849  block.timestamp */\n      timestamp\n        /* \"contracts/utils/GrantPrivileges.sol\":4812:4821  ownerInfo */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":4812:4831  ownerInfo.timestamp */\n      0x00\n      add\n        /* \"contracts/utils/GrantPrivileges.sol\":4812:4849  ownerInfo.timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4881:4891  _timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":4859:4868  ownerInfo */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":4859:4878  ownerInfo.timeLimit */\n      0x01\n      add\n        /* \"contracts/utils/GrantPrivileges.sol\":4859:4891  ownerInfo.timeLimit = _timeLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4570:4898  {... */\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4498:4898  function addOwner(address newOwner, uint _timeLimit) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":442:545  function mint(address account, uint256 value) external onlyAdmin {... */\n    tag_49:\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      tag_112\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3269  _getAdminAddress */\n      tag_102\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3249  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n      tag_113\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":3294:3336  OnlyAdmin(\"only admin address can access\") */\n      mload(0x40)\n      0x0a2a9e3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_105\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n    tag_113:\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":517:538  _mint(account, value) */\n      tag_116\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":523:530  account */\n      dup3\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":532:537  value */\n      dup3\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":517:522  _mint */\n      tag_117\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":517:538  _mint(account, value) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/token/ERC20/CustomeERC20.sol\":442:545  function mint(address account, uint256 value) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":5956:6140  function changeAdmin(address newAdmin) external onlyAdmin {... */\n    tag_57:\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      tag_120\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3269  _getAdminAddress */\n      tag_102\n        /* \"contracts/utils/GrantPrivileges.sol\":3253:3271  _getAdminAddress() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3249  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":3239:3271  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n      tag_121\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":3294:3336  OnlyAdmin(\"only admin address can access\") */\n      mload(0x40)\n      0x0a2a9e3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_105\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":3235:3347  if (msg.sender != _getAdminAddress()) {... */\n    tag_121:\n        /* \"contracts/utils/GrantPrivileges.sol\":6048:6049  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":6028:6050  newAdmin == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":6028:6036  newAdmin */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":6028:6050  newAdmin == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/utils/GrantPrivileges.sol\":6024:6098  if (newAdmin == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":6073:6087  AddressEmpty() */\n      mload(0x40)\n      0x5bb7a72300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":6024:6098  if (newAdmin == address(0)) {... */\n    tag_124:\n        /* \"contracts/utils/GrantPrivileges.sol\":6107:6133  _setAdminAddress(newAdmin) */\n      tag_125\n        /* \"contracts/utils/GrantPrivileges.sol\":6124:6132  newAdmin */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":6107:6123  _setAdminAddress */\n      tag_126\n        /* \"contracts/utils/GrantPrivileges.sol\":6107:6133  _setAdminAddress(newAdmin) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/utils/GrantPrivileges.sol\":5956:6140  function changeAdmin(address newAdmin) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":1125:1203  string public constant GRANTPRIVILEGES_NAMESPACE = \"GrantPrivileges.Namespace\" */\n    tag_59:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x4772616e7450726976696c656765732e4e616d65737061636500000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":5700:5801  function getAdminAddress() external view returns (address) {... */\n    tag_69:\n        /* \"contracts/utils/GrantPrivileges.sol\":5750:5757  address */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5776:5794  _getAdminAddress() */\n      tag_137\n        /* \"contracts/utils/GrantPrivileges.sol\":5776:5792  _getAdminAddress */\n      tag_102\n        /* \"contracts/utils/GrantPrivileges.sol\":5776:5794  _getAdminAddress() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/utils/GrantPrivileges.sol\":5769:5794  return _getAdminAddress() */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":5700:5801  function getAdminAddress() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":5071:5586  function getRemainingTime() external view onlyOwner returns (uint) {... */\n    tag_78:\n        /* \"contracts/utils/GrantPrivileges.sol\":5132:5136  uint */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":3513:3531  _getAdminAddress() */\n      tag_140\n        /* \"contracts/utils/GrantPrivileges.sol\":3513:3529  _getAdminAddress */\n      tag_102\n        /* \"contracts/utils/GrantPrivileges.sol\":3513:3531  _getAdminAddress() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/utils/GrantPrivileges.sol\":3499:3531  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":3499:3509  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":3499:3531  msg.sender != _getAdminAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/utils/GrantPrivileges.sol\":3499:3559  msg.sender != _getAdminAddress() && !_legalOwner(msg.sender) */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":3536:3559  _legalOwner(msg.sender) */\n      tag_142\n        /* \"contracts/utils/GrantPrivileges.sol\":3548:3558  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":3536:3547  _legalOwner */\n      tag_143\n        /* \"contracts/utils/GrantPrivileges.sol\":3536:3559  _legalOwner(msg.sender) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/utils/GrantPrivileges.sol\":3535:3559  !_legalOwner(msg.sender) */\n      iszero\n        /* \"contracts/utils/GrantPrivileges.sol\":3499:3559  msg.sender != _getAdminAddress() && !_legalOwner(msg.sender) */\n    tag_141:\n        /* \"contracts/utils/GrantPrivileges.sol\":3495:3646  if (msg.sender != _getAdminAddress() && !_legalOwner(msg.sender)) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":3582:3635  OnlyLegalOwner(\"only legal owner address can access\") */\n      mload(0x40)\n      0x5e9b54e100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/GrantPrivileges.sol\":3495:3646  if (msg.sender != _getAdminAddress() && !_legalOwner(msg.sender)) {... */\n    tag_144:\n        /* \"contracts/utils/GrantPrivileges.sol\":5148:5175  OwnerInfo storage ownerInfo */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5178:5212  _getOwnerInfoByAddress(msg.sender) */\n      tag_148\n        /* \"contracts/utils/GrantPrivileges.sol\":5201:5211  msg.sender */\n      caller\n        /* \"contracts/utils/GrantPrivileges.sol\":5178:5200  _getOwnerInfoByAddress */\n      tag_110\n        /* \"contracts/utils/GrantPrivileges.sol\":5178:5212  _getOwnerInfoByAddress(msg.sender) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/utils/GrantPrivileges.sol\":5148:5212  OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":5222:5236  uint timestamp */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5239:5248  ownerInfo */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":5239:5258  ownerInfo.timestamp */\n      0x00\n      add\n      sload\n        /* \"contracts/utils/GrantPrivileges.sol\":5222:5258  uint timestamp = ownerInfo.timestamp */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":5268:5282  uint timeLimit */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5285:5294  ownerInfo */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":5285:5304  ownerInfo.timeLimit */\n      0x01\n      add\n      sload\n        /* \"contracts/utils/GrantPrivileges.sol\":5268:5304  uint timeLimit = ownerInfo.timeLimit */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":5332:5333  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5319:5328  timestamp */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":5319:5333  timestamp == 0 */\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":5319:5351  timestamp == 0 || timeLimit == 0 */\n      dup1\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":5350:5351  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5337:5346  timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":5337:5351  timeLimit == 0 */\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":5319:5351  timestamp == 0 || timeLimit == 0 */\n    tag_149:\n        /* \"contracts/utils/GrantPrivileges.sol\":5315:5406  if (timestamp == 0 || timeLimit == 0) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":5374:5375  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5367:5375  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_147)\n        /* \"contracts/utils/GrantPrivileges.sol\":5315:5406  if (timestamp == 0 || timeLimit == 0) {... */\n    tag_150:\n        /* \"contracts/utils/GrantPrivileges.sol\":5446:5461  block.timestamp */\n      timestamp\n        /* \"contracts/utils/GrantPrivileges.sol\":5433:5442  timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":5421:5430  timestamp */\n      dup4\n        /* \"contracts/utils/GrantPrivileges.sol\":5421:5442  timestamp + timeLimit */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/utils/GrantPrivileges.sol\":5420:5461  (timestamp + timeLimit) < block.timestamp */\n      lt\n        /* \"contracts/utils/GrantPrivileges.sol\":5416:5521  if ((timestamp + timeLimit) < block.timestamp) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":5484:5485  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":5477:5485  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_147)\n        /* \"contracts/utils/GrantPrivileges.sol\":5416:5521  if ((timestamp + timeLimit) < block.timestamp) {... */\n    tag_153:\n        /* \"contracts/utils/GrantPrivileges.sol\":5564:5579  block.timestamp */\n      timestamp\n        /* \"contracts/utils/GrantPrivileges.sol\":5551:5560  timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":5539:5548  timestamp */\n      dup4\n        /* \"contracts/utils/GrantPrivileges.sol\":5539:5560  timestamp + timeLimit */\n      tag_154\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_154:\n        /* \"contracts/utils/GrantPrivileges.sol\":5538:5579  (timestamp + timeLimit) - block.timestamp */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/utils/GrantPrivileges.sol\":5531:5579  return (timestamp + timeLimit) - block.timestamp */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":3655:3656  _ */\n    tag_147:\n        /* \"contracts/utils/GrantPrivileges.sol\":5071:5586  function getRemainingTime() external view onlyOwner returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":1599:1732  function _getAdminAddress() private view returns (address) {... */\n    tag_102:\n        /* \"contracts/utils/GrantPrivileges.sol\":1649:1656  address */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1719  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n      tag_176\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1702  ADMIN_ADDRESS.erc7201Slot() */\n      tag_177\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1688  ADMIN_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      0x4772616e7450726976696c656765732e61646d696e4164647265737300000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1700  ADMIN_ADDRESS.erc7201Slot */\n      tag_178\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1702  ADMIN_ADDRESS.erc7201Slot() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1717  ADMIN_ADDRESS.erc7201Slot().getAddressSlot */\n      tag_179\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1719  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/utils/GrantPrivileges.sol\":1675:1725  ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/GrantPrivileges.sol\":1668:1725  return ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":1599:1732  function _getAdminAddress() private view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":2688:2934  function _getOwnerInfoByAddress(address _address) private pure returns (OwnerInfo storage r) {... */\n    tag_110:\n        /* \"contracts/utils/GrantPrivileges.sol\":2760:2779  OwnerInfo storage r */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":2791:2812  bytes32 ownerInfoSlot */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2878  GRANTPRIVILEGES_NAMESPACE.erc7201Slot().deriveMapping(_address) */\n      tag_181\n        /* \"contracts/utils/GrantPrivileges.sol\":2869:2877  _address */\n      dup4\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2854  GRANTPRIVILEGES_NAMESPACE.erc7201Slot() */\n      tag_182\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2840  GRANTPRIVILEGES_NAMESPACE */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x4772616e7450726976696c656765732e4e616d65737061636500000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2852  GRANTPRIVILEGES_NAMESPACE.erc7201Slot */\n      tag_178\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2854  GRANTPRIVILEGES_NAMESPACE.erc7201Slot() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2868  GRANTPRIVILEGES_NAMESPACE.erc7201Slot().deriveMapping */\n      tag_183\n      swap1\n        /* \"contracts/utils/GrantPrivileges.sol\":2815:2878  GRANTPRIVILEGES_NAMESPACE.erc7201Slot().deriveMapping(_address) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/utils/GrantPrivileges.sol\":2791:2878  bytes32 ownerInfoSlot = GRANTPRIVILEGES_NAMESPACE.erc7201Slot().deriveMapping(_address) */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":2895:2927  _getOwnerInfoSlot(ownerInfoSlot) */\n      tag_184\n        /* \"contracts/utils/GrantPrivileges.sol\":2913:2926  ownerInfoSlot */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":2895:2912  _getOwnerInfoSlot */\n      tag_185\n        /* \"contracts/utils/GrantPrivileges.sol\":2895:2927  _getOwnerInfoSlot(ownerInfoSlot) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/utils/GrantPrivileges.sol\":2888:2927  return _getOwnerInfoSlot(ownerInfoSlot) */\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":2688:2934  function _getOwnerInfoByAddress(address _address) private pure returns (OwnerInfo storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":1857:1993  function _setAdminAddress(address _newAddress) private {... */\n    tag_126:\n        /* \"contracts/utils/GrantPrivileges.sol\":1975:1986  _newAddress */\n      dup1\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1966  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n      tag_191\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1949  ADMIN_ADDRESS.erc7201Slot() */\n      tag_192\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1935  ADMIN_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      0x4772616e7450726976696c656765732e61646d696e4164647265737300000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1947  ADMIN_ADDRESS.erc7201Slot */\n      tag_178\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1949  ADMIN_ADDRESS.erc7201Slot() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1964  ADMIN_ADDRESS.erc7201Slot().getAddressSlot */\n      tag_179\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1966  ADMIN_ADDRESS.erc7201Slot().getAddressSlot() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1972  ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value */\n      0x00\n      add\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":1922:1986  ADMIN_ADDRESS.erc7201Slot().getAddressSlot().value = _newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":1857:1993  function _setAdminAddress(address _newAddress) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":3802:4314  function _legalOwner(address senderAddress) private view returns (bool) {... */\n    tag_143:\n        /* \"contracts/utils/GrantPrivileges.sol\":3868:3872  bool */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":3884:3911  OwnerInfo storage ownerInfo */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":3914:3951  _getOwnerInfoByAddress(senderAddress) */\n      tag_194\n        /* \"contracts/utils/GrantPrivileges.sol\":3937:3950  senderAddress */\n      dup4\n        /* \"contracts/utils/GrantPrivileges.sol\":3914:3936  _getOwnerInfoByAddress */\n      tag_110\n        /* \"contracts/utils/GrantPrivileges.sol\":3914:3951  _getOwnerInfoByAddress(senderAddress) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/utils/GrantPrivileges.sol\":3884:3951  OwnerInfo storage ownerInfo = _getOwnerInfoByAddress(senderAddress) */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":3961:3975  uint timestamp */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":3978:3987  ownerInfo */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":3978:3997  ownerInfo.timestamp */\n      0x00\n      add\n      sload\n        /* \"contracts/utils/GrantPrivileges.sol\":3961:3997  uint timestamp = ownerInfo.timestamp */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4007:4021  uint timeLimit */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4024:4033  ownerInfo */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":4024:4043  ownerInfo.timeLimit */\n      0x01\n      add\n      sload\n        /* \"contracts/utils/GrantPrivileges.sol\":4007:4043  uint timeLimit = ownerInfo.timeLimit */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4071:4072  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4058:4067  timestamp */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":4058:4072  timestamp == 0 */\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":4058:4090  timestamp == 0 || timeLimit == 0 */\n      dup1\n      tag_195\n      jumpi\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":4089:4090  0 */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4076:4085  timeLimit */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":4076:4090  timeLimit == 0 */\n      eq\n        /* \"contracts/utils/GrantPrivileges.sol\":4058:4090  timestamp == 0 || timeLimit == 0 */\n    tag_195:\n        /* \"contracts/utils/GrantPrivileges.sol\":4054:4147  if (timestamp == 0 || timeLimit == 0) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":4113:4118  false */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4106:4118  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"contracts/utils/GrantPrivileges.sol\":4054:4147  if (timestamp == 0 || timeLimit == 0) {... */\n    tag_196:\n        /* \"contracts/utils/GrantPrivileges.sol\":4238:4247  timeLimit */\n      dup1\n        /* \"contracts/utils/GrantPrivileges.sol\":4226:4235  timestamp */\n      dup3\n        /* \"contracts/utils/GrantPrivileges.sol\":4226:4247  timestamp + timeLimit */\n      tag_197\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_197:\n        /* \"contracts/utils/GrantPrivileges.sol\":4207:4222  block.timestamp */\n      timestamp\n        /* \"contracts/utils/GrantPrivileges.sol\":4207:4248  block.timestamp > (timestamp + timeLimit) */\n      gt\n        /* \"contracts/utils/GrantPrivileges.sol\":4203:4287  if (block.timestamp > (timestamp + timeLimit)) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/utils/GrantPrivileges.sol\":4271:4276  false */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":4264:4276  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"contracts/utils/GrantPrivileges.sol\":4203:4287  if (block.timestamp > (timestamp + timeLimit)) {... */\n    tag_198:\n        /* \"contracts/utils/GrantPrivileges.sol\":4303:4307  true */\n      0x01\n        /* \"contracts/utils/GrantPrivileges.sol\":4296:4307  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":3802:4314  function _legalOwner(address senderAddress) private view returns (bool) {... */\n    tag_193:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_209)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_213)\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1707:1984  function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1776:1788  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1907:1908  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1894:1903  namespace */\n      dup3\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1888:1904  mload(namespace) */\n      mload\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1881:1885  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1870:1879  namespace */\n      dup5\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1866:1886  add(namespace, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1856:1905  keccak256(add(namespace, 0x20), mload(namespace)) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1852:1909  sub(keccak256(add(namespace, 0x20), mload(namespace)), 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1846:1850  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1839:1910  mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1)) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1962:1966  0xff */\n      0xff\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1958:1967  not(0xff) */\n      not\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1951:1955  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1945:1949  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1935:1956  keccak256(0x00, 0x20) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1931:1968  and(keccak256(0x00, 0x20), not(0xff)) */\n      and\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1923:1968  slot := and(keccak256(0x00, 0x20), not(0xff)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1707:1984  function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2681:2949  function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2754:2768  bytes32 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2853:2854  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2849:2855  not(0) */\n      not\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2845:2847  96 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2841:2856  shr(96, not(0)) */\n      shr\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2836:2839  key */\n      dup3\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2832:2857  and(key, shr(96, not(0))) */\n      and\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2826:2830  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2819:2858  mstore(0x00, and(key, shr(96, not(0)))) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2884:2888  slot */\n      dup3\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2878:2882  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2871:2889  mstore(0x20, slot) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2928:2932  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2922:2926  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2912:2933  keccak256(0x00, 0x40) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2902:2933  result := keccak256(0x00, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":2681:2949  function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/GrantPrivileges.sol\":2368:2531  function _getOwnerInfoSlot(bytes32 slot) private pure returns (OwnerInfo storage r) {... */\n    tag_185:\n        /* \"contracts/utils/GrantPrivileges.sol\":2431:2450  OwnerInfo storage r */\n      0x00\n        /* \"contracts/utils/GrantPrivileges.sol\":2511:2515  slot */\n      dup2\n        /* \"contracts/utils/GrantPrivileges.sol\":2501:2515  r.slot := slot */\n      swap1\n      pop\n        /* \"contracts/utils/GrantPrivileges.sol\":2368:2531  function _getOwnerInfoSlot(bytes32 slot) private pure returns (OwnerInfo storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_221:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_222:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_223:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_252\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_219\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":711:782   */\n      tag_253\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_254\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_221\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":881:910   */\n      tag_255\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_222\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_257\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_223\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_225:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_227:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_228:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_263\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_227\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_229:\n        /* \"#utility.yul\":1876:1900   */\n      tag_265\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_228\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_266:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_230:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_268\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_229\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_231:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_232:\n        /* \"#utility.yul\":2232:2256   */\n      tag_271\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_231\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_272:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_233:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_274\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_232\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_277\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2525:2644   */\n    tag_276:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_278\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_230\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_279\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_233\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_234:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_235:\n        /* \"#utility.yul\":3089:3110   */\n      tag_282\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_234\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_284\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_235\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_236:\n        /* \"#utility.yul\":3426:3450   */\n      tag_286\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_231\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_34:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_288\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_236\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_37:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_291\n      tag_225\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3801:3920   */\n    tag_290:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_292\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_230\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_293\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_230\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_294\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_237:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_238:\n        /* \"#utility.yul\":4491:4513   */\n      tag_297\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_237\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_43:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_299\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_238\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_52:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_302\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4822:4941   */\n    tag_301:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_303\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_230\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_239:\n        /* \"#utility.yul\":5168:5192   */\n      tag_305\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_228\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_71:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_307\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_239\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_74:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_310\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5526:5645   */\n    tag_309:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_311\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_230\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_312\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_230\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_240:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_82:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_315:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_317\n      tag_240\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6329:6413   */\n    tag_316:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6604   */\n    tag_241:\n        /* \"#utility.yul\":6565:6596   */\n      0x6f6e6c792061646d696e20616464726573732063616e20616363657373000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6597   */\n      mstore\n        /* \"#utility.yul\":6425:6604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:6976   */\n    tag_242:\n        /* \"#utility.yul\":6752:6755   */\n      0x00\n        /* \"#utility.yul\":6773:6840   */\n      tag_320\n        /* \"#utility.yul\":6837:6839   */\n      0x1d\n        /* \"#utility.yul\":6832:6835   */\n      dup4\n        /* \"#utility.yul\":6773:6840   */\n      tag_220\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6766:6840   */\n      swap2\n      pop\n        /* \"#utility.yul\":6849:6942   */\n      tag_321\n        /* \"#utility.yul\":6938:6941   */\n      dup3\n        /* \"#utility.yul\":6849:6942   */\n      tag_241\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6967:6969   */\n      0x20\n        /* \"#utility.yul\":6962:6965   */\n      dup3\n        /* \"#utility.yul\":6958:6970   */\n      add\n        /* \"#utility.yul\":6951:6970   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7401   */\n    tag_105:\n        /* \"#utility.yul\":7148:7152   */\n      0x00\n        /* \"#utility.yul\":7186:7188   */\n      0x20\n        /* \"#utility.yul\":7175:7184   */\n      dup3\n        /* \"#utility.yul\":7171:7189   */\n      add\n        /* \"#utility.yul\":7163:7189   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7244   */\n      dup2\n        /* \"#utility.yul\":7229:7233   */\n      dup2\n        /* \"#utility.yul\":7225:7245   */\n      sub\n        /* \"#utility.yul\":7221:7222   */\n      0x00\n        /* \"#utility.yul\":7210:7219   */\n      dup4\n        /* \"#utility.yul\":7206:7223   */\n      add\n        /* \"#utility.yul\":7199:7246   */\n      mstore\n        /* \"#utility.yul\":7263:7394   */\n      tag_323\n        /* \"#utility.yul\":7389:7393   */\n      dup2\n        /* \"#utility.yul\":7263:7394   */\n      tag_242\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7255:7394   */\n      swap1\n      pop\n        /* \"#utility.yul\":6982:7401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7629   */\n    tag_243:\n        /* \"#utility.yul\":7547:7581   */\n      0x6f6e6c79206c6567616c206f776e657220616464726573732063616e20616363\n        /* \"#utility.yul\":7543:7544   */\n      0x00\n        /* \"#utility.yul\":7535:7541   */\n      dup3\n        /* \"#utility.yul\":7531:7545   */\n      add\n        /* \"#utility.yul\":7524:7582   */\n      mstore\n        /* \"#utility.yul\":7616:7621   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7611:7613   */\n      0x20\n        /* \"#utility.yul\":7603:7609   */\n      dup3\n        /* \"#utility.yul\":7599:7614   */\n      add\n        /* \"#utility.yul\":7592:7622   */\n      mstore\n        /* \"#utility.yul\":7407:7629   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7635:8001   */\n    tag_244:\n        /* \"#utility.yul\":7777:7780   */\n      0x00\n        /* \"#utility.yul\":7798:7865   */\n      tag_326\n        /* \"#utility.yul\":7862:7864   */\n      0x23\n        /* \"#utility.yul\":7857:7860   */\n      dup4\n        /* \"#utility.yul\":7798:7865   */\n      tag_220\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7791:7865   */\n      swap2\n      pop\n        /* \"#utility.yul\":7874:7967   */\n      tag_327\n        /* \"#utility.yul\":7963:7966   */\n      dup3\n        /* \"#utility.yul\":7874:7967   */\n      tag_243\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7992:7994   */\n      0x40\n        /* \"#utility.yul\":7987:7990   */\n      dup3\n        /* \"#utility.yul\":7983:7995   */\n      add\n        /* \"#utility.yul\":7976:7995   */\n      swap1\n      pop\n        /* \"#utility.yul\":7635:8001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8007:8426   */\n    tag_146:\n        /* \"#utility.yul\":8173:8177   */\n      0x00\n        /* \"#utility.yul\":8211:8213   */\n      0x20\n        /* \"#utility.yul\":8200:8209   */\n      dup3\n        /* \"#utility.yul\":8196:8214   */\n      add\n        /* \"#utility.yul\":8188:8214   */\n      swap1\n      pop\n        /* \"#utility.yul\":8260:8269   */\n      dup2\n        /* \"#utility.yul\":8254:8258   */\n      dup2\n        /* \"#utility.yul\":8250:8270   */\n      sub\n        /* \"#utility.yul\":8246:8247   */\n      0x00\n        /* \"#utility.yul\":8235:8244   */\n      dup4\n        /* \"#utility.yul\":8231:8248   */\n      add\n        /* \"#utility.yul\":8224:8271   */\n      mstore\n        /* \"#utility.yul\":8288:8419   */\n      tag_329\n        /* \"#utility.yul\":8414:8418   */\n      dup2\n        /* \"#utility.yul\":8288:8419   */\n      tag_244\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8280:8419   */\n      swap1\n      pop\n        /* \"#utility.yul\":8007:8426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8432:8612   */\n    tag_245:\n        /* \"#utility.yul\":8480:8557   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8477:8478   */\n      0x00\n        /* \"#utility.yul\":8470:8558   */\n      mstore\n        /* \"#utility.yul\":8577:8581   */\n      0x11\n        /* \"#utility.yul\":8574:8575   */\n      0x04\n        /* \"#utility.yul\":8567:8582   */\n      mstore\n        /* \"#utility.yul\":8601:8605   */\n      0x24\n        /* \"#utility.yul\":8598:8599   */\n      0x00\n        /* \"#utility.yul\":8591:8606   */\n      revert\n        /* \"#utility.yul\":8618:8809   */\n    tag_152:\n        /* \"#utility.yul\":8658:8661   */\n      0x00\n        /* \"#utility.yul\":8677:8697   */\n      tag_332\n        /* \"#utility.yul\":8695:8696   */\n      dup3\n        /* \"#utility.yul\":8677:8697   */\n      tag_231\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8672:8697   */\n      swap2\n      pop\n        /* \"#utility.yul\":8711:8731   */\n      tag_333\n        /* \"#utility.yul\":8729:8730   */\n      dup4\n        /* \"#utility.yul\":8711:8731   */\n      tag_231\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8706:8731   */\n      swap3\n      pop\n        /* \"#utility.yul\":8754:8755   */\n      dup3\n        /* \"#utility.yul\":8751:8752   */\n      dup3\n        /* \"#utility.yul\":8747:8756   */\n      add\n        /* \"#utility.yul\":8740:8756   */\n      swap1\n      pop\n        /* \"#utility.yul\":8775:8778   */\n      dup1\n        /* \"#utility.yul\":8772:8773   */\n      dup3\n        /* \"#utility.yul\":8769:8779   */\n      gt\n        /* \"#utility.yul\":8766:8802   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8782:8800   */\n      tag_335\n      tag_245\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8766:8802   */\n    tag_334:\n        /* \"#utility.yul\":8618:8809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8815:9009   */\n    tag_156:\n        /* \"#utility.yul\":8855:8859   */\n      0x00\n        /* \"#utility.yul\":8875:8895   */\n      tag_337\n        /* \"#utility.yul\":8893:8894   */\n      dup3\n        /* \"#utility.yul\":8875:8895   */\n      tag_231\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8870:8895   */\n      swap2\n      pop\n        /* \"#utility.yul\":8909:8929   */\n      tag_338\n        /* \"#utility.yul\":8927:8928   */\n      dup4\n        /* \"#utility.yul\":8909:8929   */\n      tag_231\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8904:8929   */\n      swap3\n      pop\n        /* \"#utility.yul\":8953:8954   */\n      dup3\n        /* \"#utility.yul\":8950:8951   */\n      dup3\n        /* \"#utility.yul\":8946:8955   */\n      sub\n        /* \"#utility.yul\":8938:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:8978   */\n      dup2\n        /* \"#utility.yul\":8971:8975   */\n      dup2\n        /* \"#utility.yul\":8968:8979   */\n      gt\n        /* \"#utility.yul\":8965:9002   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8982:9000   */\n      tag_340\n      tag_245\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8965:9002   */\n    tag_339:\n        /* \"#utility.yul\":8815:9009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9015:9457   */\n    tag_166:\n        /* \"#utility.yul\":9164:9168   */\n      0x00\n        /* \"#utility.yul\":9202:9204   */\n      0x60\n        /* \"#utility.yul\":9191:9200   */\n      dup3\n        /* \"#utility.yul\":9187:9205   */\n      add\n        /* \"#utility.yul\":9179:9205   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9286   */\n      tag_342\n        /* \"#utility.yul\":9283:9284   */\n      0x00\n        /* \"#utility.yul\":9272:9281   */\n      dup4\n        /* \"#utility.yul\":9268:9285   */\n      add\n        /* \"#utility.yul\":9259:9265   */\n      dup7\n        /* \"#utility.yul\":9215:9286   */\n      tag_239\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9296:9368   */\n      tag_343\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"#utility.yul\":9353:9362   */\n      dup4\n        /* \"#utility.yul\":9349:9367   */\n      add\n        /* \"#utility.yul\":9340:9346   */\n      dup6\n        /* \"#utility.yul\":9296:9368   */\n      tag_236\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9378:9450   */\n      tag_344\n        /* \"#utility.yul\":9446:9448   */\n      0x40\n        /* \"#utility.yul\":9435:9444   */\n      dup4\n        /* \"#utility.yul\":9431:9449   */\n      add\n        /* \"#utility.yul\":9422:9428   */\n      dup5\n        /* \"#utility.yul\":9378:9450   */\n      tag_236\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9015:9457   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203b105ef77bd6206590529d92c9f0d580a39215f32954639f23045bde9e16cca064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 284,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setAdminAddress_1143": {
									"entryPoint": 135,
									"id": 1143,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 454,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@erc7201Slot_798": {
									"entryPoint": 417,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAddressSlot_950": {
									"entryPoint": 445,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10236:9",
										"nodeType": "YulBlock",
										"src": "0:10236:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2684:739:9",
													"nodeType": "YulBlock",
													"src": "2684:739:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:9",
																"nodeType": "YulBlock",
																"src": "2730:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:9"
																			},
																			"nativeSrc": "2732:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:9"
																		},
																		"nativeSrc": "2732:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:9"
																		},
																		"nativeSrc": "2701:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:9"
																},
																"nativeSrc": "2697:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:9"
															},
															"nativeSrc": "2694:119:9",
															"nodeType": "YulIf",
															"src": "2694:119:9"
														},
														{
															"nativeSrc": "2823:291:9",
															"nodeType": "YulBlock",
															"src": "2823:291:9",
															"statements": [
																{
																	"nativeSrc": "2838:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:9"
																				},
																				"nativeSrc": "2858:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:9"
																		},
																		"nativeSrc": "2852:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:9",
																		"nodeType": "YulBlock",
																		"src": "2923:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:9"
																					},
																					"nativeSrc": "2925:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:9"
																				},
																				"nativeSrc": "2925:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:9",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:9"
																		},
																		"nativeSrc": "2892:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:9"
																	},
																	"nativeSrc": "2889:117:9",
																	"nodeType": "YulIf",
																	"src": "2889:117:9"
																},
																{
																	"nativeSrc": "3020:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:9"
																				},
																				"nativeSrc": "3072:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:9"
																		},
																		"nativeSrc": "3030:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:9",
															"nodeType": "YulBlock",
															"src": "3124:292:9",
															"statements": [
																{
																	"nativeSrc": "3139:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:9"
																				},
																				"nativeSrc": "3159:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:9"
																		},
																		"nativeSrc": "3153:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:9",
																		"nodeType": "YulBlock",
																		"src": "3225:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:9"
																					},
																					"nativeSrc": "3227:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:9"
																				},
																				"nativeSrc": "3227:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:9"
																		},
																		"nativeSrc": "3194:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:9"
																	},
																	"nativeSrc": "3191:117:9",
																	"nodeType": "YulIf",
																	"src": "3191:117:9"
																},
																{
																	"nativeSrc": "3322:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:9"
																				},
																				"nativeSrc": "3374:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:9"
																		},
																		"nativeSrc": "3332:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:9",
														"nodeType": "YulTypedName",
														"src": "2646:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:9",
														"nodeType": "YulTypedName",
														"src": "2657:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:9",
														"nodeType": "YulTypedName",
														"src": "2669:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:9",
														"nodeType": "YulTypedName",
														"src": "2677:6:9",
														"type": ""
													}
												],
												"src": "2570:853:9"
											},
											{
												"body": {
													"nativeSrc": "3488:40:9",
													"nodeType": "YulBlock",
													"src": "3488:40:9",
													"statements": [
														{
															"nativeSrc": "3499:22:9",
															"nodeType": "YulAssignment",
															"src": "3499:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:9"
																},
																"nativeSrc": "3509:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:9",
														"nodeType": "YulTypedName",
														"src": "3471:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:9",
														"nodeType": "YulTypedName",
														"src": "3481:6:9",
														"type": ""
													}
												],
												"src": "3429:99:9"
											},
											{
												"body": {
													"nativeSrc": "3562:152:9",
													"nodeType": "YulBlock",
													"src": "3562:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:9"
																},
																"nativeSrc": "3572:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:9"
															},
															"nativeSrc": "3572:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:9"
																},
																"nativeSrc": "3669:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:9"
															},
															"nativeSrc": "3669:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:9"
																},
																"nativeSrc": "3693:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:9"
															},
															"nativeSrc": "3693:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:9"
											},
											{
												"body": {
													"nativeSrc": "3771:269:9",
													"nodeType": "YulBlock",
													"src": "3771:269:9",
													"statements": [
														{
															"nativeSrc": "3781:22:9",
															"nodeType": "YulAssignment",
															"src": "3781:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:9"
																},
																"nativeSrc": "3791:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:9"
																}
															]
														},
														{
															"nativeSrc": "3812:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:9"
																},
																"nativeSrc": "3838:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:9",
																"nodeType": "YulBlock",
																"src": "3889:51:9",
																"statements": [
																	{
																		"nativeSrc": "3903:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:9"
																			},
																			"nativeSrc": "3913:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:9"
																},
																"nativeSrc": "3862:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:9"
															},
															"nativeSrc": "3859:81:9",
															"nodeType": "YulIf",
															"src": "3859:81:9"
														},
														{
															"body": {
																"nativeSrc": "3992:42:9",
																"nodeType": "YulBlock",
																"src": "3992:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:9"
																			},
																			"nativeSrc": "4006:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:9"
																		},
																		"nativeSrc": "4006:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:9"
																		},
																		"nativeSrc": "3976:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:9"
																},
																"nativeSrc": "3953:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:9"
															},
															"nativeSrc": "3950:84:9",
															"nodeType": "YulIf",
															"src": "3950:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:9",
														"nodeType": "YulTypedName",
														"src": "3755:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:9",
														"nodeType": "YulTypedName",
														"src": "3764:6:9",
														"type": ""
													}
												],
												"src": "3720:320:9"
											},
											{
												"body": {
													"nativeSrc": "4100:87:9",
													"nodeType": "YulBlock",
													"src": "4100:87:9",
													"statements": [
														{
															"nativeSrc": "4110:11:9",
															"nodeType": "YulAssignment",
															"src": "4110:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:9",
																"nodeType": "YulIdentifier",
																"src": "4118:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:9"
																},
																"nativeSrc": "4131:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:9"
															},
															"nativeSrc": "4131:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:9"
														},
														{
															"nativeSrc": "4154:26:9",
															"nodeType": "YulAssignment",
															"src": "4154:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:9"
																},
																"nativeSrc": "4162:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:9",
														"nodeType": "YulTypedName",
														"src": "4087:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:9",
														"nodeType": "YulTypedName",
														"src": "4095:4:9",
														"type": ""
													}
												],
												"src": "4046:141:9"
											},
											{
												"body": {
													"nativeSrc": "4237:49:9",
													"nodeType": "YulBlock",
													"src": "4237:49:9",
													"statements": [
														{
															"nativeSrc": "4247:33:9",
															"nodeType": "YulAssignment",
															"src": "4247:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:9"
																		},
																		"nativeSrc": "4261:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:9"
																},
																"nativeSrc": "4257:23:9",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:9",
														"nodeType": "YulTypedName",
														"src": "4220:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:9",
														"nodeType": "YulTypedName",
														"src": "4230:6:9",
														"type": ""
													}
												],
												"src": "4193:93:9"
											},
											{
												"body": {
													"nativeSrc": "4345:54:9",
													"nodeType": "YulBlock",
													"src": "4345:54:9",
													"statements": [
														{
															"nativeSrc": "4355:37:9",
															"nodeType": "YulAssignment",
															"src": "4355:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:9"
																},
																"nativeSrc": "4376:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:9",
														"nodeType": "YulTypedName",
														"src": "4320:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:9",
														"nodeType": "YulTypedName",
														"src": "4326:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:9",
														"nodeType": "YulTypedName",
														"src": "4336:8:9",
														"type": ""
													}
												],
												"src": "4292:107:9"
											},
											{
												"body": {
													"nativeSrc": "4481:317:9",
													"nodeType": "YulBlock",
													"src": "4481:317:9",
													"statements": [
														{
															"nativeSrc": "4491:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:9"
																},
																"nativeSrc": "4508:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:9",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:9"
																},
																"nativeSrc": "4547:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:9",
															"nodeType": "YulAssignment",
															"src": "4653:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:9"
																},
																"nativeSrc": "4665:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:9"
																}
															]
														},
														{
															"nativeSrc": "4713:30:9",
															"nodeType": "YulAssignment",
															"src": "4713:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:9"
																		},
																		"nativeSrc": "4733:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:9"
																},
																"nativeSrc": "4722:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:9"
																}
															]
														},
														{
															"nativeSrc": "4752:40:9",
															"nodeType": "YulAssignment",
															"src": "4752:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:9"
																		},
																		"nativeSrc": "4772:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:9"
																},
																"nativeSrc": "4762:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:9",
														"nodeType": "YulTypedName",
														"src": "4442:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:9",
														"nodeType": "YulTypedName",
														"src": "4449:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:9",
														"nodeType": "YulTypedName",
														"src": "4461:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:9",
														"nodeType": "YulTypedName",
														"src": "4474:6:9",
														"type": ""
													}
												],
												"src": "4405:393:9"
											},
											{
												"body": {
													"nativeSrc": "4849:32:9",
													"nodeType": "YulBlock",
													"src": "4849:32:9",
													"statements": [
														{
															"nativeSrc": "4859:16:9",
															"nodeType": "YulAssignment",
															"src": "4859:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:9",
																"nodeType": "YulIdentifier",
																"src": "4870:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:9",
														"nodeType": "YulTypedName",
														"src": "4831:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:9",
														"nodeType": "YulTypedName",
														"src": "4841:7:9",
														"type": ""
													}
												],
												"src": "4804:77:9"
											},
											{
												"body": {
													"nativeSrc": "4919:28:9",
													"nodeType": "YulBlock",
													"src": "4919:28:9",
													"statements": [
														{
															"nativeSrc": "4929:12:9",
															"nodeType": "YulAssignment",
															"src": "4929:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:9",
																"nodeType": "YulIdentifier",
																"src": "4936:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:9",
														"nodeType": "YulTypedName",
														"src": "4905:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:9",
														"nodeType": "YulTypedName",
														"src": "4915:3:9",
														"type": ""
													}
												],
												"src": "4887:60:9"
											},
											{
												"body": {
													"nativeSrc": "5013:82:9",
													"nodeType": "YulBlock",
													"src": "5013:82:9",
													"statements": [
														{
															"nativeSrc": "5023:66:9",
															"nodeType": "YulAssignment",
															"src": "5023:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:9"
																				},
																				"nativeSrc": "5063:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:9"
																		},
																		"nativeSrc": "5054:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:9"
																},
																"nativeSrc": "5036:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:9",
														"nodeType": "YulTypedName",
														"src": "4993:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:9",
														"nodeType": "YulTypedName",
														"src": "5003:9:9",
														"type": ""
													}
												],
												"src": "4953:142:9"
											},
											{
												"body": {
													"nativeSrc": "5148:28:9",
													"nodeType": "YulBlock",
													"src": "5148:28:9",
													"statements": [
														{
															"nativeSrc": "5158:12:9",
															"nodeType": "YulAssignment",
															"src": "5158:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:9",
																"nodeType": "YulIdentifier",
																"src": "5165:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:9",
														"nodeType": "YulTypedName",
														"src": "5134:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:9",
														"nodeType": "YulTypedName",
														"src": "5144:3:9",
														"type": ""
													}
												],
												"src": "5101:75:9"
											},
											{
												"body": {
													"nativeSrc": "5258:193:9",
													"nodeType": "YulBlock",
													"src": "5258:193:9",
													"statements": [
														{
															"nativeSrc": "5268:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:9"
																},
																"nativeSrc": "5292:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:9",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:9"
																				},
																				"nativeSrc": "5381:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:9"
																				},
																				"nativeSrc": "5402:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:9"
																		},
																		"nativeSrc": "5353:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:9"
																},
																"nativeSrc": "5340:105:9",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:9"
															},
															"nativeSrc": "5340:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:9",
														"nodeType": "YulTypedName",
														"src": "5235:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:9",
														"nodeType": "YulTypedName",
														"src": "5241:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:9",
														"nodeType": "YulTypedName",
														"src": "5249:7:9",
														"type": ""
													}
												],
												"src": "5182:269:9"
											},
											{
												"body": {
													"nativeSrc": "5506:24:9",
													"nodeType": "YulBlock",
													"src": "5506:24:9",
													"statements": [
														{
															"nativeSrc": "5516:8:9",
															"nodeType": "YulAssignment",
															"src": "5516:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:9",
																"nodeType": "YulLiteral",
																"src": "5523:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:9",
														"nodeType": "YulTypedName",
														"src": "5502:3:9",
														"type": ""
													}
												],
												"src": "5457:73:9"
											},
											{
												"body": {
													"nativeSrc": "5589:136:9",
													"nodeType": "YulBlock",
													"src": "5589:136:9",
													"statements": [
														{
															"nativeSrc": "5599:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:9"
																},
																"nativeSrc": "5613:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:9"
																},
																"nativeSrc": "5654:65:9",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:9"
															},
															"nativeSrc": "5654:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:9",
														"nodeType": "YulTypedName",
														"src": "5575:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:9",
														"nodeType": "YulTypedName",
														"src": "5581:6:9",
														"type": ""
													}
												],
												"src": "5536:189:9"
											},
											{
												"body": {
													"nativeSrc": "5781:136:9",
													"nodeType": "YulBlock",
													"src": "5781:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:9",
																"nodeType": "YulBlock",
																"src": "5848:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:9"
																			},
																			"nativeSrc": "5862:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:9"
																		},
																		"nativeSrc": "5862:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:9"
																},
																"nativeSrc": "5798:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:9"
															},
															"nativeSrc": "5791:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:9",
																"nodeType": "YulBlock",
																"src": "5813:26:9",
																"statements": [
																	{
																		"nativeSrc": "5815:22:9",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:9"
																			},
																			"nativeSrc": "5824:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:9",
																"nodeType": "YulBlock",
																"src": "5795:2:9",
																"statements": []
															},
															"src": "5791:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:9",
														"nodeType": "YulTypedName",
														"src": "5769:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:9",
														"nodeType": "YulTypedName",
														"src": "5776:3:9",
														"type": ""
													}
												],
												"src": "5731:186:9"
											},
											{
												"body": {
													"nativeSrc": "6002:464:9",
													"nodeType": "YulBlock",
													"src": "6002:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:9",
																"nodeType": "YulBlock",
																"src": "6028:431:9",
																"statements": [
																	{
																		"nativeSrc": "6042:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:9"
																			},
																			"nativeSrc": "6058:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:9",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:9"
																					},
																					"nativeSrc": "6142:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:9"
																			},
																			"nativeSrc": "6128:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:9",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:9",
																			"nodeType": "YulBlock",
																			"src": "6329:27:9",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:9",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:9",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:9"
																			},
																			"nativeSrc": "6310:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:9"
																		},
																		"nativeSrc": "6307:49:9",
																		"nodeType": "YulIf",
																		"src": "6307:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:9"
																							},
																							"nativeSrc": "6425:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:9"
																					},
																					"nativeSrc": "6411:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:9"
																			},
																			"nativeSrc": "6369:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:9"
																		},
																		"nativeSrc": "6369:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:9"
																},
																"nativeSrc": "6016:11:9",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:9"
															},
															"nativeSrc": "6013:446:9",
															"nodeType": "YulIf",
															"src": "6013:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:9",
														"nodeType": "YulTypedName",
														"src": "5978:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:9",
														"nodeType": "YulTypedName",
														"src": "5985:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:9",
														"nodeType": "YulTypedName",
														"src": "5990:10:9",
														"type": ""
													}
												],
												"src": "5923:543:9"
											},
											{
												"body": {
													"nativeSrc": "6535:54:9",
													"nodeType": "YulBlock",
													"src": "6535:54:9",
													"statements": [
														{
															"nativeSrc": "6545:37:9",
															"nodeType": "YulAssignment",
															"src": "6545:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:9"
																},
																"nativeSrc": "6566:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:9",
														"nodeType": "YulTypedName",
														"src": "6510:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:9",
														"nodeType": "YulTypedName",
														"src": "6516:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:9",
														"nodeType": "YulTypedName",
														"src": "6526:8:9",
														"type": ""
													}
												],
												"src": "6472:117:9"
											},
											{
												"body": {
													"nativeSrc": "6646:118:9",
													"nodeType": "YulBlock",
													"src": "6646:118:9",
													"statements": [
														{
															"nativeSrc": "6656:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:9"
																				},
																				"nativeSrc": "6701:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:9"
																				},
																				"nativeSrc": "6716:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:9"
																		},
																		"nativeSrc": "6672:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:9"
																},
																"nativeSrc": "6668:56:9",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:9",
															"nodeType": "YulAssignment",
															"src": "6733:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:9"
																},
																"nativeSrc": "6743:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:9",
														"nodeType": "YulTypedName",
														"src": "6623:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:9",
														"nodeType": "YulTypedName",
														"src": "6629:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:9",
														"nodeType": "YulTypedName",
														"src": "6639:6:9",
														"type": ""
													}
												],
												"src": "6595:169:9"
											},
											{
												"body": {
													"nativeSrc": "6850:214:9",
													"nodeType": "YulBlock",
													"src": "6850:214:9",
													"statements": [
														{
															"nativeSrc": "6983:37:9",
															"nodeType": "YulAssignment",
															"src": "6983:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:9"
																},
																"nativeSrc": "6991:29:9",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:9"
																}
															]
														},
														{
															"nativeSrc": "7029:29:9",
															"nodeType": "YulAssignment",
															"src": "7029:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:9"
																		},
																		"nativeSrc": "7046:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:9"
																},
																"nativeSrc": "7037:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:9",
														"nodeType": "YulTypedName",
														"src": "6831:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:9",
														"nodeType": "YulTypedName",
														"src": "6837:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:9",
														"nodeType": "YulTypedName",
														"src": "6845:4:9",
														"type": ""
													}
												],
												"src": "6769:295:9"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:9",
													"nodeType": "YulBlock",
													"src": "7161:1303:9",
													"statements": [
														{
															"nativeSrc": "7172:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:9"
																},
																"nativeSrc": "7186:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:9",
																"nodeType": "YulBlock",
																"src": "7308:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:9"
																			},
																			"nativeSrc": "7310:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:9"
																		},
																		"nativeSrc": "7310:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:9"
																},
																"nativeSrc": "7277:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:9"
															},
															"nativeSrc": "7274:56:9",
															"nodeType": "YulIf",
															"src": "7274:56:9"
														},
														{
															"nativeSrc": "7340:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:9"
																		},
																		"nativeSrc": "7380:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:9"
																},
																"nativeSrc": "7354:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:9"
																},
																"nativeSrc": "7439:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:9"
															},
															"nativeSrc": "7439:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:9"
														},
														{
															"nativeSrc": "7516:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:9",
																"nodeType": "YulLiteral",
																"src": "7533:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:9",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:9",
															"nodeType": "YulAssignment",
															"src": "7544:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:9",
																"nodeType": "YulLiteral",
																"src": "7557:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:9",
																		"nodeType": "YulBlock",
																		"src": "7608:611:9",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:9",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:9"
																							},
																							"nativeSrc": "7649:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:9"
																					},
																					"nativeSrc": "7637:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:9",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:9"
																					},
																					"nativeSrc": "7687:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:9",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:9",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:9",
																					"nodeType": "YulBlock",
																					"src": "7805:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:9"
																												},
																												"nativeSrc": "7844:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:9"
																										},
																										"nativeSrc": "7838:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:9"
																								},
																								"nativeSrc": "7823:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:9"
																							},
																							"nativeSrc": "7823:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:9"
																						},
																						{
																							"nativeSrc": "7882:24:9",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:9",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:9"
																								},
																								"nativeSrc": "7892:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:9",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:9",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:9"
																								},
																								"nativeSrc": "7936:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:9"
																					},
																					"nativeSrc": "7768:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:9"
																				},
																				"nativeSrc": "7760:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:9",
																					"nodeType": "YulBlock",
																					"src": "7783:21:9",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:9",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:9",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:9"
																								},
																								"nativeSrc": "7790:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:9",
																					"nodeType": "YulBlock",
																					"src": "7764:3:9",
																					"statements": []
																				},
																				"src": "7760:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:9",
																					"nodeType": "YulBlock",
																					"src": "8004:156:9",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:9"
																										},
																										"nativeSrc": "8045:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:9"
																								},
																								"nativeSrc": "8039:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:9",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:9",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:9"
																												},
																												"nativeSrc": "8127:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:9"
																										},
																										"nativeSrc": "8097:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:9"
																								},
																								"nativeSrc": "8082:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:9"
																							},
																							"nativeSrc": "8082:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:9"
																					},
																					"nativeSrc": "7984:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:9"
																				},
																				"nativeSrc": "7981:179:9",
																				"nodeType": "YulIf",
																				"src": "7981:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:9",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:9"
																									},
																									"nativeSrc": "8190:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:9",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:9"
																							},
																							"nativeSrc": "8186:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:9"
																					},
																					"nativeSrc": "8173:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:9"
																				},
																				"nativeSrc": "8173:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:9"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:9",
																	"nodeType": "YulCase",
																	"src": "7601:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:9",
																		"nodeType": "YulBlock",
																		"src": "8236:222:9",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:9",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:9",
																					"nodeType": "YulBlock",
																					"src": "8287:67:9",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:9",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:9"
																										},
																										"nativeSrc": "8320:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:9"
																								},
																								"nativeSrc": "8314:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:9"
																				},
																				"nativeSrc": "8277:77:9",
																				"nodeType": "YulIf",
																				"src": "8277:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:9"
																							},
																							"nativeSrc": "8380:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:9"
																					},
																					"nativeSrc": "8367:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:9"
																				},
																				"nativeSrc": "8367:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:9"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:9",
																	"nodeType": "YulCase",
																	"src": "8228:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:9"
																},
																"nativeSrc": "7578:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:9"
															},
															"nativeSrc": "7571:887:9",
															"nodeType": "YulSwitch",
															"src": "7571:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:9",
														"nodeType": "YulTypedName",
														"src": "7150:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:9",
														"nodeType": "YulTypedName",
														"src": "7156:3:9",
														"type": ""
													}
												],
												"src": "7069:1395:9"
											},
											{
												"body": {
													"nativeSrc": "8515:81:9",
													"nodeType": "YulBlock",
													"src": "8515:81:9",
													"statements": [
														{
															"nativeSrc": "8525:65:9",
															"nodeType": "YulAssignment",
															"src": "8525:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8540:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8540:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8547:42:9",
																		"nodeType": "YulLiteral",
																		"src": "8547:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8536:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:9"
																},
																"nativeSrc": "8536:54:9",
																"nodeType": "YulFunctionCall",
																"src": "8536:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8525:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8525:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8470:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8497:5:9",
														"nodeType": "YulTypedName",
														"src": "8497:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8507:7:9",
														"nodeType": "YulTypedName",
														"src": "8507:7:9",
														"type": ""
													}
												],
												"src": "8470:126:9"
											},
											{
												"body": {
													"nativeSrc": "8647:51:9",
													"nodeType": "YulBlock",
													"src": "8647:51:9",
													"statements": [
														{
															"nativeSrc": "8657:35:9",
															"nodeType": "YulAssignment",
															"src": "8657:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8686:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8686:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8668:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8668:17:9"
																},
																"nativeSrc": "8668:24:9",
																"nodeType": "YulFunctionCall",
																"src": "8668:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8657:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8657:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8602:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8629:5:9",
														"nodeType": "YulTypedName",
														"src": "8629:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8639:7:9",
														"nodeType": "YulTypedName",
														"src": "8639:7:9",
														"type": ""
													}
												],
												"src": "8602:96:9"
											},
											{
												"body": {
													"nativeSrc": "8769:53:9",
													"nodeType": "YulBlock",
													"src": "8769:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8786:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8786:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8809:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8809:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8791:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8791:17:9"
																		},
																		"nativeSrc": "8791:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8791:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8779:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:9"
																},
																"nativeSrc": "8779:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8779:37:9"
															},
															"nativeSrc": "8779:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8779:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8704:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8757:5:9",
														"nodeType": "YulTypedName",
														"src": "8757:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8764:3:9",
														"nodeType": "YulTypedName",
														"src": "8764:3:9",
														"type": ""
													}
												],
												"src": "8704:118:9"
											},
											{
												"body": {
													"nativeSrc": "8926:124:9",
													"nodeType": "YulBlock",
													"src": "8926:124:9",
													"statements": [
														{
															"nativeSrc": "8936:26:9",
															"nodeType": "YulAssignment",
															"src": "8936:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8948:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8948:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8944:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:9"
																},
																"nativeSrc": "8944:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8944:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8936:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8936:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9016:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9016:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9029:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9040:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9040:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:9"
																		},
																		"nativeSrc": "9025:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9025:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8972:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8972:43:9"
																},
																"nativeSrc": "8972:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8972:71:9"
															},
															"nativeSrc": "8972:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8972:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8828:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8898:9:9",
														"nodeType": "YulTypedName",
														"src": "8898:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8910:6:9",
														"nodeType": "YulTypedName",
														"src": "8910:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8921:4:9",
														"nodeType": "YulTypedName",
														"src": "8921:4:9",
														"type": ""
													}
												],
												"src": "8828:222:9"
											},
											{
												"body": {
													"nativeSrc": "9084:152:9",
													"nodeType": "YulBlock",
													"src": "9084:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9101:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9101:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9104:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9094:6:9"
																},
																"nativeSrc": "9094:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9094:88:9"
															},
															"nativeSrc": "9094:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9094:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9198:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9198:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9201:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9201:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9191:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:9"
																},
																"nativeSrc": "9191:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9191:15:9"
															},
															"nativeSrc": "9191:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9191:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9222:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9222:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9225:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9225:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9215:6:9"
																},
																"nativeSrc": "9215:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9215:15:9"
															},
															"nativeSrc": "9215:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9215:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9056:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9056:180:9"
											},
											{
												"body": {
													"nativeSrc": "9286:147:9",
													"nodeType": "YulBlock",
													"src": "9286:147:9",
													"statements": [
														{
															"nativeSrc": "9296:25:9",
															"nodeType": "YulAssignment",
															"src": "9296:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9319:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9319:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9301:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9301:17:9"
																},
																"nativeSrc": "9301:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9301:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9296:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9296:1:9"
																}
															]
														},
														{
															"nativeSrc": "9330:25:9",
															"nodeType": "YulAssignment",
															"src": "9330:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9353:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9353:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9335:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9335:17:9"
																},
																"nativeSrc": "9335:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9335:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9330:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9330:1:9"
																}
															]
														},
														{
															"nativeSrc": "9364:16:9",
															"nodeType": "YulAssignment",
															"src": "9364:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9375:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9375:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9378:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9378:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9371:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9371:3:9"
																},
																"nativeSrc": "9371:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9371:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9364:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9404:22:9",
																"nodeType": "YulBlock",
																"src": "9404:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9406:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9406:16:9"
																			},
																			"nativeSrc": "9406:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9406:18:9"
																		},
																		"nativeSrc": "9406:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9406:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9396:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9396:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9399:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9399:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9393:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9393:2:9"
																},
																"nativeSrc": "9393:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9393:10:9"
															},
															"nativeSrc": "9390:36:9",
															"nodeType": "YulIf",
															"src": "9390:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9242:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9273:1:9",
														"nodeType": "YulTypedName",
														"src": "9273:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9276:1:9",
														"nodeType": "YulTypedName",
														"src": "9276:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9282:3:9",
														"nodeType": "YulTypedName",
														"src": "9282:3:9",
														"type": ""
													}
												],
												"src": "9242:191:9"
											},
											{
												"body": {
													"nativeSrc": "9504:53:9",
													"nodeType": "YulBlock",
													"src": "9504:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9521:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9521:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9544:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9544:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9526:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9526:17:9"
																		},
																		"nativeSrc": "9526:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9526:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9514:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9514:6:9"
																},
																"nativeSrc": "9514:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9514:37:9"
															},
															"nativeSrc": "9514:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9514:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9439:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9492:5:9",
														"nodeType": "YulTypedName",
														"src": "9492:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9499:3:9",
														"nodeType": "YulTypedName",
														"src": "9499:3:9",
														"type": ""
													}
												],
												"src": "9439:118:9"
											},
											{
												"body": {
													"nativeSrc": "9717:288:9",
													"nodeType": "YulBlock",
													"src": "9717:288:9",
													"statements": [
														{
															"nativeSrc": "9727:26:9",
															"nodeType": "YulAssignment",
															"src": "9727:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9739:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9739:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9750:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9750:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9735:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9735:3:9"
																},
																"nativeSrc": "9735:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9735:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9727:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9727:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9807:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9807:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9820:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9820:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9831:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9831:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9816:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:9"
																		},
																		"nativeSrc": "9816:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9816:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9763:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9763:43:9"
																},
																"nativeSrc": "9763:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9763:71:9"
															},
															"nativeSrc": "9763:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9763:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9888:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9888:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9901:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9901:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9912:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9912:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9897:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9897:3:9"
																		},
																		"nativeSrc": "9897:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9897:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9844:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9844:43:9"
																},
																"nativeSrc": "9844:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9844:72:9"
															},
															"nativeSrc": "9844:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9844:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9970:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9983:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9994:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9994:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9979:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:9"
																		},
																		"nativeSrc": "9979:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9979:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9926:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9926:43:9"
																},
																"nativeSrc": "9926:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9926:72:9"
															},
															"nativeSrc": "9926:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9926:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9563:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9673:9:9",
														"nodeType": "YulTypedName",
														"src": "9673:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9685:6:9",
														"nodeType": "YulTypedName",
														"src": "9685:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9693:6:9",
														"nodeType": "YulTypedName",
														"src": "9693:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9701:6:9",
														"nodeType": "YulTypedName",
														"src": "9701:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9712:4:9",
														"nodeType": "YulTypedName",
														"src": "9712:4:9",
														"type": ""
													}
												],
												"src": "9563:442:9"
											},
											{
												"body": {
													"nativeSrc": "10109:124:9",
													"nodeType": "YulBlock",
													"src": "10109:124:9",
													"statements": [
														{
															"nativeSrc": "10119:26:9",
															"nodeType": "YulAssignment",
															"src": "10119:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10131:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10131:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10142:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10142:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10127:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10127:3:9"
																},
																"nativeSrc": "10127:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10127:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10119:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10119:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10199:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10199:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10212:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10212:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10223:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10223:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10208:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10208:3:9"
																		},
																		"nativeSrc": "10208:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10208:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10155:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10155:43:9"
																},
																"nativeSrc": "10155:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10155:71:9"
															},
															"nativeSrc": "10155:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10155:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10011:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10081:9:9",
														"nodeType": "YulTypedName",
														"src": "10081:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10093:6:9",
														"nodeType": "YulTypedName",
														"src": "10093:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10104:4:9",
														"nodeType": "YulTypedName",
														"src": "10104:4:9",
														"type": ""
													}
												],
												"src": "10011:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161202a38038061202a8339818101604052810190610031919061052c565b8181816003908161004291906107b2565b50806004908161005291906107b2565b5050506100643361008760201b60201c565b610080336b204fce5e3e2502611000000061011c60201b60201c565b5050610996565b806100da6100cf6040518060400160405280601c81526020017f4772616e7450726976696c656765732e61646d696e41646472657373000000008152506101a160201b60201c565b6101bd60201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018c575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161018391906108c0565b60405180910390fd5b61019d5f83836101c660201b60201c565b5050565b5f600182516020840120035f5260ff1960205f20169050919050565b5f819050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610216578060025f82825461020a9190610906565b925050819055506102e4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561029f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161029693929190610948565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361032b578060025f8282540392505081905550610375565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103d2919061097d565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61043e826103f8565b810181811067ffffffffffffffff8211171561045d5761045c610408565b5b80604052505050565b5f61046f6103df565b905061047b8282610435565b919050565b5f67ffffffffffffffff82111561049a57610499610408565b5b6104a3826103f8565b9050602081019050919050565b8281835e5f83830152505050565b5f6104d06104cb84610480565b610466565b9050828152602081018484840111156104ec576104eb6103f4565b5b6104f78482856104b0565b509392505050565b5f82601f830112610513576105126103f0565b5b81516105238482602086016104be565b91505092915050565b5f5f60408385031215610542576105416103e8565b5b5f83015167ffffffffffffffff81111561055f5761055e6103ec565b5b61056b858286016104ff565b925050602083015167ffffffffffffffff81111561058c5761058b6103ec565b5b610598858286016104ff565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105f057607f821691505b602082108103610603576106026105ac565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261062a565b61066f868361062a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106b36106ae6106a984610687565b610690565b610687565b9050919050565b5f819050919050565b6106cc83610699565b6106e06106d8826106ba565b848454610636565b825550505050565b5f5f905090565b6106f76106e8565b6107028184846106c3565b505050565b5b818110156107255761071a5f826106ef565b600181019050610708565b5050565b601f82111561076a5761073b81610609565b6107448461061b565b81016020851015610753578190505b61076761075f8561061b565b830182610707565b50505b505050565b5f82821c905092915050565b5f61078a5f198460080261076f565b1980831691505092915050565b5f6107a2838361077b565b9150826002028217905092915050565b6107bb826105a2565b67ffffffffffffffff8111156107d4576107d3610408565b5b6107de82546105d9565b6107e9828285610729565b5f60209050601f83116001811461081a575f8415610808578287015190505b6108128582610797565b865550610879565b601f19841661082886610609565b5f5b8281101561084f5784890151825560018201915060208501945060208101905061082a565b8683101561086c5784890151610868601f89168261077b565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108aa82610881565b9050919050565b6108ba816108a0565b82525050565b5f6020820190506108d35f8301846108b1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61091082610687565b915061091b83610687565b9250828201905080821115610933576109326108d9565b5b92915050565b61094281610687565b82525050565b5f60608201905061095b5f8301866108b1565b6109686020830185610939565b6109756040830184610939565b949350505050565b5f6020820190506109905f830184610939565b92915050565b611687806109a35f395ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610271578063b2e6b912146102a1578063dd62ed3e146102bf578063efb98bcf146102ef576100f3565b806370a08231146101e95780638f2839701461021957806395cfbf6d1461023557806395d89b4114610253576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce567146101935780633cc38f5c146101b157806340c10f19146101cd576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff61030d565b60405161010c91906111d7565b60405180910390f35b61012f600480360381019061012a9190611288565b61039d565b60405161013c91906112e0565b60405180910390f35b61014d6103bf565b60405161015a9190611308565b60405180910390f35b61017d60048036038101906101789190611321565b6103c8565b60405161018a91906112e0565b60405180910390f35b61019b6103f6565b6040516101a8919061138c565b60405180910390f35b6101cb60048036038101906101c69190611288565b6103fe565b005b6101e760048036038101906101e29190611288565b610533565b005b61020360048036038101906101fe91906113a5565b6105b6565b6040516102109190611308565b60405180910390f35b610233600480360381019061022e91906113a5565b6105fb565b005b61023d6106e1565b60405161024a91906111d7565b60405180910390f35b61025b61071a565b60405161026891906111d7565b60405180910390f35b61028b60048036038101906102869190611288565b6107aa565b60405161029891906112e0565b60405180910390f35b6102a96107cc565b6040516102b691906113df565b60405180910390f35b6102d960048036038101906102d491906113f8565b6107da565b6040516102e69190611308565b60405180910390f35b6102f761085c565b6040516103049190611308565b60405180910390f35b60606003805461031c90611463565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611463565b80156103935780601f1061036a57610100808354040283529160200191610393565b820191905f5260205f20905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b5f5f6103a761095c565b90506103b4818585610963565b600191505092915050565b5f600254905090565b5f5f6103d261095c565b90506103df858285610975565b6103ea858585610a08565b60019150509392505050565b5f6012905090565b610406610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610473576040517f0a2a9e3e00000000000000000000000000000000000000000000000000000000815260040161046a906114dd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d8576040517f5bb7a72300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610511576040517fe16a8aa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61051b83610b66565b905042815f0181905550818160010181905550505050565b61053b610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f0a2a9e3e00000000000000000000000000000000000000000000000000000000815260040161059f906114dd565b60405180910390fd5b6105b28282610bcb565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610603610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f0a2a9e3e000000000000000000000000000000000000000000000000000000008152600401610667906114dd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d5576040517f5bb7a72300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106de81610c4a565b50565b6040518060400160405280601981526020017f4772616e7450726976696c656765732e4e616d6573706163650000000000000081525081565b60606004805461072990611463565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611463565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f5f6107b461095c565b90506107c1818585610a08565b600191505092915050565b5f6107d5610af8565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610865610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156108a657506108a433610cd3565b155b156108e6576040517f5e9b54e10000000000000000000000000000000000000000000000000000000081526004016108dd9061156b565b60405180910390fd5b5f6108f033610b66565b90505f815f015490505f826001015490505f82148061090e57505f81145b1561091e575f9350505050610959565b42818361092b91906115b6565b101561093c575f9350505050610959565b42818361094991906115b6565b61095391906115e9565b93505050505b90565b5f33905090565b6109708383836001610d37565b505050565b5f61098084846107da565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a0257818110156109f3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109ea9392919061161c565b60405180910390fd5b610a0184848484035f610d37565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a78575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a6f91906113df565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adf91906113df565b60405180910390fd5b610af3838383610f06565b505050565b5f610b3f610b3a6040518060400160405280601c81526020017f4772616e7450726976696c656765732e61646d696e416464726573730000000081525061111f565b61113b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f610bb883610baa6040518060400160405280601981526020017f4772616e7450726976696c656765732e4e616d6573706163650000000000000081525061111f565b61114490919063ffffffff16565b9050610bc38161115e565b915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c3291906113df565b60405180910390fd5b610c465f8383610f06565b5050565b80610c91610c8c6040518060400160405280601c81526020017f4772616e7450726976696c656765732e61646d696e416464726573730000000081525061111f565b61113b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5f610cde83610b66565b90505f815f015490505f826001015490505f821480610cfc57505f81145b15610d0c575f9350505050610d32565b8082610d1891906115b6565b421115610d2a575f9350505050610d32565b600193505050505b919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610da7575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d9e91906113df565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e17575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e0e91906113df565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f00578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ef79190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f56578060025f828254610f4a91906115b6565b92505081905550611024565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fdf578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fd69392919061161c565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106b578060025f82825403925050819055506110b5565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111129190611308565b60405180910390a3505050565b5f600182516020840120035f5260ff1960205f20169050919050565b5f819050919050565b5f5f1960601c82165f528260205260405f20905092915050565b5f819050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111a982611167565b6111b38185611171565b93506111c3818560208601611181565b6111cc8161118f565b840191505092915050565b5f6020820190508181035f8301526111ef818461119f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611224826111fb565b9050919050565b6112348161121a565b811461123e575f5ffd5b50565b5f8135905061124f8161122b565b92915050565b5f819050919050565b61126781611255565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f5f6040838503121561129e5761129d6111f7565b5b5f6112ab85828601611241565b92505060206112bc85828601611274565b9150509250929050565b5f8115159050919050565b6112da816112c6565b82525050565b5f6020820190506112f35f8301846112d1565b92915050565b61130281611255565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376111f7565b5b5f61134586828701611241565b935050602061135686828701611241565b925050604061136786828701611274565b9150509250925092565b5f60ff82169050919050565b61138681611371565b82525050565b5f60208201905061139f5f83018461137d565b92915050565b5f602082840312156113ba576113b96111f7565b5b5f6113c784828501611241565b91505092915050565b6113d98161121a565b82525050565b5f6020820190506113f25f8301846113d0565b92915050565b5f5f6040838503121561140e5761140d6111f7565b5b5f61141b85828601611241565b925050602061142c85828601611241565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061147a57607f821691505b60208210810361148d5761148c611436565b5b50919050565b7f6f6e6c792061646d696e20616464726573732063616e206163636573730000005f82015250565b5f6114c7601d83611171565b91506114d282611493565b602082019050919050565b5f6020820190508181035f8301526114f4816114bb565b9050919050565b7f6f6e6c79206c6567616c206f776e657220616464726573732063616e206163635f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611555602383611171565b9150611560826114fb565b604082019050919050565b5f6020820190508181035f83015261158281611549565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c082611255565b91506115cb83611255565b92508282019050808211156115e3576115e2611589565b5b92915050565b5f6115f382611255565b91506115fe83611255565b925082820390508181111561161657611615611589565b5b92915050565b5f60608201905061162f5f8301866113d0565b61163c60208301856112f9565b61164960408301846112f9565b94935050505056fea26469706673582212203b105ef77bd6206590529d92c9f0d580a39215f32954639f23045bde9e16cca064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x202A CODESIZE SUB DUP1 PUSH2 0x202A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST POP POP POP PUSH2 0x64 CALLER PUSH2 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x80 CALLER PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x11C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x996 JUMP JUMPDEST DUP1 PUSH2 0xDA PUSH2 0xCF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E61646D696E4164647265737300000000 DUP2 MSTORE POP PUSH2 0x1A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D PUSH0 DUP4 DUP4 PUSH2 0x1C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 SUB PUSH0 MSTORE PUSH1 0xFF NOT PUSH1 0x20 PUSH0 KECCAK256 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x216 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2E4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x375 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x43E DUP3 PUSH2 0x3F8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x408 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x46F PUSH2 0x3DF JUMP JUMPDEST SWAP1 POP PUSH2 0x47B DUP3 DUP3 PUSH2 0x435 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x408 JUMP JUMPDEST JUMPDEST PUSH2 0x4A3 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D0 PUSH2 0x4CB DUP5 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x3F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4F7 DUP5 DUP3 DUP6 PUSH2 0x4B0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x3F0 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x523 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH2 0x56B DUP6 DUP3 DUP7 ADD PUSH2 0x4FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH2 0x598 DUP6 DUP3 DUP7 ADD PUSH2 0x4FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x5AC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x665 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x66F DUP7 DUP4 PUSH2 0x62A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6B3 PUSH2 0x6AE PUSH2 0x6A9 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CC DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x6E0 PUSH2 0x6D8 DUP3 PUSH2 0x6BA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x636 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x702 DUP2 DUP5 DUP5 PUSH2 0x6C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH2 0x71A PUSH0 DUP3 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x708 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x76A JUMPI PUSH2 0x73B DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x744 DUP5 PUSH2 0x61B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x753 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x767 PUSH2 0x75F DUP6 PUSH2 0x61B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x707 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x78A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x76F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A2 DUP4 DUP4 PUSH2 0x77B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7BB DUP3 PUSH2 0x5A2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0x408 JUMP JUMPDEST JUMPDEST PUSH2 0x7DE DUP3 SLOAD PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x7E9 DUP3 DUP3 DUP6 PUSH2 0x729 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x81A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x808 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x812 DUP6 DUP3 PUSH2 0x797 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x879 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x828 DUP7 PUSH2 0x609 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x84F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x86C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x868 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x77B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA DUP2 PUSH2 0x8A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x910 DUP3 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x91B DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x933 JUMPI PUSH2 0x932 PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x942 DUP2 PUSH2 0x687 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x95B PUSH0 DUP4 ADD DUP7 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x968 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x975 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x939 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x990 PUSH0 DUP4 ADD DUP5 PUSH2 0x939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1687 DUP1 PUSH2 0x9A3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xB2E6B912 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x2EF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x95CFBF6D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3CC38F5C EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x348 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A7 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x3B4 DUP2 DUP6 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D2 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x3DF DUP6 DUP3 DUP6 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3EA DUP6 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x406 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BB7A72300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE16A8AA400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x51B DUP4 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x53B PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B2 DUP3 DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x603 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BB7A72300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0xC4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E4E616D65737061636500000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7B4 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x7C1 DUP2 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D5 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x865 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH2 0x8A4 CALLER PUSH2 0xCD3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5E9B54E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8F0 CALLER PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP3 EQ DUP1 PUSH2 0x90E JUMPI POP PUSH0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x91E JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x959 JUMP JUMPDEST TIMESTAMP DUP2 DUP4 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST LT ISZERO PUSH2 0x93C JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x959 JUMP JUMPDEST TIMESTAMP DUP2 DUP4 PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x970 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP5 DUP5 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA02 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA01 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD37 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF3 DUP4 DUP4 DUP4 PUSH2 0xF06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3F PUSH2 0xB3A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E61646D696E4164647265737300000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xBB8 DUP4 PUSH2 0xBAA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E4E616D65737061636500000000000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC46 PUSH0 DUP4 DUP4 PUSH2 0xF06 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0xC91 PUSH2 0xC8C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E61646D696E4164647265737300000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCDE DUP4 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP3 EQ DUP1 PUSH2 0xCFC JUMPI POP PUSH0 DUP2 EQ JUMPDEST ISZERO PUSH2 0xD0C JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0xD32 JUMP JUMPDEST DUP1 DUP3 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xD2A JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF00 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF56 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1024 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 SUB PUSH0 MSTORE PUSH1 0xFF NOT PUSH1 0x20 PUSH0 KECCAK256 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 NOT PUSH1 0x60 SHR DUP3 AND PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A9 DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x11B3 DUP2 DUP6 PUSH2 0x1171 JUMP JUMPDEST SWAP4 POP PUSH2 0x11C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x11CC DUP2 PUSH2 0x118F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11EF DUP2 DUP5 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP2 EQ PUSH2 0x123E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x124F DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH2 0x129D PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AB DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12BC DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139F PUSH0 DUP4 ADD DUP5 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C7 DUP5 DUP3 DUP6 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D9 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141B DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142C DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x147A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x148D JUMPI PUSH2 0x148C PUSH2 0x1436 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E20616464726573732063616E20616363657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C7 PUSH1 0x1D DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D2 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F4 DUP2 PUSH2 0x14BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206C6567616C206F776E657220616464726573732063616E20616363 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1555 PUSH1 0x23 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1582 DUP2 PUSH2 0x1549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C0 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CB DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15F3 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FE DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x162F PUSH0 DUP4 ADD DUP7 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x163C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x1649 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE LT MCOPY 0xF7 PUSH28 0xD6206590529D92C9F0D580A39215F32954639F23045BDE9E16CCA064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "159:389:7:-:0;;;306:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;368:5;375:7;1656:5:1;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3053:28:8;3070:10;3053:16;;;:28;;:::i;:::-;393:37:7::1;399:10;411:18;393:5;;;:37;;:::i;:::-;306:131:::0;;159:389;;1857:136:8;1975:11;1922:44;:27;:13;;;;;;;;;;;;;;;;;:25;;;:27;;:::i;:::-;:42;;;:44;;:::i;:::-;:50;;;:64;;;;;;;;;;;;;;;;;;1857:136;:::o;7439:208:1:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;1707:277:5:-;1776:12;1907:1;1894:9;1888:16;1881:4;1870:9;1866:20;1856:49;1852:57;1846:4;1839:71;1962:4;1958:9;1951:4;1945;1935:21;1931:37;1923:45;;1707:277;;;:::o;1899:163:6:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;5989:1107:1:-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;8470:126::-;8507:7;8547:42;8540:5;8536:54;8525:65;;8470:126;;;:::o;8602:96::-;8639:7;8668:24;8686:5;8668:24;:::i;:::-;8657:35;;8602:96;;;:::o;8704:118::-;8791:24;8809:5;8791:24;:::i;:::-;8786:3;8779:37;8704:118;;:::o;8828:222::-;8921:4;8959:2;8948:9;8944:18;8936:26;;8972:71;9040:1;9029:9;9025:17;9016:6;8972:71;:::i;:::-;8828:222;;;;:::o;9056:180::-;9104:77;9101:1;9094:88;9201:4;9198:1;9191:15;9225:4;9222:1;9215:15;9242:191;9282:3;9301:20;9319:1;9301:20;:::i;:::-;9296:25;;9335:20;9353:1;9335:20;:::i;:::-;9330:25;;9378:1;9375;9371:9;9364:16;;9399:3;9396:1;9393:10;9390:36;;;9406:18;;:::i;:::-;9390:36;9242:191;;;;:::o;9439:118::-;9526:24;9544:5;9526:24;:::i;:::-;9521:3;9514:37;9439:118;;:::o;9563:442::-;9712:4;9750:2;9739:9;9735:18;9727:26;;9763:71;9831:1;9820:9;9816:17;9807:6;9763:71;:::i;:::-;9844:72;9912:2;9901:9;9897:18;9888:6;9844:72;:::i;:::-;9926;9994:2;9983:9;9979:18;9970:6;9926:72;:::i;:::-;9563:442;;;;;;:::o;10011:222::-;10104:4;10142:2;10131:9;10127:18;10119:26;;10155:71;10223:1;10212:9;10208:17;10199:6;10155:71;:::i;:::-;10011:222;;;;:::o;159:389:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GRANTPRIVILEGES_NAMESPACE_1097": {
									"entryPoint": 1761,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 2403,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3383,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getAdminAddress_1126": {
									"entryPoint": 2808,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnerInfoByAddress_1182": {
									"entryPoint": 2918,
									"id": 1182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getOwnerInfoSlot_1159": {
									"entryPoint": 4446,
									"id": 1159,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_legalOwner_1280": {
									"entryPoint": 3283,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_491": {
									"entryPoint": 3019,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2396,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setAdminAddress_1143": {
									"entryPoint": 3146,
									"id": 1143,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 2421,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2568,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3846,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addOwner_1330": {
									"entryPoint": 1022,
									"id": 1330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 2010,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 925,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1462,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeAdmin_1421": {
									"entryPoint": 1531,
									"id": 1421,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 1014,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deriveMapping_842": {
									"entryPoint": 4420,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@erc7201Slot_798": {
									"entryPoint": 4383,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAddressSlot_950": {
									"entryPoint": 4411,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAdminAddress_1397": {
									"entryPoint": 1996,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainingTime_1387": {
									"entryPoint": 2140,
									"id": 1387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1084": {
									"entryPoint": 1331,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 781,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1818,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 959,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 968,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1962,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9460:9",
										"nodeType": "YulBlock",
										"src": "0:9460:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4359:43:9",
													"nodeType": "YulBlock",
													"src": "4359:43:9",
													"statements": [
														{
															"nativeSrc": "4369:27:9",
															"nodeType": "YulAssignment",
															"src": "4369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:9"
																},
																"nativeSrc": "4380:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:9",
														"nodeType": "YulTypedName",
														"src": "4341:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:9",
														"nodeType": "YulTypedName",
														"src": "4351:7:9",
														"type": ""
													}
												],
												"src": "4316:86:9"
											},
											{
												"body": {
													"nativeSrc": "4469:51:9",
													"nodeType": "YulBlock",
													"src": "4469:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:9"
																		},
																		"nativeSrc": "4491:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:9"
																},
																"nativeSrc": "4479:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:9"
															},
															"nativeSrc": "4479:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:9",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:9",
														"nodeType": "YulTypedName",
														"src": "4464:3:9",
														"type": ""
													}
												],
												"src": "4408:112:9"
											},
											{
												"body": {
													"nativeSrc": "4620:120:9",
													"nodeType": "YulBlock",
													"src": "4620:120:9",
													"statements": [
														{
															"nativeSrc": "4630:26:9",
															"nodeType": "YulAssignment",
															"src": "4630:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nativeSrc": "4638:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:9"
																		},
																		"nativeSrc": "4715:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:9"
																},
																"nativeSrc": "4666:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:9"
															},
															"nativeSrc": "4666:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:9",
														"nodeType": "YulTypedName",
														"src": "4592:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:9",
														"nodeType": "YulTypedName",
														"src": "4604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:9",
														"nodeType": "YulTypedName",
														"src": "4615:4:9",
														"type": ""
													}
												],
												"src": "4526:214:9"
											},
											{
												"body": {
													"nativeSrc": "4812:263:9",
													"nodeType": "YulBlock",
													"src": "4812:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:9",
																"nodeType": "YulBlock",
																"src": "4858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:9"
																			},
																			"nativeSrc": "4860:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:9"
																		},
																		"nativeSrc": "4860:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:9"
																		},
																		"nativeSrc": "4829:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:9"
																},
																"nativeSrc": "4825:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:9"
															},
															"nativeSrc": "4822:119:9",
															"nodeType": "YulIf",
															"src": "4822:119:9"
														},
														{
															"nativeSrc": "4951:117:9",
															"nodeType": "YulBlock",
															"src": "4951:117:9",
															"statements": [
																{
																	"nativeSrc": "4966:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:9"
																				},
																				"nativeSrc": "5026:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:9"
																		},
																		"nativeSrc": "5005:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:9",
														"nodeType": "YulTypedName",
														"src": "4782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:9",
														"nodeType": "YulTypedName",
														"src": "4793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:9",
														"nodeType": "YulTypedName",
														"src": "4805:6:9",
														"type": ""
													}
												],
												"src": "4746:329:9"
											},
											{
												"body": {
													"nativeSrc": "5146:53:9",
													"nodeType": "YulBlock",
													"src": "5146:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:9"
																		},
																		"nativeSrc": "5168:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:9"
																},
																"nativeSrc": "5156:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:9"
															},
															"nativeSrc": "5156:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:9",
														"nodeType": "YulTypedName",
														"src": "5134:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:9",
														"nodeType": "YulTypedName",
														"src": "5141:3:9",
														"type": ""
													}
												],
												"src": "5081:118:9"
											},
											{
												"body": {
													"nativeSrc": "5303:124:9",
													"nodeType": "YulBlock",
													"src": "5303:124:9",
													"statements": [
														{
															"nativeSrc": "5313:26:9",
															"nodeType": "YulAssignment",
															"src": "5313:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:9"
																},
																"nativeSrc": "5321:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:9"
																		},
																		"nativeSrc": "5402:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:9"
																},
																"nativeSrc": "5349:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:9"
															},
															"nativeSrc": "5349:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:9",
														"nodeType": "YulTypedName",
														"src": "5275:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:9",
														"nodeType": "YulTypedName",
														"src": "5287:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:9",
														"nodeType": "YulTypedName",
														"src": "5298:4:9",
														"type": ""
													}
												],
												"src": "5205:222:9"
											},
											{
												"body": {
													"nativeSrc": "5516:391:9",
													"nodeType": "YulBlock",
													"src": "5516:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:9",
																"nodeType": "YulBlock",
																"src": "5562:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:9"
																			},
																			"nativeSrc": "5564:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:9"
																		},
																		"nativeSrc": "5564:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:9"
																		},
																		"nativeSrc": "5533:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:9"
																},
																"nativeSrc": "5529:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:9"
															},
															"nativeSrc": "5526:119:9",
															"nodeType": "YulIf",
															"src": "5526:119:9"
														},
														{
															"nativeSrc": "5655:117:9",
															"nodeType": "YulBlock",
															"src": "5655:117:9",
															"statements": [
																{
																	"nativeSrc": "5670:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:9"
																				},
																				"nativeSrc": "5730:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:9"
																		},
																		"nativeSrc": "5709:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:9",
															"nodeType": "YulBlock",
															"src": "5782:118:9",
															"statements": [
																{
																	"nativeSrc": "5797:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:9"
																				},
																				"nativeSrc": "5858:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:9"
																		},
																		"nativeSrc": "5837:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:9",
														"nodeType": "YulTypedName",
														"src": "5478:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:9",
														"nodeType": "YulTypedName",
														"src": "5489:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:9",
														"nodeType": "YulTypedName",
														"src": "5501:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:9",
														"nodeType": "YulTypedName",
														"src": "5509:6:9",
														"type": ""
													}
												],
												"src": "5433:474:9"
											},
											{
												"body": {
													"nativeSrc": "5941:152:9",
													"nodeType": "YulBlock",
													"src": "5941:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:9"
																},
																"nativeSrc": "5951:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:9"
															},
															"nativeSrc": "5951:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:9"
																},
																"nativeSrc": "6048:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:9"
															},
															"nativeSrc": "6048:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:9"
																},
																"nativeSrc": "6072:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:9"
															},
															"nativeSrc": "6072:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:9"
											},
											{
												"body": {
													"nativeSrc": "6150:269:9",
													"nodeType": "YulBlock",
													"src": "6150:269:9",
													"statements": [
														{
															"nativeSrc": "6160:22:9",
															"nodeType": "YulAssignment",
															"src": "6160:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:9"
																},
																"nativeSrc": "6170:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:9"
																}
															]
														},
														{
															"nativeSrc": "6191:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:9"
																},
																"nativeSrc": "6217:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:9",
																"nodeType": "YulBlock",
																"src": "6268:51:9",
																"statements": [
																	{
																		"nativeSrc": "6282:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:9"
																			},
																			"nativeSrc": "6292:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:9"
																},
																"nativeSrc": "6241:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:9"
															},
															"nativeSrc": "6238:81:9",
															"nodeType": "YulIf",
															"src": "6238:81:9"
														},
														{
															"body": {
																"nativeSrc": "6371:42:9",
																"nodeType": "YulBlock",
																"src": "6371:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:9"
																			},
																			"nativeSrc": "6385:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:9"
																		},
																		"nativeSrc": "6385:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:9"
																		},
																		"nativeSrc": "6355:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:9"
																},
																"nativeSrc": "6332:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:9"
															},
															"nativeSrc": "6329:84:9",
															"nodeType": "YulIf",
															"src": "6329:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:9",
														"nodeType": "YulTypedName",
														"src": "6134:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:9",
														"nodeType": "YulTypedName",
														"src": "6143:6:9",
														"type": ""
													}
												],
												"src": "6099:320:9"
											},
											{
												"body": {
													"nativeSrc": "6531:73:9",
													"nodeType": "YulBlock",
													"src": "6531:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:9"
																		},
																		"nativeSrc": "6549:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:9"
																	},
																	{
																		"hexValue": "6f6e6c792061646d696e20616464726573732063616e20616363657373",
																		"kind": "string",
																		"nativeSrc": "6565:31:9",
																		"nodeType": "YulLiteral",
																		"src": "6565:31:9",
																		"type": "",
																		"value": "only admin address can access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:9"
																},
																"nativeSrc": "6542:55:9",
																"nodeType": "YulFunctionCall",
																"src": "6542:55:9"
															},
															"nativeSrc": "6542:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "6542:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc",
												"nativeSrc": "6425:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:9",
														"nodeType": "YulTypedName",
														"src": "6523:6:9",
														"type": ""
													}
												],
												"src": "6425:179:9"
											},
											{
												"body": {
													"nativeSrc": "6756:220:9",
													"nodeType": "YulBlock",
													"src": "6756:220:9",
													"statements": [
														{
															"nativeSrc": "6766:74:9",
															"nodeType": "YulAssignment",
															"src": "6766:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6832:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6832:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6837:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6837:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6773:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6773:58:9"
																},
																"nativeSrc": "6773:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6773:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6766:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6766:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6938:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6938:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc",
																	"nativeSrc": "6849:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6849:88:9"
																},
																"nativeSrc": "6849:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6849:93:9"
															},
															"nativeSrc": "6849:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6849:93:9"
														},
														{
															"nativeSrc": "6951:19:9",
															"nodeType": "YulAssignment",
															"src": "6951:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6962:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6962:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6967:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6967:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6958:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:9"
																},
																"nativeSrc": "6958:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6958:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6951:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6951:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6610:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6744:3:9",
														"nodeType": "YulTypedName",
														"src": "6744:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6752:3:9",
														"nodeType": "YulTypedName",
														"src": "6752:3:9",
														"type": ""
													}
												],
												"src": "6610:366:9"
											},
											{
												"body": {
													"nativeSrc": "7153:248:9",
													"nodeType": "YulBlock",
													"src": "7153:248:9",
													"statements": [
														{
															"nativeSrc": "7163:26:9",
															"nodeType": "YulAssignment",
															"src": "7163:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7175:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7175:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7186:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7186:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7171:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7171:3:9"
																},
																"nativeSrc": "7171:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7171:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7163:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7163:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7210:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7210:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7221:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7221:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7206:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7206:3:9"
																		},
																		"nativeSrc": "7206:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7206:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7229:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7229:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7235:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7235:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7225:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7225:3:9"
																		},
																		"nativeSrc": "7225:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7225:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7199:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7199:6:9"
																},
																"nativeSrc": "7199:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7199:47:9"
															},
															"nativeSrc": "7199:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7199:47:9"
														},
														{
															"nativeSrc": "7255:139:9",
															"nodeType": "YulAssignment",
															"src": "7255:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7389:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7389:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7263:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7263:124:9"
																},
																"nativeSrc": "7263:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7263:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7255:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7255:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6982:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7133:9:9",
														"nodeType": "YulTypedName",
														"src": "7133:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7148:4:9",
														"nodeType": "YulTypedName",
														"src": "7148:4:9",
														"type": ""
													}
												],
												"src": "6982:419:9"
											},
											{
												"body": {
													"nativeSrc": "7513:116:9",
													"nodeType": "YulBlock",
													"src": "7513:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7535:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7535:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7543:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7543:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7531:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:9"
																		},
																		"nativeSrc": "7531:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:14:9"
																	},
																	{
																		"hexValue": "6f6e6c79206c6567616c206f776e657220616464726573732063616e20616363",
																		"kind": "string",
																		"nativeSrc": "7547:34:9",
																		"nodeType": "YulLiteral",
																		"src": "7547:34:9",
																		"type": "",
																		"value": "only legal owner address can acc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7524:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:9"
																},
																"nativeSrc": "7524:58:9",
																"nodeType": "YulFunctionCall",
																"src": "7524:58:9"
															},
															"nativeSrc": "7524:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "7524:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7603:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7603:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7611:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7611:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7599:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7599:3:9"
																		},
																		"nativeSrc": "7599:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7599:15:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "7616:5:9",
																		"nodeType": "YulLiteral",
																		"src": "7616:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7592:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:9"
																},
																"nativeSrc": "7592:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7592:30:9"
															},
															"nativeSrc": "7592:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7592:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361",
												"nativeSrc": "7407:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7505:6:9",
														"nodeType": "YulTypedName",
														"src": "7505:6:9",
														"type": ""
													}
												],
												"src": "7407:222:9"
											},
											{
												"body": {
													"nativeSrc": "7781:220:9",
													"nodeType": "YulBlock",
													"src": "7781:220:9",
													"statements": [
														{
															"nativeSrc": "7791:74:9",
															"nodeType": "YulAssignment",
															"src": "7791:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7857:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7857:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7862:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7798:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7798:58:9"
																},
																"nativeSrc": "7798:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7798:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7791:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7963:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7963:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361",
																	"nativeSrc": "7874:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7874:88:9"
																},
																"nativeSrc": "7874:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7874:93:9"
															},
															"nativeSrc": "7874:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7874:93:9"
														},
														{
															"nativeSrc": "7976:19:9",
															"nodeType": "YulAssignment",
															"src": "7976:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7987:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7987:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7992:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7992:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7983:3:9"
																},
																"nativeSrc": "7983:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7983:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7976:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7976:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7635:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7769:3:9",
														"nodeType": "YulTypedName",
														"src": "7769:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7777:3:9",
														"nodeType": "YulTypedName",
														"src": "7777:3:9",
														"type": ""
													}
												],
												"src": "7635:366:9"
											},
											{
												"body": {
													"nativeSrc": "8178:248:9",
													"nodeType": "YulBlock",
													"src": "8178:248:9",
													"statements": [
														{
															"nativeSrc": "8188:26:9",
															"nodeType": "YulAssignment",
															"src": "8188:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8200:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8200:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8211:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8211:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8196:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8196:3:9"
																},
																"nativeSrc": "8196:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8196:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8188:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8188:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8235:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8235:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8246:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8246:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:9"
																		},
																		"nativeSrc": "8231:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8231:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8254:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8254:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8260:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8260:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8250:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:9"
																		},
																		"nativeSrc": "8250:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8250:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8224:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:9"
																},
																"nativeSrc": "8224:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8224:47:9"
															},
															"nativeSrc": "8224:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8224:47:9"
														},
														{
															"nativeSrc": "8280:139:9",
															"nodeType": "YulAssignment",
															"src": "8280:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8414:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8414:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8288:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8288:124:9"
																},
																"nativeSrc": "8288:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8288:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8280:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8280:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8007:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8158:9:9",
														"nodeType": "YulTypedName",
														"src": "8158:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8173:4:9",
														"nodeType": "YulTypedName",
														"src": "8173:4:9",
														"type": ""
													}
												],
												"src": "8007:419:9"
											},
											{
												"body": {
													"nativeSrc": "8460:152:9",
													"nodeType": "YulBlock",
													"src": "8460:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8477:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8477:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8480:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8480:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8470:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:9"
																},
																"nativeSrc": "8470:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8470:88:9"
															},
															"nativeSrc": "8470:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8470:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8574:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8574:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8577:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8577:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8567:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:9"
																},
																"nativeSrc": "8567:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8567:15:9"
															},
															"nativeSrc": "8567:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8567:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8598:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8598:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8601:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8601:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8591:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:9"
																},
																"nativeSrc": "8591:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8591:15:9"
															},
															"nativeSrc": "8591:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8591:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8432:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8432:180:9"
											},
											{
												"body": {
													"nativeSrc": "8662:147:9",
													"nodeType": "YulBlock",
													"src": "8662:147:9",
													"statements": [
														{
															"nativeSrc": "8672:25:9",
															"nodeType": "YulAssignment",
															"src": "8672:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8695:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8695:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8677:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8677:17:9"
																},
																"nativeSrc": "8677:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8677:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8672:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8672:1:9"
																}
															]
														},
														{
															"nativeSrc": "8706:25:9",
															"nodeType": "YulAssignment",
															"src": "8706:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8729:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8729:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8711:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8711:17:9"
																},
																"nativeSrc": "8711:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8711:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8706:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8706:1:9"
																}
															]
														},
														{
															"nativeSrc": "8740:16:9",
															"nodeType": "YulAssignment",
															"src": "8740:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8751:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8754:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8754:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8747:3:9"
																},
																"nativeSrc": "8747:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8747:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8740:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8740:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8780:22:9",
																"nodeType": "YulBlock",
																"src": "8780:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8782:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8782:16:9"
																			},
																			"nativeSrc": "8782:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8782:18:9"
																		},
																		"nativeSrc": "8782:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8782:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8772:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8772:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8775:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8769:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8769:2:9"
																},
																"nativeSrc": "8769:10:9",
																"nodeType": "YulFunctionCall",
																"src": "8769:10:9"
															},
															"nativeSrc": "8766:36:9",
															"nodeType": "YulIf",
															"src": "8766:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8618:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8649:1:9",
														"nodeType": "YulTypedName",
														"src": "8649:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8652:1:9",
														"nodeType": "YulTypedName",
														"src": "8652:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8658:3:9",
														"nodeType": "YulTypedName",
														"src": "8658:3:9",
														"type": ""
													}
												],
												"src": "8618:191:9"
											},
											{
												"body": {
													"nativeSrc": "8860:149:9",
													"nodeType": "YulBlock",
													"src": "8860:149:9",
													"statements": [
														{
															"nativeSrc": "8870:25:9",
															"nodeType": "YulAssignment",
															"src": "8870:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8893:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8893:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8875:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8875:17:9"
																},
																"nativeSrc": "8875:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8875:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8870:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8870:1:9"
																}
															]
														},
														{
															"nativeSrc": "8904:25:9",
															"nodeType": "YulAssignment",
															"src": "8904:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8927:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8927:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8909:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8909:17:9"
																},
																"nativeSrc": "8909:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8909:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8904:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8904:1:9"
																}
															]
														},
														{
															"nativeSrc": "8938:17:9",
															"nodeType": "YulAssignment",
															"src": "8938:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8950:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8946:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:9"
																},
																"nativeSrc": "8946:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8946:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8938:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8938:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8980:22:9",
																"nodeType": "YulBlock",
																"src": "8980:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8982:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8982:16:9"
																			},
																			"nativeSrc": "8982:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8982:18:9"
																		},
																		"nativeSrc": "8982:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8982:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8971:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8971:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8977:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8977:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8968:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8968:2:9"
																},
																"nativeSrc": "8968:11:9",
																"nodeType": "YulFunctionCall",
																"src": "8968:11:9"
															},
															"nativeSrc": "8965:37:9",
															"nodeType": "YulIf",
															"src": "8965:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8815:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8846:1:9",
														"nodeType": "YulTypedName",
														"src": "8846:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8849:1:9",
														"nodeType": "YulTypedName",
														"src": "8849:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8855:4:9",
														"nodeType": "YulTypedName",
														"src": "8855:4:9",
														"type": ""
													}
												],
												"src": "8815:194:9"
											},
											{
												"body": {
													"nativeSrc": "9169:288:9",
													"nodeType": "YulBlock",
													"src": "9169:288:9",
													"statements": [
														{
															"nativeSrc": "9179:26:9",
															"nodeType": "YulAssignment",
															"src": "9179:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9191:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9191:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9202:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9202:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9187:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:9"
																},
																"nativeSrc": "9187:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9187:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9179:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9179:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9259:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9259:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9272:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9283:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9283:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9268:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:9"
																		},
																		"nativeSrc": "9268:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9268:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9215:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9215:43:9"
																},
																"nativeSrc": "9215:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9215:71:9"
															},
															"nativeSrc": "9215:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9215:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9340:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9340:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9353:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9353:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9364:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9364:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9349:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9349:3:9"
																		},
																		"nativeSrc": "9349:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9296:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9296:43:9"
																},
																"nativeSrc": "9296:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9296:72:9"
															},
															"nativeSrc": "9296:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9296:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9422:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9422:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9435:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9435:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9446:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9446:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9431:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9431:3:9"
																		},
																		"nativeSrc": "9431:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9431:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9378:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9378:43:9"
																},
																"nativeSrc": "9378:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9378:72:9"
															},
															"nativeSrc": "9378:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9378:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9015:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9125:9:9",
														"nodeType": "YulTypedName",
														"src": "9125:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9137:6:9",
														"nodeType": "YulTypedName",
														"src": "9137:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:9",
														"nodeType": "YulTypedName",
														"src": "9145:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9153:6:9",
														"nodeType": "YulTypedName",
														"src": "9153:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9164:4:9",
														"nodeType": "YulTypedName",
														"src": "9164:4:9",
														"type": ""
													}
												],
												"src": "9015:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admin address can access\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361(memPtr) {\n\n        mstore(add(memPtr, 0), \"only legal owner address can acc\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610271578063b2e6b912146102a1578063dd62ed3e146102bf578063efb98bcf146102ef576100f3565b806370a08231146101e95780638f2839701461021957806395cfbf6d1461023557806395d89b4114610253576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce567146101935780633cc38f5c146101b157806340c10f19146101cd576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff61030d565b60405161010c91906111d7565b60405180910390f35b61012f600480360381019061012a9190611288565b61039d565b60405161013c91906112e0565b60405180910390f35b61014d6103bf565b60405161015a9190611308565b60405180910390f35b61017d60048036038101906101789190611321565b6103c8565b60405161018a91906112e0565b60405180910390f35b61019b6103f6565b6040516101a8919061138c565b60405180910390f35b6101cb60048036038101906101c69190611288565b6103fe565b005b6101e760048036038101906101e29190611288565b610533565b005b61020360048036038101906101fe91906113a5565b6105b6565b6040516102109190611308565b60405180910390f35b610233600480360381019061022e91906113a5565b6105fb565b005b61023d6106e1565b60405161024a91906111d7565b60405180910390f35b61025b61071a565b60405161026891906111d7565b60405180910390f35b61028b60048036038101906102869190611288565b6107aa565b60405161029891906112e0565b60405180910390f35b6102a96107cc565b6040516102b691906113df565b60405180910390f35b6102d960048036038101906102d491906113f8565b6107da565b6040516102e69190611308565b60405180910390f35b6102f761085c565b6040516103049190611308565b60405180910390f35b60606003805461031c90611463565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611463565b80156103935780601f1061036a57610100808354040283529160200191610393565b820191905f5260205f20905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b5f5f6103a761095c565b90506103b4818585610963565b600191505092915050565b5f600254905090565b5f5f6103d261095c565b90506103df858285610975565b6103ea858585610a08565b60019150509392505050565b5f6012905090565b610406610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610473576040517f0a2a9e3e00000000000000000000000000000000000000000000000000000000815260040161046a906114dd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d8576040517f5bb7a72300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610511576040517fe16a8aa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61051b83610b66565b905042815f0181905550818160010181905550505050565b61053b610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f0a2a9e3e00000000000000000000000000000000000000000000000000000000815260040161059f906114dd565b60405180910390fd5b6105b28282610bcb565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610603610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f0a2a9e3e000000000000000000000000000000000000000000000000000000008152600401610667906114dd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d5576040517f5bb7a72300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106de81610c4a565b50565b6040518060400160405280601981526020017f4772616e7450726976696c656765732e4e616d6573706163650000000000000081525081565b60606004805461072990611463565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611463565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f5f6107b461095c565b90506107c1818585610a08565b600191505092915050565b5f6107d5610af8565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610865610af8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156108a657506108a433610cd3565b155b156108e6576040517f5e9b54e10000000000000000000000000000000000000000000000000000000081526004016108dd9061156b565b60405180910390fd5b5f6108f033610b66565b90505f815f015490505f826001015490505f82148061090e57505f81145b1561091e575f9350505050610959565b42818361092b91906115b6565b101561093c575f9350505050610959565b42818361094991906115b6565b61095391906115e9565b93505050505b90565b5f33905090565b6109708383836001610d37565b505050565b5f61098084846107da565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a0257818110156109f3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109ea9392919061161c565b60405180910390fd5b610a0184848484035f610d37565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a78575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a6f91906113df565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adf91906113df565b60405180910390fd5b610af3838383610f06565b505050565b5f610b3f610b3a6040518060400160405280601c81526020017f4772616e7450726976696c656765732e61646d696e416464726573730000000081525061111f565b61113b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f610bb883610baa6040518060400160405280601981526020017f4772616e7450726976696c656765732e4e616d6573706163650000000000000081525061111f565b61114490919063ffffffff16565b9050610bc38161115e565b915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c3291906113df565b60405180910390fd5b610c465f8383610f06565b5050565b80610c91610c8c6040518060400160405280601c81526020017f4772616e7450726976696c656765732e61646d696e416464726573730000000081525061111f565b61113b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5f610cde83610b66565b90505f815f015490505f826001015490505f821480610cfc57505f81145b15610d0c575f9350505050610d32565b8082610d1891906115b6565b421115610d2a575f9350505050610d32565b600193505050505b919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610da7575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d9e91906113df565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e17575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e0e91906113df565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f00578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ef79190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f56578060025f828254610f4a91906115b6565b92505081905550611024565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fdf578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fd69392919061161c565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106b578060025f82825403925050819055506110b5565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111129190611308565b60405180910390a3505050565b5f600182516020840120035f5260ff1960205f20169050919050565b5f819050919050565b5f5f1960601c82165f528260205260405f20905092915050565b5f819050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111a982611167565b6111b38185611171565b93506111c3818560208601611181565b6111cc8161118f565b840191505092915050565b5f6020820190508181035f8301526111ef818461119f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611224826111fb565b9050919050565b6112348161121a565b811461123e575f5ffd5b50565b5f8135905061124f8161122b565b92915050565b5f819050919050565b61126781611255565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f5f6040838503121561129e5761129d6111f7565b5b5f6112ab85828601611241565b92505060206112bc85828601611274565b9150509250929050565b5f8115159050919050565b6112da816112c6565b82525050565b5f6020820190506112f35f8301846112d1565b92915050565b61130281611255565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376111f7565b5b5f61134586828701611241565b935050602061135686828701611241565b925050604061136786828701611274565b9150509250925092565b5f60ff82169050919050565b61138681611371565b82525050565b5f60208201905061139f5f83018461137d565b92915050565b5f602082840312156113ba576113b96111f7565b5b5f6113c784828501611241565b91505092915050565b6113d98161121a565b82525050565b5f6020820190506113f25f8301846113d0565b92915050565b5f5f6040838503121561140e5761140d6111f7565b5b5f61141b85828601611241565b925050602061142c85828601611241565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061147a57607f821691505b60208210810361148d5761148c611436565b5b50919050565b7f6f6e6c792061646d696e20616464726573732063616e206163636573730000005f82015250565b5f6114c7601d83611171565b91506114d282611493565b602082019050919050565b5f6020820190508181035f8301526114f4816114bb565b9050919050565b7f6f6e6c79206c6567616c206f776e657220616464726573732063616e206163635f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611555602383611171565b9150611560826114fb565b604082019050919050565b5f6020820190508181035f83015261158281611549565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c082611255565b91506115cb83611255565b92508282019050808211156115e3576115e2611589565b5b92915050565b5f6115f382611255565b91506115fe83611255565b925082820390508181111561161657611615611589565b5b92915050565b5f60608201905061162f5f8301866113d0565b61163c60208301856112f9565b61164960408301846112f9565b94935050505056fea26469706673582212203b105ef77bd6206590529d92c9f0d580a39215f32954639f23045bde9e16cca064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xB2E6B912 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x2EF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x95CFBF6D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3CC38F5C EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x348 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A7 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x3B4 DUP2 DUP6 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D2 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x3DF DUP6 DUP3 DUP6 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3EA DUP6 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x406 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BB7A72300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE16A8AA400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x51B DUP4 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x53B PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B2 DUP3 DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x603 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2A9E3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BB7A72300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0xC4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E4E616D65737061636500000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1463 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7B4 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH2 0x7C1 DUP2 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D5 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x865 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH2 0x8A4 CALLER PUSH2 0xCD3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5E9B54E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8F0 CALLER PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP3 EQ DUP1 PUSH2 0x90E JUMPI POP PUSH0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x91E JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x959 JUMP JUMPDEST TIMESTAMP DUP2 DUP4 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST LT ISZERO PUSH2 0x93C JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x959 JUMP JUMPDEST TIMESTAMP DUP2 DUP4 PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x970 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP5 DUP5 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA02 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA01 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD37 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF3 DUP4 DUP4 DUP4 PUSH2 0xF06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3F PUSH2 0xB3A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E61646D696E4164647265737300000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xBB8 DUP4 PUSH2 0xBAA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E4E616D65737061636500000000000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC46 PUSH0 DUP4 DUP4 PUSH2 0xF06 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0xC91 PUSH2 0xC8C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4772616E7450726976696C656765732E61646D696E4164647265737300000000 DUP2 MSTORE POP PUSH2 0x111F JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCDE DUP4 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP3 EQ DUP1 PUSH2 0xCFC JUMPI POP PUSH0 DUP2 EQ JUMPDEST ISZERO PUSH2 0xD0C JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0xD32 JUMP JUMPDEST DUP1 DUP3 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xD2A JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF00 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF56 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1024 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 SUB PUSH0 MSTORE PUSH1 0xFF NOT PUSH1 0x20 PUSH0 KECCAK256 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 NOT PUSH1 0x60 SHR DUP3 AND PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A9 DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x11B3 DUP2 DUP6 PUSH2 0x1171 JUMP JUMPDEST SWAP4 POP PUSH2 0x11C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x11CC DUP2 PUSH2 0x118F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11EF DUP2 DUP5 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP2 EQ PUSH2 0x123E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x124F DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH2 0x129D PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AB DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12BC DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139F PUSH0 DUP4 ADD DUP5 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C7 DUP5 DUP3 DUP6 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D9 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140E JUMPI PUSH2 0x140D PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141B DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142C DUP6 DUP3 DUP7 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x147A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x148D JUMPI PUSH2 0x148C PUSH2 0x1436 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E20616464726573732063616E20616363657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C7 PUSH1 0x1D DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D2 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F4 DUP2 PUSH2 0x14BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206C6567616C206F776E657220616464726573732063616E20616363 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1555 PUSH1 0x23 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1582 DUP2 PUSH2 0x1549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C0 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CB DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15F3 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FE DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x162F PUSH0 DUP4 ADD DUP7 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x163C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x1649 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE LT MCOPY 0xF7 PUSH28 0xD6206590529D92C9F0D580A39215F32954639F23045BDE9E16CCA064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "159:389:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4498:400:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;442:103:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5956:184:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1125:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5700:101:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5071:515:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:1;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;4498:400:8:-;3253:18;:16;:18::i;:::-;3239:32;;:10;:32;;;3235:112;;3294:42;;;;;;;;;;:::i;:::-;;;;;;;;3235:112;4604:1:::1;4584:22;;:8;:22;;::::0;4580:74:::1;;4629:14;;;;;;;;;;;;;;4580:74;4681:1;4667:10;:15:::0;4663:68:::1;;4705:15;;;;;;;;;;;;;;4663:68;4740:27;4770:32;4793:8;4770:22;:32::i;:::-;4740:62;;4834:15;4812:9;:19;;:37;;;;4881:10;4859:9;:19;;:32;;;;4570:328;4498:400:::0;;:::o;442:103:7:-;3253:18:8;:16;:18::i;:::-;3239:32;;:10;:32;;;3235:112;;3294:42;;;;;;;;;;:::i;:::-;;;;;;;;3235:112;517:21:7::1;523:7;532:5;517;:21::i;:::-;442:103:::0;;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;5956:184:8:-;3253:18;:16;:18::i;:::-;3239:32;;:10;:32;;;3235:112;;3294:42;;;;;;;;;;:::i;:::-;;;;;;;;3235:112;6048:1:::1;6028:22;;:8;:22;;::::0;6024:74:::1;;6073:14;;;;;;;;;;;;;;6024:74;6107:26;6124:8;6107:16;:26::i;:::-;5956:184:::0;:::o;1125:78::-;;;;;;;;;;;;;;;;;;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;5700:101:8:-;5750:7;5776:18;:16;:18::i;:::-;5769:25;;5700:101;:::o;3532:140:1:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;5071:515:8:-;5132:4;3513:18;:16;:18::i;:::-;3499:32;;:10;:32;;;;:60;;;;;3536:23;3548:10;3536:11;:23::i;:::-;3535:24;3499:60;3495:151;;;3582:53;;;;;;;;;;:::i;:::-;;;;;;;;3495:151;5148:27:::1;5178:34;5201:10;5178:22;:34::i;:::-;5148:64;;5222:14;5239:9;:19;;;5222:36;;5268:14;5285:9;:19;;;5268:36;;5332:1;5319:9;:14;:32;;;;5350:1;5337:9;:14;5319:32;5315:91;;;5374:1;5367:8;;;;;;;5315:91;5446:15;5433:9;5421;:21;;;;:::i;:::-;5420:41;5416:105;;;5484:1;5477:8;;;;;;;5416:105;5564:15;5551:9;5539;:21;;;;:::i;:::-;5538:41;;;;:::i;:::-;5531:48;;;;;3655:1;5071:515:::0;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1599:133:8:-;1649:7;1675:44;:27;:13;;;;;;;;;;;;;;;;;:25;:27::i;:::-;:42;:44::i;:::-;:50;;;;;;;;;;;;1668:57;;1599:133;:::o;2688:246::-;2760:19;2791:21;2815:63;2869:8;2815:39;:25;;;;;;;;;;;;;;;;;:37;:39::i;:::-;:53;;:63;;;;:::i;:::-;2791:87;;2895:32;2913:13;2895:17;:32::i;:::-;2888:39;;;2688:246;;;:::o;7439:208:1:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1857:136:8:-;1975:11;1922:44;:27;:13;;;;;;;;;;;;;;;;;:25;:27::i;:::-;:42;:44::i;:::-;:50;;;:64;;;;;;;;;;;;;;;;;;1857:136;:::o;3802:512::-;3868:4;3884:27;3914:37;3937:13;3914:22;:37::i;:::-;3884:67;;3961:14;3978:9;:19;;;3961:36;;4007:14;4024:9;:19;;;4007:36;;4071:1;4058:9;:14;:32;;;;4089:1;4076:9;:14;4058:32;4054:93;;;4113:5;4106:12;;;;;;;4054:93;4238:9;4226;:21;;;;:::i;:::-;4207:15;:41;4203:84;;;4271:5;4264:12;;;;;;;4203:84;4303:4;4296:11;;;;;3802:512;;;;:::o;9682:432:1:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;1707:277:5:-;1776:12;1907:1;1894:9;1888:16;1881:4;1870:9;1866:20;1856:49;1852:57;1846:4;1839:71;1962:4;1958:9;1951:4;1945;1935:21;1931:37;1923:45;;1707:277;;;:::o;1899:163:6:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;2681:268:5:-;2754:14;2853:1;2849:6;2845:2;2841:15;2836:3;2832:25;2826:4;2819:39;2884:4;2878;2871:18;2928:4;2922;2912:21;2902:31;;2681:268;;;;:::o;2368:163:8:-;2431:19;2511:4;2501:14;;2368:163;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:179::-;6565:31;6561:1;6553:6;6549:14;6542:55;6425:179;:::o;6610:366::-;6752:3;6773:67;6837:2;6832:3;6773:67;:::i;:::-;6766:74;;6849:93;6938:3;6849:93;:::i;:::-;6967:2;6962:3;6958:12;6951:19;;6610:366;;;:::o;6982:419::-;7148:4;7186:2;7175:9;7171:18;7163:26;;7235:9;7229:4;7225:20;7221:1;7210:9;7206:17;7199:47;7263:131;7389:4;7263:131;:::i;:::-;7255:139;;6982:419;;;:::o;7407:222::-;7547:34;7543:1;7535:6;7531:14;7524:58;7616:5;7611:2;7603:6;7599:15;7592:30;7407:222;:::o;7635:366::-;7777:3;7798:67;7862:2;7857:3;7798:67;:::i;:::-;7791:74;;7874:93;7963:3;7874:93;:::i;:::-;7992:2;7987:3;7983:12;7976:19;;7635:366;;;:::o;8007:419::-;8173:4;8211:2;8200:9;8196:18;8188:26;;8260:9;8254:4;8250:20;8246:1;8235:9;8231:17;8224:47;8288:131;8414:4;8288:131;:::i;:::-;8280:139;;8007:419;;;:::o;8432:180::-;8480:77;8477:1;8470:88;8577:4;8574:1;8567:15;8601:4;8598:1;8591:15;8618:191;8658:3;8677:20;8695:1;8677:20;:::i;:::-;8672:25;;8711:20;8729:1;8711:20;:::i;:::-;8706:25;;8754:1;8751;8747:9;8740:16;;8775:3;8772:1;8769:10;8766:36;;;8782:18;;:::i;:::-;8766:36;8618:191;;;;:::o;8815:194::-;8855:4;8875:20;8893:1;8875:20;:::i;:::-;8870:25;;8909:20;8927:1;8909:20;:::i;:::-;8904:25;;8953:1;8950;8946:9;8938:17;;8977:1;8971:4;8968:11;8965:37;;;8982:18;;:::i;:::-;8965:37;8815:194;;;;:::o;9015:442::-;9164:4;9202:2;9191:9;9187:18;9179:26;;9215:71;9283:1;9272:9;9268:17;9259:6;9215:71;:::i;:::-;9296:72;9364:2;9353:9;9349:18;9340:6;9296:72;:::i;:::-;9378;9446:2;9435:9;9431:18;9422:6;9378:72;:::i;:::-;9015:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1153400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GRANTPRIVILEGES_NAMESPACE()": "infinite",
								"addOwner(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"changeAdmin(address)": "infinite",
								"decimals()": "383",
								"getAdminAddress()": "2844",
								"getRemainingTime()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 306,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 306,
									"end": 437,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 368,
									"end": 373,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 375,
									"end": 382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3053,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 3070,
									"end": 3080,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 3053,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 3053,
									"end": 3069,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3053,
									"end": 3069,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3053,
									"end": 3081,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3053,
									"end": 3081,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3053,
									"end": 3081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3053,
									"end": 3081,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 3053,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 393,
									"end": 430,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 411,
									"end": 429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 393,
									"end": 398,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 393,
									"end": 398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 393,
									"end": 398,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 393,
									"end": 430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 393,
									"end": 430,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 393,
									"end": 430,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 393,
									"end": 430,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 393,
									"end": 430,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 306,
									"end": 437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1993,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1857,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 1986,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1922,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "4772616E7450726976696C656765732E61646D696E4164647265737300000000"
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1922,
									"end": 1947,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1947,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1949,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1949,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1949,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1922,
									"end": 1964,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1964,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1922,
									"end": 1966,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1966,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1922,
									"end": 1966,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1986,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 1993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 1993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1984,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1707,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 1788,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1908,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1894,
									"end": 1903,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1888,
									"end": 1904,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1881,
									"end": 1885,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1886,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1905,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1852,
									"end": 1909,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1958,
									"end": 1967,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1951,
									"end": 1955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 1949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1935,
									"end": 1956,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1931,
									"end": 1968,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 1968,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 1968,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1984,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1984,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2032,
									"end": 2046,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2032,
									"end": 2046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 2062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8507,
									"end": 8514,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8547,
									"end": 8589,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8536,
									"end": 8590,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8525,
									"end": 8590,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8525,
									"end": 8590,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8470,
									"end": 8596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8470,
									"end": 8596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8639,
									"end": 8646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8686,
									"end": 8691,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 8668,
									"end": 8692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8668,
									"end": 8692,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8657,
									"end": 8692,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8657,
									"end": 8692,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8602,
									"end": 8698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8602,
									"end": 8698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8809,
									"end": 8814,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 8791,
									"end": 8815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8791,
									"end": 8815,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8786,
									"end": 8789,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8779,
									"end": 8816,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8704,
									"end": 8822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8704,
									"end": 8822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8921,
									"end": 8925,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8959,
									"end": 8961,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8948,
									"end": 8957,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8944,
									"end": 8962,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8936,
									"end": 8962,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8936,
									"end": 8962,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 9040,
									"end": 9041,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9029,
									"end": 9038,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9025,
									"end": 9042,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9016,
									"end": 9022,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 8972,
									"end": 9043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 8972,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 9050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9056,
									"end": 9236,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9056,
									"end": 9236,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9104,
									"end": 9181,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9101,
									"end": 9102,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9094,
									"end": 9182,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9201,
									"end": 9205,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 9198,
									"end": 9199,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 9191,
									"end": 9206,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9225,
									"end": 9229,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9222,
									"end": 9223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9215,
									"end": 9230,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9282,
									"end": 9285,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9301,
									"end": 9321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 9319,
									"end": 9320,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9301,
									"end": 9321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 9301,
									"end": 9321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9301,
									"end": 9321,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 9301,
									"end": 9321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9296,
									"end": 9321,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9296,
									"end": 9321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9335,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9353,
									"end": 9354,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9335,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 9335,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9335,
									"end": 9355,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9335,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9330,
									"end": 9355,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9330,
									"end": 9355,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9379,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9375,
									"end": 9376,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9371,
									"end": 9380,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9364,
									"end": 9380,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9364,
									"end": 9380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9399,
									"end": 9402,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 9396,
									"end": 9397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9393,
									"end": 9403,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9390,
									"end": 9426,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9390,
									"end": 9426,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9390,
									"end": 9426,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9406,
									"end": 9424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9406,
									"end": 9424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9406,
									"end": 9424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9406,
									"end": 9424,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9406,
									"end": 9424,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9390,
									"end": 9426,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9390,
									"end": 9426,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9439,
									"end": 9557,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 9439,
									"end": 9557,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9526,
									"end": 9550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9544,
									"end": 9549,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9526,
									"end": 9550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 9526,
									"end": 9550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9526,
									"end": 9550,
									"name": "tag",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9526,
									"end": 9550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9521,
									"end": 9524,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9514,
									"end": 9551,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9439,
									"end": 9557,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9439,
									"end": 9557,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9439,
									"end": 9557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9712,
									"end": 9716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9750,
									"end": 9752,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 9739,
									"end": 9748,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9735,
									"end": 9753,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9727,
									"end": 9753,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9727,
									"end": 9753,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9763,
									"end": 9834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9831,
									"end": 9832,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9820,
									"end": 9829,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9816,
									"end": 9833,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9807,
									"end": 9813,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9763,
									"end": 9834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 9763,
									"end": 9834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9763,
									"end": 9834,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9763,
									"end": 9834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9844,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9912,
									"end": 9914,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9901,
									"end": 9910,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9897,
									"end": 9915,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9888,
									"end": 9894,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9844,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 9844,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9844,
									"end": 9916,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9844,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9926,
									"end": 9998,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9994,
									"end": 9996,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 9983,
									"end": 9992,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9979,
									"end": 9997,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9970,
									"end": 9976,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9926,
									"end": 9998,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 9926,
									"end": 9998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9926,
									"end": 9998,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9926,
									"end": 9998,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 10005,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10104,
									"end": 10108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10142,
									"end": 10144,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10131,
									"end": 10140,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10127,
									"end": 10145,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10119,
									"end": 10145,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10119,
									"end": 10145,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10155,
									"end": 10226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 10223,
									"end": 10224,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10212,
									"end": 10221,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10208,
									"end": 10225,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10199,
									"end": 10205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10155,
									"end": 10226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10155,
									"end": 10226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10155,
									"end": 10226,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 10155,
									"end": 10226,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10011,
									"end": 10233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 159,
									"end": 548,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 159,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 548,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b105ef77bd6206590529d92c9f0d580a39215f32954639f23045bde9e16cca064736f6c634300081e0033",
									".code": [
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "B2E6B912"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "EFB98BCF"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "8F283970"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "95CFBF6D"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "3CC38F5C"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 548,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4498,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4498,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 545,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 442,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 442,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5956,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5956,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1125,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1125,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5700,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5700,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5071,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5071,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3253,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "A2A9E3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3294,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4604,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4592,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4606,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4580,
											"end": 4654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4580,
											"end": 4654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5BB7A72300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4643,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4580,
											"end": 4654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4580,
											"end": 4654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4682,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4663,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E16A8AA400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4720,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4663,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4801,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4770,
											"end": 4802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4770,
											"end": 4802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4834,
											"end": 4849,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4821,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4849,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4859,
											"end": 4878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4891,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 545,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 442,
											"end": 545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3253,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "A2A9E3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3294,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 523,
											"end": 530,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 517,
											"end": 522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 517,
											"end": 538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 517,
											"end": 538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 517,
											"end": 538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3253,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "A2A9E3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3294,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3235,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6048,
											"end": 6049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6028,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6028,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6024,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6024,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5BB7A72300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6024,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6024,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6124,
											"end": 6132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6107,
											"end": 6133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6107,
											"end": 6133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "4772616E7450726976696C656765732E4E616D65737061636500000000000000"
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5750,
											"end": 5757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5776,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3513,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3509,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3548,
											"end": 3558,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3536,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3499,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3646,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3495,
											"end": 3646,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "5E9B54E100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3582,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3646,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3495,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5201,
											"end": 5211,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5178,
											"end": 5212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5258,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5285,
											"end": 5304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5333,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5319,
											"end": 5351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5315,
											"end": 5406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5367,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5315,
											"end": 5406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5461,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5421,
											"end": 5442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5421,
											"end": 5442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5461,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5521,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5416,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5477,
											"end": 5485,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5416,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5579,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5548,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5539,
											"end": 5560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5539,
											"end": 5560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5538,
											"end": 5579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5538,
											"end": 5579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5579,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3655,
											"end": 3656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1732,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1599,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1675,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "4772616E7450726976696C656765732E61646D696E4164647265737300000000"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1675,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1702,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1675,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1675,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1719,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1675,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2934,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2688,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2869,
											"end": 2877,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "4772616E7450726976696C656765732E4E616D65737061636500000000000000"
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2815,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2854,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2815,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2815,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2913,
											"end": 2926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2895,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2927,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2895,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1993,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1857,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1986,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1922,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "PUSH",
											"source": 8,
											"value": "4772616E7450726976696C656765732E61646D696E4164647265737300000000"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1922,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1922,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1922,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1966,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1922,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 1986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3911,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3937,
											"end": 3950,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3914,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3951,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3914,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3961,
											"end": 3975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3961,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3961,
											"end": 3997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4071,
											"end": 4072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4058,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4147,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4054,
											"end": 4147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4147,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4054,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4226,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4222,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4203,
											"end": 4287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4287,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4203,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1984,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1707,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1904,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 1885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1905,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1909,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1968,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2933,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2531,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2368,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6604,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6425,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6596,
											"name": "PUSH",
											"source": 9,
											"value": "6F6E6C792061646D696E20616464726573732063616E20616363657373000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6976,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6610,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6773,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6837,
											"end": 6839,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 6832,
											"end": 6835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6773,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6773,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6849,
											"end": 6942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6942,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6849,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6951,
											"end": 6970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6951,
											"end": 6970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6976,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7401,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6982,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7175,
											"end": 7184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7235,
											"end": 7244,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7229,
											"end": 7233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7221,
											"end": 7222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7263,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7394,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7263,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7255,
											"end": 7394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7255,
											"end": 7394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7629,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7407,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7581,
											"name": "PUSH",
											"source": 9,
											"value": "6F6E6C79206C6567616C206F776E657220616464726573732063616E20616363"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 7621,
											"name": "PUSH",
											"source": 9,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7611,
											"end": 7613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7603,
											"end": 7609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7599,
											"end": 7614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7592,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 8001,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7635,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7777,
											"end": 7780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 7857,
											"end": 7860,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7798,
											"end": 7865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7865,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7798,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7874,
											"end": 7967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7967,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7874,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7992,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7987,
											"end": 7990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7983,
											"end": 7995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 8001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 8001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 8001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 8001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8007,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8211,
											"end": 8213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8250,
											"end": 8270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 8248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8288,
											"end": 8419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8419,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8288,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8280,
											"end": 8419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8280,
											"end": 8419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8612,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8432,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 8557,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8567,
											"end": 8582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8601,
											"end": 8605,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8658,
											"end": 8661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8677,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 8677,
											"end": 8697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8677,
											"end": 8697,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8677,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8729,
											"end": 8730,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 8711,
											"end": 8731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8747,
											"end": 8756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8779,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8802,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8766,
											"end": 8802,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8782,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8802,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8766,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 8875,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8895,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8875,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8927,
											"end": 8928,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 8909,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8929,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8909,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8953,
											"end": 8954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 8955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 8955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8979,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9002,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8965,
											"end": 9002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8982,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9002,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8965,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9202,
											"end": 9204,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9191,
											"end": 9200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9268,
											"end": 9285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9265,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9215,
											"end": 9286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9286,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9215,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9346,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9296,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9368,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9296,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9378,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9446,
											"end": 9448,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9435,
											"end": 9444,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9428,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9378,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9378,
											"end": 9450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9378,
											"end": 9450,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9378,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/ERC20/CustomeERC20.sol",
								"contracts/utils/GrantPrivileges.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"GRANTPRIVILEGES_NAMESPACE()": "95cfbf6d",
							"addOwner(address,uint256)": "3cc38f5c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeAdmin(address)": "8f283970",
							"decimals()": "313ce567",
							"getAdminAddress()": "b2e6b912",
							"getRemainingTime()": "efb98bcf",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"OnlyLegalOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimeLimitZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRANTPRIVILEGES_NAMESPACE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addOwner(address,uint256)\":{\"details\":\"Adds a new authorized user with a time limit.\",\"params\":{\"_timeLimit\":\"Duration of access in seconds.\",\"newOwner\":\"Address of the new user.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"changeAdmin(address)\":{\"details\":\"Allows the current admin to transfer admin privileges to a new address.\",\"params\":{\"newAdmin\":\"Address of the new admin.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAdminAddress()\":{\"details\":\"Public function to get the current admin address.\",\"returns\":{\"_0\":\"Admin address.\"}},\"getRemainingTime()\":{\"details\":\"Allows authorized users to check their remaining access time.\",\"returns\":{\"_0\":\"Remaining time in seconds, or 0 if authorization has expired.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/CustomeERC20.sol\":\"MyERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/token/ERC20/CustomeERC20.sol\":{\"keccak256\":\"0xed00e56f81668ab80292729ab01f7a160b24682d5180a44f569b80119c3fc548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e7622b07bbf492cab905bef12b1d0f50b609ba0894260e6da500ead06f1f61\",\"dweb:/ipfs/QmajFu6xiFVA8ZZU4XuL2QLDcaGwxGhenNQ8bHabGgMKHB\"]},\"contracts/utils/GrantPrivileges.sol\":{\"keccak256\":\"0xd43100daef0606ae89d228c9c29d8afe3e8d5eea6c0fd32d1399f3725d315adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38023629b29af27a3d67a4369c8628ae89b159e7776c56ddd0e734c2f80e752f\",\"dweb:/ipfs/QmckPVUR5oaSctYT9oRpkLRsZnxGg4VP6Bo44GxwoVT1Jk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/token/ERC20/CustomeERC20.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/token/ERC20/CustomeERC20.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/token/ERC20/CustomeERC20.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/token/ERC20/CustomeERC20.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/token/ERC20/CustomeERC20.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/GrantPrivileges.sol": {
				"GrantPrivileges": {
					"abi": [
						{
							"inputs": [],
							"name": "AddressEmpty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "info",
									"type": "string"
								}
							],
							"name": "OnlyAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "info",
									"type": "string"
								}
							],
							"name": "OnlyLegalOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TimeLimitZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "GRANTPRIVILEGES_NAMESPACE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_timeLimit",
									"type": "uint256"
								}
							],
							"name": "addOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAdminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRemainingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Abstract contract to manage time-based access control for specific functions. Admin can grant temporary access to users, enabling functionalities like subscriptions or time-limited permissions. ## Usage Example: contract EatFoodContract is GrantPrivileges {     function eatFood(string calldata str) external view onlyOwner returns (bytes32) {         return keccak256(abi.encode(str));     } } 1. Inherit from `GrantPrivileges` in your contract. 2. Use `onlyAdmin` for admin-restricted functions and `onlyOwner` for time-limited access control. 3. Deploy your contract, and the deploying address will be the initial admin. 4. Admin can add authorized users using `addOwner()`. 5. Authorized users can access `onlyOwner` functions within the granted time frame.",
						"kind": "dev",
						"methods": {
							"addOwner(address,uint256)": {
								"details": "Adds a new authorized user with a time limit.",
								"params": {
									"_timeLimit": "Duration of access in seconds.",
									"newOwner": "Address of the new user."
								}
							},
							"changeAdmin(address)": {
								"details": "Allows the current admin to transfer admin privileges to a new address.",
								"params": {
									"newAdmin": "Address of the new admin."
								}
							},
							"constructor": {
								"details": "Constructor sets the deploying address as the initial admin."
							},
							"getAdminAddress()": {
								"details": "Public function to get the current admin address.",
								"returns": {
									"_0": "Admin address."
								}
							},
							"getRemainingTime()": {
								"details": "Allows authorized users to check their remaining access time.",
								"returns": {
									"_0": "Remaining time in seconds, or 0 if authorization has expired."
								}
							}
						},
						"title": "GrantPrivileges",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"GRANTPRIVILEGES_NAMESPACE()": "95cfbf6d",
							"addOwner(address,uint256)": "3cc38f5c",
							"changeAdmin(address)": "8f283970",
							"getAdminAddress()": "b2e6b912",
							"getRemainingTime()": "efb98bcf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"OnlyLegalOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimeLimitZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GRANTPRIVILEGES_NAMESPACE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract to manage time-based access control for specific functions. Admin can grant temporary access to users, enabling functionalities like subscriptions or time-limited permissions. ## Usage Example: contract EatFoodContract is GrantPrivileges {     function eatFood(string calldata str) external view onlyOwner returns (bytes32) {         return keccak256(abi.encode(str));     } } 1. Inherit from `GrantPrivileges` in your contract. 2. Use `onlyAdmin` for admin-restricted functions and `onlyOwner` for time-limited access control. 3. Deploy your contract, and the deploying address will be the initial admin. 4. Admin can add authorized users using `addOwner()`. 5. Authorized users can access `onlyOwner` functions within the granted time frame.\",\"kind\":\"dev\",\"methods\":{\"addOwner(address,uint256)\":{\"details\":\"Adds a new authorized user with a time limit.\",\"params\":{\"_timeLimit\":\"Duration of access in seconds.\",\"newOwner\":\"Address of the new user.\"}},\"changeAdmin(address)\":{\"details\":\"Allows the current admin to transfer admin privileges to a new address.\",\"params\":{\"newAdmin\":\"Address of the new admin.\"}},\"constructor\":{\"details\":\"Constructor sets the deploying address as the initial admin.\"},\"getAdminAddress()\":{\"details\":\"Public function to get the current admin address.\",\"returns\":{\"_0\":\"Admin address.\"}},\"getRemainingTime()\":{\"details\":\"Allows authorized users to check their remaining access time.\",\"returns\":{\"_0\":\"Remaining time in seconds, or 0 if authorization has expired.\"}}},\"title\":\"GrantPrivileges\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/GrantPrivileges.sol\":\"GrantPrivileges\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/utils/GrantPrivileges.sol\":{\"keccak256\":\"0xd43100daef0606ae89d228c9c29d8afe3e8d5eea6c0fd32d1399f3725d315adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38023629b29af27a3d67a4369c8628ae89b159e7776c56ddd0e734c2f80e752f\",\"dweb:/ipfs/QmckPVUR5oaSctYT9oRpkLRsZnxGg4VP6Bo44GxwoVT1Jk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
					"exportedSymbols": {
						"SlotDerivation": [
							915
						]
					},
					"id": 916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "199:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SlotDerivation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "225:1373:5",
								"text": " @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 915,
							"linearizedBaseContracts": [
								915
							],
							"name": "SlotDerivation",
							"nameLocation": "1607:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "1790:194:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1825:153:5",
													"nodeType": "YulBlock",
													"src": "1825:153:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1846:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1846:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nativeSrc": "1870:9:5",
																								"nodeType": "YulIdentifier",
																								"src": "1870:9:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1881:4:5",
																								"nodeType": "YulLiteral",
																								"src": "1881:4:5",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1866:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1866:3:5"
																						},
																						"nativeSrc": "1866:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1866:20:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nativeSrc": "1894:9:5",
																								"nodeType": "YulIdentifier",
																								"src": "1894:9:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "1888:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "1888:5:5"
																						},
																						"nativeSrc": "1888:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1888:16:5"
																					}
																				],
																				"functionName": {
																					"name": "keccak256",
																					"nativeSrc": "1856:9:5",
																					"nodeType": "YulIdentifier",
																					"src": "1856:9:5"
																				},
																				"nativeSrc": "1856:49:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1856:49:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1907:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1907:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1852:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1852:3:5"
																		},
																		"nativeSrc": "1852:57:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1852:57:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1839:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:5"
																},
																"nativeSrc": "1839:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:71:5"
															},
															"nativeSrc": "1839:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:71:5"
														},
														{
															"nativeSrc": "1923:45:5",
															"nodeType": "YulAssignment",
															"src": "1923:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1945:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1945:4:5",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1951:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "1935:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "1935:9:5"
																		},
																		"nativeSrc": "1935:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:21:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1962:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1962:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1958:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:5"
																		},
																		"nativeSrc": "1958:9:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1931:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:5"
																},
																"nativeSrc": "1931:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1931:37:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "1923:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1923:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 791,
														"isOffset": false,
														"isSlot": false,
														"src": "1870:9:5",
														"valueSize": 1
													},
													{
														"declaration": 791,
														"isOffset": false,
														"isSlot": false,
														"src": "1894:9:5",
														"valueSize": 1
													},
													{
														"declaration": 794,
														"isOffset": false,
														"isSlot": false,
														"src": "1923:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 796,
												"nodeType": "InlineAssembly",
												"src": "1800:178:5"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "1628:74:5",
										"text": " @dev Derive an ERC-7201 slot from a string (namespace)."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc7201Slot",
									"nameLocation": "1716:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "namespace",
												"nameLocation": "1742:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1728:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:25:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1784:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1776:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:14:5"
									},
									"scope": 915,
									"src": "1707:277:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "2176:86:5",
										"statements": [
											{
												"id": 818,
												"nodeType": "UncheckedBlock",
												"src": "2186:70:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 812,
																				"name": "slot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "2233:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2225:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2225:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2225:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 814,
																		"name": "pos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "2241:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2225:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2217:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 808,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2217:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2217:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"functionReturnParameters": 807,
														"id": 817,
														"nodeType": "Return",
														"src": "2210:35:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1990:99:5",
										"text": " @dev Add an offset to a slot to get the n-th element of a structure or an array."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "offset",
									"nameLocation": "2103:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2118:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2110:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2132:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2124:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:27:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2168:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2160:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:16:5"
									},
									"scope": 915,
									"src": "2094:168:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2465:127:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2500:86:5",
													"nodeType": "YulBlock",
													"src": "2500:86:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2521:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2521:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "2527:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2527:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2514:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:5"
																},
																"nativeSrc": "2514:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2514:18:5"
															},
															"nativeSrc": "2514:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "2514:18:5"
														},
														{
															"nativeSrc": "2545:31:5",
															"nodeType": "YulAssignment",
															"src": "2545:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2565:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2565:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2571:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2571:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2555:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2555:9:5"
																},
																"nativeSrc": "2555:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2555:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 826,
														"isOffset": false,
														"isSlot": false,
														"src": "2545:6:5",
														"valueSize": 1
													},
													{
														"declaration": 823,
														"isOffset": false,
														"isSlot": false,
														"src": "2527:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 828,
												"nodeType": "InlineAssembly",
												"src": "2475:111:5"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "2268:118:5",
										"text": " @dev Derive the location of the first element in an array from the slot where the length is stored."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveArray",
									"nameLocation": "2400:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:14:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2457:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2449:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:16:5"
									},
									"scope": 915,
									"src": "2391:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2770:179:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2805:138:5",
													"nodeType": "YulBlock",
													"src": "2805:138:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2826:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2826:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"name": "key",
																				"nativeSrc": "2836:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2845:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2845:2:5",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2853:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2853:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2849:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2849:3:5"
																						},
																						"nativeSrc": "2849:6:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2849:6:5"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2841:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2841:3:5"
																				},
																				"nativeSrc": "2841:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2841:15:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2832:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:5"
																		},
																		"nativeSrc": "2832:25:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:25:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2819:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:5"
																},
																"nativeSrc": "2819:39:5",
																"nodeType": "YulFunctionCall",
																"src": "2819:39:5"
															},
															"nativeSrc": "2819:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "2819:39:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2878:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2878:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "2884:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2884:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2871:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:5"
																},
																"nativeSrc": "2871:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2871:18:5"
															},
															"nativeSrc": "2871:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "2871:18:5"
														},
														{
															"nativeSrc": "2902:31:5",
															"nodeType": "YulAssignment",
															"src": "2902:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2922:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2922:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2928:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2912:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2912:9:5"
																},
																"nativeSrc": "2912:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2912:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2902:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "2836:3:5",
														"valueSize": 1
													},
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": false,
														"src": "2902:6:5",
														"valueSize": 1
													},
													{
														"declaration": 833,
														"isOffset": false,
														"isSlot": false,
														"src": "2884:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 840,
												"nodeType": "InlineAssembly",
												"src": "2780:163:5"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2598:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "2690:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2712:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2704:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2726:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2718:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:27:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2762:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2754:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:16:5"
									},
									"scope": 915,
									"src": "2681:268:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "3124:173:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3159:132:5",
													"nodeType": "YulBlock",
													"src": "3159:132:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3180:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3180:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "key",
																						"nativeSrc": "3200:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3200:3:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3193:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3193:6:5"
																				},
																				"nativeSrc": "3193:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3193:11:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3186:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3186:6:5"
																		},
																		"nativeSrc": "3186:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3186:19:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:5"
																},
																"nativeSrc": "3173:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3173:33:5"
															},
															"nativeSrc": "3173:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3173:33:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3226:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3226:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3232:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3232:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3219:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:5"
																},
																"nativeSrc": "3219:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3219:18:5"
															},
															"nativeSrc": "3219:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "3219:18:5"
														},
														{
															"nativeSrc": "3250:31:5",
															"nodeType": "YulAssignment",
															"src": "3250:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3270:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3270:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3276:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3260:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3260:9:5"
																},
																"nativeSrc": "3260:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3260:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 847,
														"isOffset": false,
														"isSlot": false,
														"src": "3200:3:5",
														"valueSize": 1
													},
													{
														"declaration": 850,
														"isOffset": false,
														"isSlot": false,
														"src": "3250:6:5",
														"valueSize": 1
													},
													{
														"declaration": 845,
														"isOffset": false,
														"isSlot": false,
														"src": "3232:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 852,
												"nodeType": "InlineAssembly",
												"src": "3134:157:5"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "2955:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3047:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3069:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3061:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3080:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3075:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:24:5"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3116:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3108:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:16:5"
									},
									"scope": 915,
									"src": "3038:259:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "3475:157:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3510:116:5",
													"nodeType": "YulBlock",
													"src": "3510:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3531:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3531:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "3537:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3537:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3524:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:5"
																},
																"nativeSrc": "3524:17:5",
																"nodeType": "YulFunctionCall",
																"src": "3524:17:5"
															},
															"nativeSrc": "3524:17:5",
															"nodeType": "YulExpressionStatement",
															"src": "3524:17:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3561:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3561:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3567:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3567:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3554:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:5"
																},
																"nativeSrc": "3554:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3554:18:5"
															},
															"nativeSrc": "3554:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "3554:18:5"
														},
														{
															"nativeSrc": "3585:31:5",
															"nodeType": "YulAssignment",
															"src": "3585:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3605:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3605:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3611:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3611:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3595:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3595:9:5"
																},
																"nativeSrc": "3595:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3595:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3585:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 859,
														"isOffset": false,
														"isSlot": false,
														"src": "3537:3:5",
														"valueSize": 1
													},
													{
														"declaration": 862,
														"isOffset": false,
														"isSlot": false,
														"src": "3585:6:5",
														"valueSize": 1
													},
													{
														"declaration": 857,
														"isOffset": false,
														"isSlot": false,
														"src": "3567:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 864,
												"nodeType": "InlineAssembly",
												"src": "3485:141:5"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "3303:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3395:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3417:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3409:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3431:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3423:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3408:27:5"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3467:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3459:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3458:16:5"
									},
									"scope": 915,
									"src": "3386:246:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3810:157:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3845:116:5",
													"nodeType": "YulBlock",
													"src": "3845:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3866:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3866:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "3872:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3872:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:5"
																},
																"nativeSrc": "3859:17:5",
																"nodeType": "YulFunctionCall",
																"src": "3859:17:5"
															},
															"nativeSrc": "3859:17:5",
															"nodeType": "YulExpressionStatement",
															"src": "3859:17:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3896:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3896:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3902:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3889:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:5"
																},
																"nativeSrc": "3889:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3889:18:5"
															},
															"nativeSrc": "3889:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "3889:18:5"
														},
														{
															"nativeSrc": "3920:31:5",
															"nodeType": "YulAssignment",
															"src": "3920:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3940:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3940:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3946:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3930:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3930:9:5"
																},
																"nativeSrc": "3930:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3930:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3920:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": false,
														"src": "3872:3:5",
														"valueSize": 1
													},
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "3920:6:5",
														"valueSize": 1
													},
													{
														"declaration": 869,
														"isOffset": false,
														"isSlot": false,
														"src": "3902:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 876,
												"nodeType": "InlineAssembly",
												"src": "3820:141:5"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3638:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3730:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3744:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3766:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3758:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:27:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3802:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3794:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 873,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:16:5"
									},
									"scope": 915,
									"src": "3721:246:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "4144:157:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4179:116:5",
													"nodeType": "YulBlock",
													"src": "4179:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4200:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4200:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "4206:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4206:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4193:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:5"
																},
																"nativeSrc": "4193:17:5",
																"nodeType": "YulFunctionCall",
																"src": "4193:17:5"
															},
															"nativeSrc": "4193:17:5",
															"nodeType": "YulExpressionStatement",
															"src": "4193:17:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4230:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4230:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "4236:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4236:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:5"
																},
																"nativeSrc": "4223:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4223:18:5"
															},
															"nativeSrc": "4223:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "4223:18:5"
														},
														{
															"nativeSrc": "4254:31:5",
															"nodeType": "YulAssignment",
															"src": "4254:31:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4274:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4274:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4280:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4280:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4264:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4264:9:5"
																},
																"nativeSrc": "4264:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4264:21:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 883,
														"isOffset": false,
														"isSlot": false,
														"src": "4206:3:5",
														"valueSize": 1
													},
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": false,
														"src": "4254:6:5",
														"valueSize": 1
													},
													{
														"declaration": 881,
														"isOffset": false,
														"isSlot": false,
														"src": "4236:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 888,
												"nodeType": "InlineAssembly",
												"src": "4154:141:5"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3973:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4065:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4087:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "4079:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 880,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4100:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "4093:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:26:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4136:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "4128:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:16:5"
									},
									"scope": 915,
									"src": "4056:245:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "4485:326:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4520:285:5",
													"nodeType": "YulBlock",
													"src": "4520:285:5",
													"statements": [
														{
															"nativeSrc": "4534:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4534:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "4554:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4554:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4548:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4548:5:5"
																},
																"nativeSrc": "4548:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4548:10:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4538:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4538:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4571:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4571:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "4588:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4588:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4593:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4584:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:5"
																},
																"nativeSrc": "4584:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4584:14:5"
															},
															"variables": [
																{
																	"name": "begin",
																	"nativeSrc": "4575:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4575:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4611:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4611:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "4626:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4626:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4633:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4633:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4622:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:5"
																},
																"nativeSrc": "4622:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4622:18:5"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "4615:3:5",
																	"nodeType": "YulTypedName",
																	"src": "4615:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4653:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4672:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4672:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4666:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4666:5:5"
																},
																"nativeSrc": "4666:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4666:10:5"
															},
															"variables": [
																{
																	"name": "cache",
																	"nativeSrc": "4657:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4657:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4696:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4696:3:5"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "4701:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4701:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4689:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4689:6:5"
																},
																"nativeSrc": "4689:17:5",
																"nodeType": "YulFunctionCall",
																"src": "4689:17:5"
															},
															"nativeSrc": "4689:17:5",
															"nodeType": "YulExpressionStatement",
															"src": "4689:17:5"
														},
														{
															"nativeSrc": "4719:45:5",
															"nodeType": "YulAssignment",
															"src": "4719:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "4739:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4739:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4750:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4750:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4758:4:5",
																				"nodeType": "YulLiteral",
																				"src": "4758:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:5"
																		},
																		"nativeSrc": "4746:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:17:5"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4729:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4729:9:5"
																},
																"nativeSrc": "4729:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4729:35:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4719:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4719:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4784:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:5"
																	},
																	{
																		"name": "cache",
																		"nativeSrc": "4789:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4789:5:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4777:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:5"
																},
																"nativeSrc": "4777:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4777:18:5"
															},
															"nativeSrc": "4777:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "4777:18:5"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "4554:3:5",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "4588:3:5",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "4719:6:5",
														"valueSize": 1
													},
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": false,
														"src": "4701:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 900,
												"nodeType": "InlineAssembly",
												"src": "4495:310:5"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "4307:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4399:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4413:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 892,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4441:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4427:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4427:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:33:5"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4477:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4469:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:16:5"
									},
									"scope": 915,
									"src": "4390:421:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4994:326:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5029:285:5",
													"nodeType": "YulBlock",
													"src": "5029:285:5",
													"statements": [
														{
															"nativeSrc": "5043:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5043:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "5063:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5063:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5057:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5057:5:5"
																},
																"nativeSrc": "5057:10:5",
																"nodeType": "YulFunctionCall",
																"src": "5057:10:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5047:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5047:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5080:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5080:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "5097:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5097:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5102:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5102:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5093:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:5"
																},
																"nativeSrc": "5093:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5093:14:5"
															},
															"variables": [
																{
																	"name": "begin",
																	"nativeSrc": "5084:5:5",
																	"nodeType": "YulTypedName",
																	"src": "5084:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5120:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5120:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "5135:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5135:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5142:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:5"
																},
																"nativeSrc": "5131:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5131:18:5"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "5124:3:5",
																	"nodeType": "YulTypedName",
																	"src": "5124:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5162:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5162:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5181:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5181:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5175:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5175:5:5"
																},
																"nativeSrc": "5175:10:5",
																"nodeType": "YulFunctionCall",
																"src": "5175:10:5"
															},
															"variables": [
																{
																	"name": "cache",
																	"nativeSrc": "5166:5:5",
																	"nodeType": "YulTypedName",
																	"src": "5166:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5205:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5205:3:5"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5198:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:5"
																},
																"nativeSrc": "5198:17:5",
																"nodeType": "YulFunctionCall",
																"src": "5198:17:5"
															},
															"nativeSrc": "5198:17:5",
															"nodeType": "YulExpressionStatement",
															"src": "5198:17:5"
														},
														{
															"nativeSrc": "5228:45:5",
															"nodeType": "YulAssignment",
															"src": "5228:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "5248:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5248:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5259:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5259:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5267:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5267:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5255:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5255:3:5"
																		},
																		"nativeSrc": "5255:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5255:17:5"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5238:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "5238:9:5"
																},
																"nativeSrc": "5238:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5238:35:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5228:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5293:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5293:3:5"
																	},
																	{
																		"name": "cache",
																		"nativeSrc": "5298:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5298:5:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5286:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:5"
																},
																"nativeSrc": "5286:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5286:18:5"
															},
															"nativeSrc": "5286:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "5286:18:5"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 907,
														"isOffset": false,
														"isSlot": false,
														"src": "5063:3:5",
														"valueSize": 1
													},
													{
														"declaration": 907,
														"isOffset": false,
														"isSlot": false,
														"src": "5097:3:5",
														"valueSize": 1
													},
													{
														"declaration": 910,
														"isOffset": false,
														"isSlot": false,
														"src": "5228:6:5",
														"valueSize": 1
													},
													{
														"declaration": 905,
														"isOffset": false,
														"isSlot": false,
														"src": "5210:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 912,
												"nodeType": "InlineAssembly",
												"src": "5004:310:5"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "4817:78:5",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4909:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4931:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4923:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 904,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4950:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4937:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4937:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4922:32:5"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4986:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4978:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 909,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4977:16:5"
									},
									"scope": 915,
									"src": "4900:420:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 916,
							"src": "1599:3723:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "199:5124:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1039
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:6",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 921,
									"members": [
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 921,
											"src": "1462:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 919,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1433:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 924,
									"members": [
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 924,
											"src": "1517:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 922,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1488:46:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 927,
									"members": [
										{
											"constant": false,
											"id": 926,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "1569:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 925,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1540:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 930,
									"members": [
										{
											"constant": false,
											"id": 929,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 930,
											"src": "1624:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1595:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 933,
									"members": [
										{
											"constant": false,
											"id": 932,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 933,
											"src": "1678:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 931,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1650:47:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 936,
									"members": [
										{
											"constant": false,
											"id": 935,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 936,
											"src": "1731:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 934,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1703:47:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 939,
									"members": [
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 939,
											"src": "1783:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 937,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:6",
									"nodeType": "StructDefinition",
									"scope": 1039,
									"src": "1756:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "1983:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:6",
													"nodeType": "YulBlock",
													"src": "2018:38:6",
													"statements": [
														{
															"nativeSrc": "2032:14:6",
															"nodeType": "YulAssignment",
															"src": "2032:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:6",
																"nodeType": "YulIdentifier",
																"src": "2042:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 946,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 948,
												"nodeType": "InlineAssembly",
												"src": "1993:63:6"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:6",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1923:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 941,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1960:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$921_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "1960:11:6"
													},
													"referencedDeclaration": 921,
													"src": "1960:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$921_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:6"
									},
									"scope": 1039,
									"src": "1899:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "2243:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:6",
													"nodeType": "YulBlock",
													"src": "2278:38:6",
													"statements": [
														{
															"nativeSrc": "2292:14:6",
															"nodeType": "YulAssignment",
															"src": "2292:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:6",
																"nodeType": "YulIdentifier",
																"src": "2302:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 953,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 959,
												"nodeType": "InlineAssembly",
												"src": "2253:63:6"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:6",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2183:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2220:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$924_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 955,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 924,
														"src": "2220:11:6"
													},
													"referencedDeclaration": 924,
													"src": "2220:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$924_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:6"
									},
									"scope": 1039,
									"src": "2159:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "2503:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:6",
													"nodeType": "YulBlock",
													"src": "2538:38:6",
													"statements": [
														{
															"nativeSrc": "2552:14:6",
															"nodeType": "YulAssignment",
															"src": "2552:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:6",
																"nodeType": "YulIdentifier",
																"src": "2562:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 968,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 970,
												"nodeType": "InlineAssembly",
												"src": "2513:63:6"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:6",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2443:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 963,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2480:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$927_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 966,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "2480:11:6"
													},
													"referencedDeclaration": 927,
													"src": "2480:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$927_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:6"
									},
									"scope": 1039,
									"src": "2419:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "2763:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:6",
													"nodeType": "YulBlock",
													"src": "2798:38:6",
													"statements": [
														{
															"nativeSrc": "2812:14:6",
															"nodeType": "YulAssignment",
															"src": "2812:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:6",
																"nodeType": "YulIdentifier",
																"src": "2822:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 981,
												"nodeType": "InlineAssembly",
												"src": "2773:63:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:6",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2703:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:6"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2740:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$930_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 977,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 930,
														"src": "2740:11:6"
													},
													"referencedDeclaration": 930,
													"src": "2740:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$930_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:6"
									},
									"scope": 1039,
									"src": "2679:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "3020:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:6",
													"nodeType": "YulBlock",
													"src": "3055:38:6",
													"statements": [
														{
															"nativeSrc": "3069:14:6",
															"nodeType": "YulAssignment",
															"src": "3069:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:6",
																"nodeType": "YulIdentifier",
																"src": "3079:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 986,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 992,
												"nodeType": "InlineAssembly",
												"src": "3030:63:6"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:6",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2961:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 985,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2998:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$933_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 988,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "2998:10:6"
													},
													"referencedDeclaration": 933,
													"src": "2998:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$933_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:6"
									},
									"scope": 1039,
									"src": "2938:161:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "3277:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:6",
													"nodeType": "YulBlock",
													"src": "3312:38:6",
													"statements": [
														{
															"nativeSrc": "3326:14:6",
															"nodeType": "YulAssignment",
															"src": "3326:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:6",
																"nodeType": "YulIdentifier",
																"src": "3336:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1001,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 997,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1003,
												"nodeType": "InlineAssembly",
												"src": "3287:63:6"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:6",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3218:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3255:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$936_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 936,
														"src": "3255:10:6"
													},
													"referencedDeclaration": 936,
													"src": "3255:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$936_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:6"
									},
									"scope": 1039,
									"src": "3195:161:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "3558:85:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:6",
													"nodeType": "YulBlock",
													"src": "3593:44:6",
													"statements": [
														{
															"nativeSrc": "3607:20:6",
															"nodeType": "YulAssignment",
															"src": "3607:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:6",
																"nodeType": "YulIdentifier",
																"src": "3617:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1012,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1014,
												"nodeType": "InlineAssembly",
												"src": "3568:69:6"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:6",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3491:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3536:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$936_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 936,
														"src": "3536:10:6"
													},
													"referencedDeclaration": 936,
													"src": "3536:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$936_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:6"
									},
									"scope": 1039,
									"src": "3468:175:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "3818:79:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:6",
													"nodeType": "YulBlock",
													"src": "3853:38:6",
													"statements": [
														{
															"nativeSrc": "3867:14:6",
															"nodeType": "YulAssignment",
															"src": "3867:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:6",
																"nodeType": "YulIdentifier",
																"src": "3877:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1023,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1019,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1025,
												"nodeType": "InlineAssembly",
												"src": "3828:63:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:6",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "3760:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "3797:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$939_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1021,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 939,
														"src": "3797:9:6"
													},
													"referencedDeclaration": 939,
													"src": "3797:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$939_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:6"
									},
									"scope": 1039,
									"src": "3738:159:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "4094:85:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:6",
													"nodeType": "YulBlock",
													"src": "4129:44:6",
													"statements": [
														{
															"nativeSrc": "4143:20:6",
															"nodeType": "YulAssignment",
															"src": "4143:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:6",
																"nodeType": "YulIdentifier",
																"src": "4153:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1034,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1030,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1036,
												"nodeType": "InlineAssembly",
												"src": "4104:69:6"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:6",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4029:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4073:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$939_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1032,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 939,
														"src": "4073:9:6"
													},
													"referencedDeclaration": 939,
													"src": "4073:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$939_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:6"
									},
									"scope": 1039,
									"src": "4007:172:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1040,
							"src": "1407:2774:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:6"
				},
				"id": 6
			},
			"contracts/token/ERC20/CustomeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/CustomeERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"GrantPrivileges": [
							1422
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyERC20": [
							1085
						],
						"SlotDerivation": [
							915
						],
						"StorageSlot": [
							1039
						]
					},
					"id": 1086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1086,
							"sourceUnit": 652,
							"src": "57:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/GrantPrivileges.sol",
							"file": "contracts/utils/GrantPrivileges.sol",
							"id": 1043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1086,
							"sourceUnit": 1423,
							"src": "113:45:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1044,
										"name": "ERC20",
										"nameLocations": [
											"179:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "179:5:7"
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "179:5:7"
								},
								{
									"baseName": {
										"id": 1046,
										"name": "GrantPrivileges",
										"nameLocations": [
											"185:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1422,
										"src": "185:15:7"
									},
									"id": 1047,
									"nodeType": "InheritanceSpecifier",
									"src": "185:15:7"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1085,
							"linearizedBaseContracts": [
								1085,
								1422,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MyERC20",
							"nameLocation": "168:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "383:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "399:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "403:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "399:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030303030303030",
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "411:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"value": "10000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "423:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "427:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "423:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "411:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000"
															}
														],
														"id": 1058,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "393:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "393:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "393:37:7"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1054,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1049,
													"src": "368:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1055,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "375:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1056,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1053,
												"name": "ERC20",
												"nameLocations": [
													"362:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "362:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "362:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "318:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "353:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "339:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1050,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:44:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:7"
									},
									"scope": 1085,
									"src": "306:131:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "507:38:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "523:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "532:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "517:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "517:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "517:21:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1075,
												"name": "onlyAdmin",
												"nameLocations": [
													"497:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1208,
												"src": "497:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "497:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "451:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "464:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "456:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:32:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:7"
									},
									"scope": 1085,
									"src": "442:103:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1086,
							"src": "159:389:7",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								1099,
								1101,
								1105,
								1109
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:516:7"
				},
				"id": 7
			},
			"contracts/utils/GrantPrivileges.sol": {
				"ast": {
					"absolutePath": "contracts/utils/GrantPrivileges.sol",
					"exportedSymbols": {
						"GrantPrivileges": [
							1422
						],
						"SlotDerivation": [
							915
						],
						"StorageSlot": [
							1039
						]
					},
					"id": 1423,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
							"file": "@openzeppelin/contracts/utils/SlotDerivation.sol",
							"id": 1088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1423,
							"sourceUnit": 916,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1423,
							"sourceUnit": 1040,
							"src": "117:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "GrantPrivileges",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1090,
								"nodeType": "StructuredDocumentation",
								"src": "174:848:8",
								"text": " @title GrantPrivileges\n @dev Abstract contract to manage time-based access control for specific functions.\n Admin can grant temporary access to users, enabling functionalities like subscriptions\n or time-limited permissions.\n ## Usage Example:\n contract EatFoodContract is GrantPrivileges {\n     function eatFood(string calldata str) external view onlyOwner returns (bytes32) {\n         return keccak256(abi.encode(str));\n     }\n }\n 1. Inherit from `GrantPrivileges` in your contract.\n 2. Use `onlyAdmin` for admin-restricted functions and `onlyOwner` for time-limited access control.\n 3. Deploy your contract, and the deploying address will be the initial admin.\n 4. Admin can add authorized users using `addOwner()`.\n 5. Authorized users can access `onlyOwner` functions within the granted time frame."
							},
							"fullyImplemented": true,
							"id": 1422,
							"linearizedBaseContracts": [
								1422
							],
							"name": "GrantPrivileges",
							"nameLocation": "1041:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1092,
									"libraryName": {
										"id": 1091,
										"name": "SlotDerivation",
										"nameLocations": [
											"1069:14:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 915,
										"src": "1069:14:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1063:27:8"
								},
								{
									"global": false,
									"id": 1094,
									"libraryName": {
										"id": 1093,
										"name": "StorageSlot",
										"nameLocations": [
											"1101:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1039,
										"src": "1101:11:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1095:24:8"
								},
								{
									"constant": true,
									"functionSelector": "95cfbf6d",
									"id": 1097,
									"mutability": "constant",
									"name": "GRANTPRIVILEGES_NAMESPACE",
									"nameLocation": "1148:25:8",
									"nodeType": "VariableDeclaration",
									"scope": 1422,
									"src": "1125:78:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1095,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1125:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4772616e7450726976696c656765732e4e616d657370616365",
										"id": 1096,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1176:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a27e043aa7ec08bac1fa875cfa89aa18fbb791562e3538516b32afcca9120069",
											"typeString": "literal_string \"GrantPrivileges.Namespace\""
										},
										"value": "GrantPrivileges.Namespace"
									},
									"visibility": "public"
								},
								{
									"errorSelector": "5bb7a723",
									"id": 1099,
									"name": "AddressEmpty",
									"nameLocation": "1277:12:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:2:8"
									},
									"src": "1271:21:8"
								},
								{
									"errorSelector": "e16a8aa4",
									"id": 1101,
									"name": "TimeLimitZero",
									"nameLocation": "1303:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:8"
									},
									"src": "1297:22:8"
								},
								{
									"errorSelector": "0a2a9e3e",
									"id": 1105,
									"name": "OnlyAdmin",
									"nameLocation": "1330:9:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "1347:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1340:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1340:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:13:8"
									},
									"src": "1324:29:8"
								},
								{
									"errorSelector": "5e9b54e1",
									"id": 1109,
									"name": "OnlyLegalOwner",
									"nameLocation": "1364:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "1386:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1379:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1379:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:13:8"
									},
									"src": "1358:34:8"
								},
								{
									"constant": true,
									"id": 1112,
									"mutability": "constant",
									"name": "ADMIN_ADDRESS",
									"nameLocation": "1459:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1422,
									"src": "1435:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1110,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1435:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4772616e7450726976696c656765732e61646d696e41646472657373",
										"id": 1111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1475:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a7e1e45f69e793a00c2ca1ca288773edf82be32ffcb2b7502d99d18b50898733",
											"typeString": "literal_string \"GrantPrivileges.adminAddress\""
										},
										"value": "GrantPrivileges.adminAddress"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "1658:74:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1118,
																		"name": "ADMIN_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "1675:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1689:11:8",
																	"memberName": "erc7201Slot",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 798,
																	"src": "1675:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1675:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1703:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "1675:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$921_storage_ptr_$attached_to$_t_bytes32_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1675:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$921_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1720:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 920,
													"src": "1675:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1124,
												"nodeType": "Return",
												"src": "1668:57:8"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1512:82:8",
										"text": " @dev Retrieves the current admin address from the storage slot."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdminAddress",
									"nameLocation": "1608:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:2:8"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1649:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:9:8"
									},
									"scope": 1422,
									"src": "1599:133:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1912:81:8",
										"statements": [
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1132,
																			"name": "ADMIN_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "1922:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1936:11:8",
																		"memberName": "erc7201Slot",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 798,
																		"src": "1922:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
																			"typeString": "function (string memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1922:27:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1950:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 950,
																"src": "1922:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$921_storage_ptr_$attached_to$_t_bytes32_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:44:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$921_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1967:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "1922:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1139,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1975:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1922:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "1922:64:8"
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "1738:114:8",
										"text": " @dev Sets a new admin address in the storage slot.\n @param _newAddress New admin address."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdminAddress",
									"nameLocation": "1866:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_newAddress",
												"nameLocation": "1891:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1883:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:21:8"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:8"
									},
									"scope": 1422,
									"src": "1857:136:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "GrantPrivileges.OwnerInfo",
									"id": 1148,
									"members": [
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "2089:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1148,
											"src": "2084:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1144,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2084:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "timeLimit",
											"nameLocation": "2154:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1148,
											"src": "2149:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2149:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnerInfo",
									"nameLocation": "2064:9:8",
									"nodeType": "StructDefinition",
									"scope": 1422,
									"src": "2057:156:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2452:79:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2487:38:8",
													"nodeType": "YulBlock",
													"src": "2487:38:8",
													"statements": [
														{
															"nativeSrc": "2501:14:8",
															"nodeType": "YulAssignment",
															"src": "2501:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2511:4:8",
																"nodeType": "YulIdentifier",
																"src": "2511:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": true,
														"src": "2501:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1151,
														"isOffset": false,
														"isSlot": false,
														"src": "2511:4:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1157,
												"nodeType": "InlineAssembly",
												"src": "2462:63:8"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "2219:144:8",
										"text": " @dev Retrieves the storage slot for an owner's authorization info.\n @param slot The storage slot derived for the owner."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnerInfoSlot",
									"nameLocation": "2377:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2403:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2395:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:14:8"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2449:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2431:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
													"typeString": "struct GrantPrivileges.OwnerInfo"
												},
												"typeName": {
													"id": 1154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1153,
														"name": "OwnerInfo",
														"nameLocations": [
															"2431:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1148,
														"src": "2431:9:8"
													},
													"referencedDeclaration": 1148,
													"src": "2431:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:21:8"
									},
									"scope": 1422,
									"src": "2368:163:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2781:153:8",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "ownerInfoSlot",
														"nameLocation": "2799:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1181,
														"src": "2791:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1168,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2791:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [
														{
															"id": 1174,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2869:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1170,
																	"name": "GRANTPRIVILEGES_NAMESPACE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2815:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2841:11:8",
																"memberName": "erc7201Slot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 798,
																"src": "2815:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2815:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2855:13:8",
														"memberName": "deriveMapping",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "2815:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,address) pure returns (bytes32)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2791:87:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "ownerInfoSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "2913:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1177,
														"name": "_getOwnerInfoSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2895:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_OwnerInfo_$1148_storage_ptr_$",
															"typeString": "function (bytes32) pure returns (struct GrantPrivileges.OwnerInfo storage pointer)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2895:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1180,
												"nodeType": "Return",
												"src": "2888:39:8"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2537:146:8",
										"text": " @dev Returns the OwnerInfo struct for a given address.\n @param _address Address of the owner to fetch authorization info."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnerInfoByAddress",
									"nameLocation": "2697:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2728:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2720:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:18:8"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2778:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2760:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
													"typeString": "struct GrantPrivileges.OwnerInfo"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "OwnerInfo",
														"nameLocations": [
															"2760:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1148,
														"src": "2760:9:8"
													},
													"referencedDeclaration": 1148,
													"src": "2760:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:21:8"
									},
									"scope": 1422,
									"src": "2688:246:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "3043:45:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1187,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3070:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3074:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3070:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1186,
														"name": "_setAdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "3053:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3053:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3053:28:8"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "2940:84:8",
										"text": " @dev Constructor sets the deploying address as the initial admin."
									},
									"id": 1192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3040:2:8"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3043:0:8"
									},
									"scope": 1422,
									"src": "3029:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "3225:139:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3239:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3243:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3239:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1197,
															"name": "_getAdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "3253:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3253:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3239:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "IfStatement",
												"src": "3235:112:8",
												"trueBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "3273:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "6f6e6c792061646d696e20616464726573732063616e20616363657373",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc",
																			"typeString": "literal_string \"only admin address can access\""
																		},
																		"value": "only admin address can access"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_bd02ce678661f9024babbe2ba5d43008d5e7190ae55dc5a8fa18bbb20964b7cc",
																			"typeString": "literal_string \"only admin address can access\""
																		}
																	],
																	"id": 1200,
																	"name": "OnlyAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "3294:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3294:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1203,
															"nodeType": "RevertStatement",
															"src": "3287:49:8"
														}
													]
												}
											},
											{
												"id": 1206,
												"nodeType": "PlaceholderStatement",
												"src": "3356:1:8"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3131:68:8",
										"text": " @dev Restricts function access to the admin only."
									},
									"id": 1208,
									"name": "onlyAdmin",
									"nameLocation": "3213:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:8"
									},
									"src": "3204:160:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "3485:178:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3499:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3503:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3499:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1213,
																"name": "_getAdminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "3513:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3499:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3535:24:8",
														"subExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1217,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3548:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3552:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3548:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1216,
																"name": "_legalOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "3536:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3536:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3499:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "3495:151:8",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "3561:85:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "6f6e6c79206c6567616c206f776e657220616464726573732063616e20616363657373",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3597:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361",
																			"typeString": "literal_string \"only legal owner address can access\""
																		},
																		"value": "only legal owner address can access"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_409a667a8c41b2605ec2c592f6df3c3b6e5ddf8a5fe7dbdda3f190868cc5c361",
																			"typeString": "literal_string \"only legal owner address can access\""
																		}
																	],
																	"id": 1222,
																	"name": "OnlyLegalOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "3582:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3582:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1225,
															"nodeType": "RevertStatement",
															"src": "3575:60:8"
														}
													]
												}
											},
											{
												"id": 1228,
												"nodeType": "PlaceholderStatement",
												"src": "3655:1:8"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "3370:89:8",
										"text": " @dev Restricts function access to the admin or valid authorized users."
									},
									"id": 1230,
									"name": "onlyOwner",
									"nameLocation": "3473:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3482:2:8"
									},
									"src": "3464:199:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "3874:440:8",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "ownerInfo",
														"nameLocation": "3902:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "3884:27:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo"
														},
														"typeName": {
															"id": 1239,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1238,
																"name": "OwnerInfo",
																"nameLocations": [
																	"3884:9:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1148,
																"src": "3884:9:8"
															},
															"referencedDeclaration": 1148,
															"src": "3884:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
																"typeString": "struct GrantPrivileges.OwnerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "senderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3937:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1241,
														"name": "_getOwnerInfoByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3914:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_struct$_OwnerInfo_$1148_storage_ptr_$",
															"typeString": "function (address) pure returns (struct GrantPrivileges.OwnerInfo storage pointer)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3884:67:8"
											},
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3966:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "3961:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1245,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3961:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"expression": {
														"id": 1247,
														"name": "ownerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "3978:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3988:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1145,
													"src": "3978:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:36:8"
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "timeLimit",
														"nameLocation": "4012:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "4007:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4007:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"expression": {
														"id": 1252,
														"name": "ownerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "4024:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4034:9:8",
													"memberName": "timeLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "4024:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1255,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "4058:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4071:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4058:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1258,
															"name": "timeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4076:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4089:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4076:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4058:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "IfStatement",
												"src": "4054:93:8",
												"trueBody": {
													"id": 1264,
													"nodeType": "Block",
													"src": "4092:55:8",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4113:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1237,
															"id": 1263,
															"nodeType": "Return",
															"src": "4106:12:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1266,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4207:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4213:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4207:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1268,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "4226:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1269,
																	"name": "timeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "4238:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4226:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1271,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4225:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4207:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "4203:84:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "4250:37:8",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4271:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1237,
															"id": 1274,
															"nodeType": "Return",
															"src": "4264:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4303:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1237,
												"id": 1278,
												"nodeType": "Return",
												"src": "4296:11:8"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "3669:128:8",
										"text": " @dev Checks if an address is within its authorized period.\n @param senderAddress The address to verify."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_legalOwner",
									"nameLocation": "3811:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "senderAddress",
												"nameLocation": "3831:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3823:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:23:8"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3868:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:6:8"
									},
									"scope": 1422,
									"src": "3802:512:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "4570:328:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "4584:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4596:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1291,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4596:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4596:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4584:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "4580:74:8",
												"trueBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "4608:46:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1296,
																	"name": "AddressEmpty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "4629:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4629:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1298,
															"nodeType": "RevertStatement",
															"src": "4622:21:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "_timeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "4667:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4681:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4667:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "4663:68:8",
												"trueBody": {
													"id": 1307,
													"nodeType": "Block",
													"src": "4684:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1304,
																	"name": "TimeLimitZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "4705:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4705:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1306,
															"nodeType": "RevertStatement",
															"src": "4698:22:8"
														}
													]
												}
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "ownerInfo",
														"nameLocation": "4758:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "4740:27:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo"
														},
														"typeName": {
															"id": 1310,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1309,
																"name": "OwnerInfo",
																"nameLocations": [
																	"4740:9:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1148,
																"src": "4740:9:8"
															},
															"referencedDeclaration": 1148,
															"src": "4740:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
																"typeString": "struct GrantPrivileges.OwnerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"initialValue": {
													"arguments": [
														{
															"id": 1313,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4793:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1312,
														"name": "_getOwnerInfoByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "4770:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_struct$_OwnerInfo_$1148_storage_ptr_$",
															"typeString": "function (address) pure returns (struct GrantPrivileges.OwnerInfo storage pointer)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4740:62:8"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1316,
															"name": "ownerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4812:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
																"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1145,
														"src": "4812:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1319,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4834:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4840:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4834:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4812:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "4812:37:8"
											},
											{
												"expression": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1323,
															"name": "ownerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4859:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
																"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4869:9:8",
														"memberName": "timeLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "4859:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1326,
														"name": "_timeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "4881:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4859:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "4859:32:8"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "4320:173:8",
										"text": " @dev Adds a new authorized user with a time limit.\n @param newOwner Address of the new user.\n @param _timeLimit Duration of access in seconds."
									},
									"functionSelector": "3cc38f5c",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyAdmin",
												"nameLocations": [
													"4560:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1208,
												"src": "4560:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4560:9:8"
										}
									],
									"name": "addOwner",
									"nameLocation": "4507:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4524:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4516:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_timeLimit",
												"nameLocation": "4539:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4534:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4534:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:35:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4570:0:8"
									},
									"scope": 1422,
									"src": "4498:400:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "5138:448:8",
										"statements": [
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "ownerInfo",
														"nameLocation": "5166:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "5148:27:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo"
														},
														"typeName": {
															"id": 1339,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1338,
																"name": "OwnerInfo",
																"nameLocations": [
																	"5148:9:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1148,
																"src": "5148:9:8"
															},
															"referencedDeclaration": 1148,
															"src": "5148:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
																"typeString": "struct GrantPrivileges.OwnerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5201:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5205:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5201:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1341,
														"name": "_getOwnerInfoByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5178:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_struct$_OwnerInfo_$1148_storage_ptr_$",
															"typeString": "function (address) pure returns (struct GrantPrivileges.OwnerInfo storage pointer)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
														"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5148:64:8"
											},
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "5227:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "5222:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1346,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5222:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"expression": {
														"id": 1348,
														"name": "ownerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5239:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5249:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1145,
													"src": "5239:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5222:36:8"
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "timeLimit",
														"nameLocation": "5273:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "5268:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1351,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5268:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"expression": {
														"id": 1353,
														"name": "ownerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5285:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnerInfo_$1148_storage_ptr",
															"typeString": "struct GrantPrivileges.OwnerInfo storage pointer"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5295:9:8",
													"memberName": "timeLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5285:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5268:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1356,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "5319:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5332:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5319:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1359,
															"name": "timeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5337:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5350:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5337:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5319:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1366,
												"nodeType": "IfStatement",
												"src": "5315:91:8",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "5353:53:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5374:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1337,
															"id": 1364,
															"nodeType": "Return",
															"src": "5367:8:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1367,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "5421:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1368,
																	"name": "timeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5433:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5421:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1370,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5420:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1371,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5446:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5452:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5446:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5420:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1377,
												"nodeType": "IfStatement",
												"src": "5416:105:8",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "5463:58:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5484:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1337,
															"id": 1375,
															"nodeType": "Return",
															"src": "5477:8:8"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1378,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "5539:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1379,
																	"name": "timeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5551:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5539:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1381,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5538:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1382,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5564:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5570:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5564:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5538:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1337,
												"id": 1385,
												"nodeType": "Return",
												"src": "5531:48:8"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "4904:162:8",
										"text": " @dev Allows authorized users to check their remaining access time.\n @return Remaining time in seconds, or 0 if authorization has expired."
									},
									"functionSelector": "efb98bcf",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1334,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1333,
												"name": "onlyOwner",
												"nameLocations": [
													"5113:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1230,
												"src": "5113:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5113:9:8"
										}
									],
									"name": "getRemainingTime",
									"nameLocation": "5080:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5096:2:8"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "5132:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5132:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5131:6:8"
									},
									"scope": 1422,
									"src": "5071:515:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "5759:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1393,
														"name": "_getAdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5776:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5776:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1395,
												"nodeType": "Return",
												"src": "5769:25:8"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "5592:103:8",
										"text": " @dev Public function to get the current admin address.\n @return Admin address."
									},
									"functionSelector": "b2e6b912",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdminAddress",
									"nameLocation": "5709:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5724:2:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "5750:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:9:8"
									},
									"scope": 1422,
									"src": "5700:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "6014:126:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "6028:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6040:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6040:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6040:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6028:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "6024:74:8",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "6052:46:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1411,
																	"name": "AddressEmpty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "6073:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6073:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1413,
															"nodeType": "RevertStatement",
															"src": "6066:21:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1417,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "6124:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1416,
														"name": "_setAdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "6107:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6107:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "6107:26:8"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "5807:144:8",
										"text": " @dev Allows the current admin to transfer admin privileges to a new address.\n @param newAdmin Address of the new admin."
									},
									"functionSelector": "8f283970",
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1402,
												"name": "onlyAdmin",
												"nameLocations": [
													"6004:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1208,
												"src": "6004:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6004:9:8"
										}
									],
									"name": "changeAdmin",
									"nameLocation": "5965:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5985:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5977:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5976:18:8"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6014:0:8"
									},
									"scope": 1422,
									"src": "5956:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1423,
							"src": "1023:5119:8",
							"usedErrors": [
								1099,
								1101,
								1105,
								1109
							],
							"usedEvents": []
						}
					],
					"src": "32:6110:8"
				},
				"id": 8
			}
		}
	}
}