{
	"id": "63666d2cb0180132ee3b996cf480836f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/utils/AbstractNonReentrantLockTransient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport \"contracts/utils/NonReentrantLockTransient.sol\";\n\n/**\n * @title NonReentrantLockTransient\n * @dev Abstract contract that provides reentrancy protection using transient storage (EIP-1153).\n * \n * This module helps prevent reentrant calls by leveraging transient storage, \n * which automatically resets at the end of a transaction, reducing gas costs.\n * \n * The {nonReentrantLock} modifier applies a default lock to functions, while \n * {nonReentrantcustomizeLock} allows for custom, fine-grained locks using unique seeds.\n * \n * Inheriting from `NonReentrantLockTransient` will make these modifiers available.\n *\n * Example usage:\n * ```solidity\n * contract MyContract is NonReentrantLockTransient {\n *     uint256 private _balance;\n * \n *     // Default reentrancy lock for simple functions\n *     function deposit() external nonReentrantLock {\n *         _balance += 1;\n *     }\n * \n *     // Custom lock for more granular reentrancy protection\n *     function withdraw() external nonReentrantcustomizeLock(\"withdraw.lock\") {\n *         require(_balance > 0, \"Insufficient balance\");\n *         _balance -= 1;\n *     }\n * }\n * ```\n * \n * TIP: Use transient storage for efficient reentrancy protection, especially in complex transactions.\n */\nabstract contract AbstractNonReentrantLockTransient {\n    using NonReentrantLockTransient for *;\n\n    /**\n     * @dev Prevents reentrant calls using a default lock.\n     */\n    modifier nonReentrantLock() {\n        NonReentrantLockTransient.NonReentrantLock memory lock = NonReentrantLockTransient.getLock();\n        lock.lock();\n        _;\n        lock.unlock();\n    }\n\n    /**\n     * @dev Allows custom reentrancy locks by specifying a unique seed.\n     * @param seed The unique identifier for the custom lock.\n     */\n    modifier nonReentrantcustomizeLock(string memory seed) {\n        NonReentrantLockTransient.NonReentrantLock memory lock = seed.getLock();\n        lock.lock();\n        _;\n        lock.unlock();\n    }\n}"
			},
			"contracts/utils/NonReentrantLockTransient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport \"@openzeppelin/contracts/utils/SlotDerivation.sol\";\nimport \"@openzeppelin/contracts/utils/TransientSlot.sol\";\n/**\n * @title NonReentrantLockTransient\n * @dev Library for managing transient reentrancy locks using EIP-1153 transient storage.\n * \n * Provides functions to acquire, release, and customize locks. Locks are automatically \n * reset at the end of transactions, ensuring safe use even in multi-call scenarios.\n * \n * Key Functions:\n * - `getLock()`: Retrieves the default lock.\n * - `getLock(string memory seed)`: Retrieves a custom lock based on a unique seed.\n * - `lock()` & `unlock()`: Acquire and release locks, reverting on failure.\n * - `tryLock()` & `tryUnlock()`: Non-reverting lock functions returning success status.\n *\n * Example usage:\n * ```solidity\n * function criticalOperation() external {\n *    // NonReentrantLockTransient.getLock() also can get a default lock\n *    NonReentrantLockTransient.NonReentrantLock memory lock = \"critical.lock\".getLock();\n *    lock.lock(); \n *    // Critical section code\n *    lock.unlock();\n * }\n * ```\n */\nlibrary NonReentrantLockTransient {\n    using SlotDerivation for *;\n    using TransientSlot for *;\n\n    error GetLockFailure(string slotSeed);\n    error AcquireLockFailure(string slotSeed);\n    error UnlockFailure(string slotSeed);\n\n    string public constant ERC7201_NAMESPACE = \"NonReentrantLockTransient.Namespace\";\n    string private constant DEFAULT_LOCK_SEED = \"NonReentrantLockTransient.default.lock\";\n\n    struct NonReentrantLock {\n        string _SLOT_SEED;\n        bytes32 _LOCK_SLOT;\n    }\n\n    /**\n     * @dev Retrieves the default lock.\n     * Reverts with {GetLockFailure} if the lock is already acquired.\n     */\n    function getLock() internal view returns (NonReentrantLock memory) {\n        bytes32 slot = DEFAULT_LOCK_SEED.erc7201Slot();\n        return _getLock(DEFAULT_LOCK_SEED, slot);\n    }\n\n    /**\n     * @dev Retrieves a custom lock based on the provided seed.\n     * @param slotSeed The unique identifier for the custom lock.\n     * Reverts with {GetLockFailure} if the lock is already acquired.\n     */\n    function getLock(string memory slotSeed) internal view returns (NonReentrantLock memory) {\n        bytes32 slot = ERC7201_NAMESPACE.erc7201Slot().deriveMapping(slotSeed);\n        return _getLock(slotSeed, slot);\n    }\n\n    function _getLock(string memory slotSeed, bytes32 slot) private view returns (NonReentrantLock memory) {\n        TransientSlot.BooleanSlot boolSlot = slot.asBoolean();\n        if (boolSlot.tload()) {\n            revert GetLockFailure(slotSeed);\n        }\n        return NonReentrantLock(slotSeed, slot);\n    }\n\n    /**\n     * @dev Acquires the lock.\n     * Reverts with {AcquireLockFailure} if the lock is already held.\n     */\n    function lock(NonReentrantLock memory _lock) internal {\n        if (!_tryAcquire(_lock)) {\n            revert AcquireLockFailure(_lock._SLOT_SEED);\n        }\n    }\n\n    /**\n     * @dev Releases the lock.\n     * Reverts with {UnlockFailure} if the lock is not currently held.\n     */\n    function unlock(NonReentrantLock memory _lock) internal {\n        if (!_tryRelease(_lock)) {\n            revert UnlockFailure(_lock._SLOT_SEED);\n        }\n    }\n\n    /**\n     * @dev Attempts to acquire the lock without reverting.\n     * @return success `true` if lock was acquired, `false` otherwise.\n     */\n    function tryLock(NonReentrantLock memory _lock) internal returns (bool) {\n        return _tryAcquire(_lock);\n    }\n\n    /**\n     * @dev Attempts to release the lock without reverting.\n     * @return success `true` if lock was released, `false` otherwise.\n     */\n    function tryUnlock(NonReentrantLock memory _lock) internal returns (bool) {\n        return _tryRelease(_lock);\n    }\n\n    function _tryAcquire(NonReentrantLock memory _lock) private returns (bool) {\n        TransientSlot.BooleanSlot boolSlot = _lock._LOCK_SLOT.asBoolean();\n        if (boolSlot.tload()) {\n            return false;\n        }\n        boolSlot.tstore(true);\n        return true;\n    }\n\n    function _tryRelease(NonReentrantLock memory _lock) private returns (bool) {\n        TransientSlot.BooleanSlot boolSlot = _lock._LOCK_SLOT.asBoolean();\n        if (!boolSlot.tload()) {\n            return false;\n        }\n        boolSlot.tstore(false);\n        return true;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/TransientSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/TransientSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/TransientSlot.js.\n\npragma solidity ^0.8.24;\n\n/**\n * @dev Library for reading and writing value-types to specific transient storage slots.\n *\n * Transient slots are often used to store temporary values that are removed after the current transaction.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n *  * Example reading and writing values using transient storage:\n * ```solidity\n * contract Lock {\n *     using TransientSlot for *;\n *\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;\n *\n *     modifier locked() {\n *         require(!_LOCK_SLOT.asBoolean().tload());\n *\n *         _LOCK_SLOT.asBoolean().tstore(true);\n *         _;\n *         _LOCK_SLOT.asBoolean().tstore(false);\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary TransientSlot {\n    /**\n     * @dev UDVT that represent a slot holding a address.\n     */\n    type AddressSlot is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a AddressSlot.\n     */\n    function asAddress(bytes32 slot) internal pure returns (AddressSlot) {\n        return AddressSlot.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a bool.\n     */\n    type BooleanSlot is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a BooleanSlot.\n     */\n    function asBoolean(bytes32 slot) internal pure returns (BooleanSlot) {\n        return BooleanSlot.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a bytes32.\n     */\n    type Bytes32Slot is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Bytes32Slot.\n     */\n    function asBytes32(bytes32 slot) internal pure returns (Bytes32Slot) {\n        return Bytes32Slot.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a uint256.\n     */\n    type Uint256Slot is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Uint256Slot.\n     */\n    function asUint256(bytes32 slot) internal pure returns (Uint256Slot) {\n        return Uint256Slot.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a int256.\n     */\n    type Int256Slot is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Int256Slot.\n     */\n    function asInt256(bytes32 slot) internal pure returns (Int256Slot) {\n        return Int256Slot.wrap(slot);\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(AddressSlot slot) internal view returns (address value) {\n        assembly (\"memory-safe\") {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(AddressSlot slot, address value) internal {\n        assembly (\"memory-safe\") {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(BooleanSlot slot) internal view returns (bool value) {\n        assembly (\"memory-safe\") {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(BooleanSlot slot, bool value) internal {\n        assembly (\"memory-safe\") {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Bytes32Slot slot) internal view returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Bytes32Slot slot, bytes32 value) internal {\n        assembly (\"memory-safe\") {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Uint256Slot slot) internal view returns (uint256 value) {\n        assembly (\"memory-safe\") {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Uint256Slot slot, uint256 value) internal {\n        assembly (\"memory-safe\") {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Int256Slot slot) internal view returns (int256 value) {\n        assembly (\"memory-safe\") {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Int256Slot slot, int256 value) internal {\n        assembly (\"memory-safe\") {\n            tstore(slot, value)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"SlotDerivation": {
					"abi": [],
					"devdoc": {
						"details": "Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1598:5321  library SlotDerivation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1598:5321  library SlotDerivation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ec40d5ee4f583bb842d3cb681ebed72a98b882e77437c18448f368e1e3591ca264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ec40d5ee4f583bb842d3cb681ebed72a98b882e77437c18448f368e1e3591ca264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC BLOCKHASH 0xD5 0xEE 0x4F PC EXTCODESIZE 0xB8 TIMESTAMP 0xD3 0xCB PUSH9 0x1EBED72A98B882E774 CALLDATACOPY 0xC1 DUP5 BASEFEE RETURN PUSH9 0xE1E3591CA264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "1598:3723:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ec40d5ee4f583bb842d3cb681ebed72a98b882e77437c18448f368e1e3591ca264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC BLOCKHASH 0xD5 0xEE 0x4F PC EXTCODESIZE 0xB8 TIMESTAMP 0xD3 0xCB PUSH9 0x1EBED72A98B882E774 CALLDATACOPY 0xC1 DUP5 BASEFEE RETURN PUSH9 0xE1E3591CA264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "1598:3723:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"deriveArray(bytes32)": "infinite",
								"deriveMapping(bytes32,address)": "infinite",
								"deriveMapping(bytes32,bool)": "infinite",
								"deriveMapping(bytes32,bytes memory)": "infinite",
								"deriveMapping(bytes32,bytes32)": "infinite",
								"deriveMapping(bytes32,int256)": "infinite",
								"deriveMapping(bytes32,string memory)": "infinite",
								"deriveMapping(bytes32,uint256)": "infinite",
								"erc7201Slot(string memory)": "infinite",
								"offset(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec40d5ee4f583bb842d3cb681ebed72a98b882e77437c18448f368e1e3591ca264736f6c634300081a0033",
									".code": [
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/TransientSlot.sol",
								"contracts/utils/AbstractNonReentrantLockTransient.sol",
								"contracts/utils/NonReentrantLockTransient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/TransientSlot.sol": {
				"TransientSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing value-types to specific transient storage slots. Transient slots are often used to store temporary values that are removed after the current transaction. This library helps with reading and writing to such slots without the need for inline assembly.  * Example reading and writing values using transient storage: ```solidity contract Lock {     using TransientSlot for *;     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;     modifier locked() {         require(!_LOCK_SLOT.asBoolean().tload());         _LOCK_SLOT.asBoolean().tstore(true);         _;         _LOCK_SLOT.asBoolean().tstore(false);     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/TransientSlot.sol\":1163:5068  library TransientSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/TransientSlot.sol\":1163:5068  library TransientSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122023f5a97d9b1af958f5d382852f809134c0851f5c56f88316b7e5918b5d54616564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122023f5a97d9b1af958f5d382852f809134c0851f5c56f88316b7e5918b5d54616564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CREATE2 0xA9 PUSH30 0x9B1AF958F5D382852F809134C0851F5C56F88316B7E5918B5D5461656473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1163:3905:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122023f5a97d9b1af958f5d382852f809134c0851f5c56f88316b7e5918b5d54616564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CREATE2 0xA9 PUSH30 0x9B1AF958F5D382852F809134C0851F5C56F88316B7E5918B5D5461656473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1163:3905:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"asAddress(bytes32)": "infinite",
								"asBoolean(bytes32)": "infinite",
								"asBytes32(bytes32)": "infinite",
								"asInt256(bytes32)": "infinite",
								"asUint256(bytes32)": "infinite",
								"tload(TransientSlot.AddressSlot)": "infinite",
								"tload(TransientSlot.BooleanSlot)": "infinite",
								"tload(TransientSlot.Bytes32Slot)": "infinite",
								"tload(TransientSlot.Int256Slot)": "infinite",
								"tload(TransientSlot.Uint256Slot)": "infinite",
								"tstore(TransientSlot.AddressSlot,address)": "infinite",
								"tstore(TransientSlot.BooleanSlot,bool)": "infinite",
								"tstore(TransientSlot.Bytes32Slot,bytes32)": "infinite",
								"tstore(TransientSlot.Int256Slot,int256)": "infinite",
								"tstore(TransientSlot.Uint256Slot,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 5068,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023f5a97d9b1af958f5d382852f809134c0851f5c56f88316b7e5918b5d54616564736f6c634300081a0033",
									".code": [
										{
											"begin": 1163,
											"end": 5068,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 5068,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/TransientSlot.sol",
								"contracts/utils/AbstractNonReentrantLockTransient.sol",
								"contracts/utils/NonReentrantLockTransient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing value-types to specific transient storage slots. Transient slots are often used to store temporary values that are removed after the current transaction. This library helps with reading and writing to such slots without the need for inline assembly.  * Example reading and writing values using transient storage: ```solidity contract Lock {     using TransientSlot for *;     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;     modifier locked() {         require(!_LOCK_SLOT.asBoolean().tload());         _LOCK_SLOT.asBoolean().tstore(true);         _;         _LOCK_SLOT.asBoolean().tstore(false);     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/TransientSlot.sol\":\"TransientSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0x9303ef5a2beb555e52ce56598de205ce07ca8988fc67d073687c06cb8fc973d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2e48fb42844c25e6cb38e7cfa1d91dcdc054613fd10f608833dbc677acf889\",\"dweb:/ipfs/QmT4HQxbgpWA3fZnK4dY3eXHNCoyBvpvzNq5k7eSt5mR5t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/AbstractNonReentrantLockTransient.sol": {
				"AbstractNonReentrantLockTransient": {
					"abi": [],
					"devdoc": {
						"details": "Abstract contract that provides reentrancy protection using transient storage (EIP-1153).  This module helps prevent reentrant calls by leveraging transient storage,  which automatically resets at the end of a transaction, reducing gas costs.  The {nonReentrantLock} modifier applies a default lock to functions, while  {nonReentrantcustomizeLock} allows for custom, fine-grained locks using unique seeds.  Inheriting from `NonReentrantLockTransient` will make these modifiers available. Example usage: ```solidity contract MyContract is NonReentrantLockTransient {     uint256 private _balance;      // Default reentrancy lock for simple functions     function deposit() external nonReentrantLock {         _balance += 1;     }      // Custom lock for more granular reentrancy protection     function withdraw() external nonReentrantcustomizeLock(\"withdraw.lock\") {         require(_balance > 0, \"Insufficient balance\");         _balance -= 1;     } } ```  TIP: Use transient storage for efficient reentrancy protection, especially in complex transactions.",
						"kind": "dev",
						"methods": {},
						"title": "NonReentrantLockTransient",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Abstract contract that provides reentrancy protection using transient storage (EIP-1153).  This module helps prevent reentrant calls by leveraging transient storage,  which automatically resets at the end of a transaction, reducing gas costs.  The {nonReentrantLock} modifier applies a default lock to functions, while  {nonReentrantcustomizeLock} allows for custom, fine-grained locks using unique seeds.  Inheriting from `NonReentrantLockTransient` will make these modifiers available. Example usage: ```solidity contract MyContract is NonReentrantLockTransient {     uint256 private _balance;      // Default reentrancy lock for simple functions     function deposit() external nonReentrantLock {         _balance += 1;     }      // Custom lock for more granular reentrancy protection     function withdraw() external nonReentrantcustomizeLock(\\\"withdraw.lock\\\") {         require(_balance > 0, \\\"Insufficient balance\\\");         _balance -= 1;     } } ```  TIP: Use transient storage for efficient reentrancy protection, especially in complex transactions.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"NonReentrantLockTransient\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/AbstractNonReentrantLockTransient.sol\":\"AbstractNonReentrantLockTransient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0x9303ef5a2beb555e52ce56598de205ce07ca8988fc67d073687c06cb8fc973d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2e48fb42844c25e6cb38e7cfa1d91dcdc054613fd10f608833dbc677acf889\",\"dweb:/ipfs/QmT4HQxbgpWA3fZnK4dY3eXHNCoyBvpvzNq5k7eSt5mR5t\"]},\"contracts/utils/AbstractNonReentrantLockTransient.sol\":{\"keccak256\":\"0x4c29731c14d2347c71088dd69611ad545946a65b6330c01637936655804569a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4bbb5c473894e6188c767397fd6acaad9770a9e93ede78b76fe4fb7700bdfb\",\"dweb:/ipfs/Qmcc96n31trr4SmNGWU2w1TjHohAzxYU9FTner21t3xsCw\"]},\"contracts/utils/NonReentrantLockTransient.sol\":{\"keccak256\":\"0xa544e46916861b6569c05678858f5edb0baaab689682e23d6df24b4ded30e3b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4165bd848036ce8504edaf3612f8d2a13bbd8061d800efebcabce967a59573a\",\"dweb:/ipfs/QmQdsMnQ7uU9QYxyAcdEFdhUFDHay71Pws3y2YDYrVXJWx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/NonReentrantLockTransient.sol": {
				"NonReentrantLockTransient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "slotSeed",
									"type": "string"
								}
							],
							"name": "AcquireLockFailure",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "slotSeed",
									"type": "string"
								}
							],
							"name": "GetLockFailure",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "slotSeed",
									"type": "string"
								}
							],
							"name": "UnlockFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC7201_NAMESPACE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Library for managing transient reentrancy locks using EIP-1153 transient storage.  Provides functions to acquire, release, and customize locks. Locks are automatically  reset at the end of transactions, ensuring safe use even in multi-call scenarios.  Key Functions: - `getLock()`: Retrieves the default lock. - `getLock(string memory seed)`: Retrieves a custom lock based on a unique seed. - `lock()` & `unlock()`: Acquire and release locks, reverting on failure. - `tryLock()` & `tryUnlock()`: Non-reverting lock functions returning success status. Example usage: ```solidity function criticalOperation() external {    // NonReentrantLockTransient.getLock() also can get a default lock    NonReentrantLockTransient.NonReentrantLock memory lock = \"critical.lock\".getLock();    lock.lock();     // Critical section code    lock.unlock(); } ```",
						"kind": "dev",
						"methods": {},
						"title": "NonReentrantLockTransient",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/NonReentrantLockTransient.sol\":1130:4372  library NonReentrantLockTransient {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/NonReentrantLockTransient.sol\":1130:4372  library NonReentrantLockTransient {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1516f08e\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/utils/NonReentrantLockTransient.sol\":1367:1447  string public constant ERC7201_NAMESPACE = \"NonReentrantLockTransient.Namespace\" */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_78bd68c7aad5ccee14efdb1ff7a7cc09b75c500c33c172544d24c92d311e0b5b\n      0x23\n      swap2\n      codecopy\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_7:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:289   */\n    tag_8:\n        /* \"#utility.yul\":204:215   */\n      0x00\n        /* \"#utility.yul\":238:244   */\n      dup3\n        /* \"#utility.yul\":233:236   */\n      dup3\n        /* \"#utility.yul\":226:245   */\n      mstore\n        /* \"#utility.yul\":278:282   */\n      0x20\n        /* \"#utility.yul\":273:276   */\n      dup3\n        /* \"#utility.yul\":269:283   */\n      add\n        /* \"#utility.yul\":254:283   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_9:\n        /* \"#utility.yul\":384:390   */\n      dup3\n        /* \"#utility.yul\":379:382   */\n      dup2\n        /* \"#utility.yul\":374:377   */\n      dup4\n        /* \"#utility.yul\":368:391   */\n      mcopy\n        /* \"#utility.yul\":425:426   */\n      0x00\n        /* \"#utility.yul\":416:422   */\n      dup4\n        /* \"#utility.yul\":411:414   */\n      dup4\n        /* \"#utility.yul\":407:423   */\n      add\n        /* \"#utility.yul\":400:427   */\n      mstore\n        /* \"#utility.yul\":295:434   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:542   */\n    tag_10:\n        /* \"#utility.yul\":481:487   */\n      0x00\n        /* \"#utility.yul\":532:534   */\n      0x1f\n        /* \"#utility.yul\":528:535   */\n      not\n        /* \"#utility.yul\":523:525   */\n      0x1f\n        /* \"#utility.yul\":516:521   */\n      dup4\n        /* \"#utility.yul\":512:526   */\n      add\n        /* \"#utility.yul\":508:536   */\n      and\n        /* \"#utility.yul\":498:536   */\n      swap1\n      pop\n        /* \"#utility.yul\":440:542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":548:941   */\n    tag_11:\n        /* \"#utility.yul\":644:647   */\n      0x00\n        /* \"#utility.yul\":672:711   */\n      tag_18\n        /* \"#utility.yul\":705:710   */\n      dup3\n        /* \"#utility.yul\":672:711   */\n      tag_7\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":727:806   */\n      tag_19\n        /* \"#utility.yul\":799:805   */\n      dup2\n        /* \"#utility.yul\":794:797   */\n      dup6\n        /* \"#utility.yul\":727:806   */\n      tag_8\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":720:806   */\n      swap4\n      pop\n        /* \"#utility.yul\":815:880   */\n      tag_20\n        /* \"#utility.yul\":873:879   */\n      dup2\n        /* \"#utility.yul\":868:871   */\n      dup6\n        /* \"#utility.yul\":861:865   */\n      0x20\n        /* \"#utility.yul\":854:859   */\n      dup7\n        /* \"#utility.yul\":850:866   */\n      add\n        /* \"#utility.yul\":815:880   */\n      tag_9\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":905:934   */\n      tag_21\n        /* \"#utility.yul\":927:933   */\n      dup2\n        /* \"#utility.yul\":905:934   */\n      tag_10\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":900:903   */\n      dup5\n        /* \"#utility.yul\":896:935   */\n      add\n        /* \"#utility.yul\":889:935   */\n      swap2\n      pop\n        /* \"#utility.yul\":648:941   */\n      pop\n        /* \"#utility.yul\":548:941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":947:1276   */\n    tag_6:\n        /* \"#utility.yul\":1068:1072   */\n      0x00\n        /* \"#utility.yul\":1106:1108   */\n      0x20\n        /* \"#utility.yul\":1095:1104   */\n      dup3\n        /* \"#utility.yul\":1091:1109   */\n      add\n        /* \"#utility.yul\":1083:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1155:1164   */\n      dup2\n        /* \"#utility.yul\":1149:1153   */\n      dup2\n        /* \"#utility.yul\":1145:1165   */\n      sub\n        /* \"#utility.yul\":1141:1142   */\n      0x00\n        /* \"#utility.yul\":1130:1139   */\n      dup4\n        /* \"#utility.yul\":1126:1143   */\n      add\n        /* \"#utility.yul\":1119:1166   */\n      mstore\n        /* \"#utility.yul\":1183:1269   */\n      tag_23\n        /* \"#utility.yul\":1264:1268   */\n      dup2\n        /* \"#utility.yul\":1255:1261   */\n      dup5\n        /* \"#utility.yul\":1183:1269   */\n      tag_11\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":1175:1269   */\n      swap1\n      pop\n        /* \"#utility.yul\":947:1276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_78bd68c7aad5ccee14efdb1ff7a7cc09b75c500c33c172544d24c92d311e0b5b 4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e4e616d657370616365\n\n    auxdata: 0xa2646970667358221220782cdb37201ef7101a5204341d6973c71716773c604573215d4cac07cf0881a964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61015b61004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c80631516f08e14610038575b5f80fd5b610040610056565b60405161004d91906100e2565b60405180910390f35b6040518060600160405280602381526020016101036023913981565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6100b482610072565b6100be818561007c565b93506100ce81856020860161008c565b6100d78161009a565b840191505092915050565b5f6020820190508181035f8301526100fa81846100aa565b90509291505056fe4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e4e616d657370616365a2646970667358221220782cdb37201ef7101a5204341d6973c71716773c604573215d4cac07cf0881a964736f6c634300081a0033",
							"opcodes": "PUSH2 0x15B PUSH2 0x4D PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x41 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1516F08E EQ PUSH2 0x38 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 PUSH1 0x23 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x72 JUMP JUMPDEST PUSH2 0xBE DUP2 DUP6 PUSH2 0x7C JUMP JUMPDEST SWAP4 POP PUSH2 0xCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0x9A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA DUP2 DUP5 PUSH2 0xAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID 0x4E PUSH16 0x6E5265656E7472616E744C6F636B5472 PUSH2 0x6E73 PUSH10 0x656E742E4E616D657370 PUSH2 0x6365 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x2CDB37201EF7101A5204341D6973C71716773C604573215D4C 0xAC SMOD 0xCF ADDMOD DUP2 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1130:3242:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ERC7201_NAMESPACE_409": {
									"entryPoint": 86,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1279:4",
										"nodeType": "YulBlock",
										"src": "0:1279:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:4",
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nativeSrc": "77:22:4",
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nativeSrc": "87:12:4",
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:4",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:4",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nativeSrc": "216:73:4",
													"nodeType": "YulBlock",
													"src": "216:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "233:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "233:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "226:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "226:6:4"
																},
																"nativeSrc": "226:19:4",
																"nodeType": "YulFunctionCall",
																"src": "226:19:4"
															},
															"nativeSrc": "226:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "226:19:4"
														},
														{
															"nativeSrc": "254:29:4",
															"nodeType": "YulAssignment",
															"src": "254:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "273:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:4:4",
																		"nodeType": "YulLiteral",
																		"src": "278:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "269:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "269:3:4"
																},
																"nativeSrc": "269:14:4",
																"nodeType": "YulFunctionCall",
																"src": "269:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "254:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "254:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
												"nativeSrc": "112:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "188:3:4",
														"nodeType": "YulTypedName",
														"src": "188:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "193:6:4",
														"nodeType": "YulTypedName",
														"src": "193:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "204:11:4",
														"nodeType": "YulTypedName",
														"src": "204:11:4",
														"type": ""
													}
												],
												"src": "112:177:4"
											},
											{
												"body": {
													"nativeSrc": "357:77:4",
													"nodeType": "YulBlock",
													"src": "357:77:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "374:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "374:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "379:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "379:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "384:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "384:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "368:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:4"
																},
																"nativeSrc": "368:23:4",
																"nodeType": "YulFunctionCall",
																"src": "368:23:4"
															},
															"nativeSrc": "368:23:4",
															"nodeType": "YulExpressionStatement",
															"src": "368:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "411:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "411:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "416:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "416:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "407:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "407:3:4"
																		},
																		"nativeSrc": "407:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "407:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:1:4",
																		"nodeType": "YulLiteral",
																		"src": "425:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:4"
																},
																"nativeSrc": "400:27:4",
																"nodeType": "YulFunctionCall",
																"src": "400:27:4"
															},
															"nativeSrc": "400:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "400:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "295:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "339:3:4",
														"nodeType": "YulTypedName",
														"src": "339:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "344:3:4",
														"nodeType": "YulTypedName",
														"src": "344:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "349:6:4",
														"nodeType": "YulTypedName",
														"src": "349:6:4",
														"type": ""
													}
												],
												"src": "295:139:4"
											},
											{
												"body": {
													"nativeSrc": "488:54:4",
													"nodeType": "YulBlock",
													"src": "488:54:4",
													"statements": [
														{
															"nativeSrc": "498:38:4",
															"nodeType": "YulAssignment",
															"src": "498:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "516:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "516:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:4",
																				"nodeType": "YulLiteral",
																				"src": "523:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "512:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:4"
																		},
																		"nativeSrc": "512:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "512:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "532:2:4",
																				"nodeType": "YulLiteral",
																				"src": "532:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "528:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:4"
																		},
																		"nativeSrc": "528:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "528:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:4"
																},
																"nativeSrc": "508:28:4",
																"nodeType": "YulFunctionCall",
																"src": "508:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "498:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "498:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "440:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "471:5:4",
														"nodeType": "YulTypedName",
														"src": "471:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "481:6:4",
														"nodeType": "YulTypedName",
														"src": "481:6:4",
														"type": ""
													}
												],
												"src": "440:102:4"
											},
											{
												"body": {
													"nativeSrc": "648:293:4",
													"nodeType": "YulBlock",
													"src": "648:293:4",
													"statements": [
														{
															"nativeSrc": "658:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "658:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "705:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "705:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "672:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "672:32:4"
																},
																"nativeSrc": "672:39:4",
																"nodeType": "YulFunctionCall",
																"src": "672:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:4",
																	"nodeType": "YulTypedName",
																	"src": "662:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "720:86:4",
															"nodeType": "YulAssignment",
															"src": "720:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "794:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "794:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "799:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
																	"nativeSrc": "727:66:4",
																	"nodeType": "YulIdentifier",
																	"src": "727:66:4"
																},
																"nativeSrc": "727:79:4",
																"nodeType": "YulFunctionCall",
																"src": "727:79:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "720:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "720:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "854:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "854:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "861:4:4",
																				"nodeType": "YulLiteral",
																				"src": "861:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "850:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:4"
																		},
																		"nativeSrc": "850:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "850:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "868:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "868:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "873:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "815:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "815:34:4"
																},
																"nativeSrc": "815:65:4",
																"nodeType": "YulFunctionCall",
																"src": "815:65:4"
															},
															"nativeSrc": "815:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "815:65:4"
														},
														{
															"nativeSrc": "889:46:4",
															"nodeType": "YulAssignment",
															"src": "889:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "900:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "900:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "927:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "927:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "905:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "905:21:4"
																		},
																		"nativeSrc": "905:29:4",
																		"nodeType": "YulFunctionCall",
																		"src": "905:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "896:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:4"
																},
																"nativeSrc": "896:39:4",
																"nodeType": "YulFunctionCall",
																"src": "896:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "889:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
												"nativeSrc": "548:393:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "629:5:4",
														"nodeType": "YulTypedName",
														"src": "629:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "636:3:4",
														"nodeType": "YulTypedName",
														"src": "636:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "644:3:4",
														"nodeType": "YulTypedName",
														"src": "644:3:4",
														"type": ""
													}
												],
												"src": "548:393:4"
											},
											{
												"body": {
													"nativeSrc": "1073:203:4",
													"nodeType": "YulBlock",
													"src": "1073:203:4",
													"statements": [
														{
															"nativeSrc": "1083:26:4",
															"nodeType": "YulAssignment",
															"src": "1083:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1095:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1095:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1106:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1106:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1091:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nativeSrc": "1091:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1091:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1083:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1083:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1130:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1130:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1141:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1141:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1126:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:4"
																		},
																		"nativeSrc": "1126:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1126:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1149:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1149:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1155:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1145:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1145:3:4"
																		},
																		"nativeSrc": "1145:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1145:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1119:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1119:6:4"
																},
																"nativeSrc": "1119:47:4",
																"nodeType": "YulFunctionCall",
																"src": "1119:47:4"
															},
															"nativeSrc": "1119:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "1119:47:4"
														},
														{
															"nativeSrc": "1175:94:4",
															"nodeType": "YulAssignment",
															"src": "1175:94:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1255:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1255:6:4"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1264:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1264:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
																	"nativeSrc": "1183:71:4",
																	"nodeType": "YulIdentifier",
																	"src": "1183:71:4"
																},
																"nativeSrc": "1183:86:4",
																"nodeType": "YulFunctionCall",
																"src": "1183:86:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1175:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1175:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
												"nativeSrc": "947:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1045:9:4",
														"nodeType": "YulTypedName",
														"src": "1045:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1057:6:4",
														"nodeType": "YulTypedName",
														"src": "1057:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1068:4:4",
														"nodeType": "YulTypedName",
														"src": "1068:4:4",
														"type": ""
													}
												],
												"src": "947:329:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c80631516f08e14610038575b5f80fd5b610040610056565b60405161004d91906100e2565b60405180910390f35b6040518060600160405280602381526020016101036023913981565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6100b482610072565b6100be818561007c565b93506100ce81856020860161008c565b6100d78161009a565b840191505092915050565b5f6020820190508181035f8301526100fa81846100aa565b90509291505056fe4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e4e616d657370616365a2646970667358221220782cdb37201ef7101a5204341d6973c71716773c604573215d4cac07cf0881a964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1516F08E EQ PUSH2 0x38 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 PUSH1 0x23 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x72 JUMP JUMPDEST PUSH2 0xBE DUP2 DUP6 PUSH2 0x7C JUMP JUMPDEST SWAP4 POP PUSH2 0xCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0x9A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA DUP2 DUP5 PUSH2 0xAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID 0x4E PUSH16 0x6E5265656E7472616E744C6F636B5472 PUSH2 0x6E73 PUSH10 0x656E742E4E616D657370 PUSH2 0x6365 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x2CDB37201EF7101A5204341D6973C71716773C604573215D4C 0xAC SMOD 0xCF ADDMOD DUP2 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1130:3242:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;1367:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:177::-;204:11;238:6;233:3;226:19;278:4;273:3;269:14;254:29;;112:177;;;;:::o;295:139::-;384:6;379:3;374;368:23;425:1;416:6;411:3;407:16;400:27;295:139;;;:::o;440:102::-;481:6;532:2;528:7;523:2;516:5;512:14;508:28;498:38;;440:102;;;:::o;548:393::-;644:3;672:39;705:5;672:39;:::i;:::-;727:79;799:6;794:3;727:79;:::i;:::-;720:86;;815:65;873:6;868:3;861:4;854:5;850:16;815:65;:::i;:::-;905:29;927:6;905:29;:::i;:::-;900:3;896:39;889:46;;648:293;548:393;;;;:::o;947:329::-;1068:4;1106:2;1095:9;1091:18;1083:26;;1155:9;1149:4;1145:20;1141:1;1130:9;1126:17;1119:47;1183:86;1264:4;1255:6;1183:86;:::i;:::-;1175:94;;947:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69400",
								"executionCost": "143",
								"totalCost": "69543"
							},
							"external": {
								"ERC7201_NAMESPACE()": "infinite"
							},
							"internal": {
								"_getLock(string memory,bytes32)": "infinite",
								"_tryAcquire(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite",
								"_tryRelease(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite",
								"getLock()": "infinite",
								"getLock(string memory)": "infinite",
								"lock(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite",
								"tryLock(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite",
								"tryUnlock(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite",
								"unlock(struct NonReentrantLockTransient.NonReentrantLock memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 4372,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220782cdb37201ef7101a5204341d6973c71716773c604573215d4cac07cf0881a964736f6c634300081a0033",
									".code": [
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "1516F08E"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 4372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH data",
											"source": 3,
											"value": "78BD68C7AAD5CCEE14EFDB1FF7A7CC09B75C500C33C172544D24C92D311E0B5B"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 233,
											"end": 236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 226,
											"end": 245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 278,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 269,
											"end": 283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 254,
											"end": 283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 390,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 379,
											"end": 382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 374,
											"end": 377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 368,
											"end": 391,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 425,
											"end": 426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 414,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 407,
											"end": 423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 400,
											"end": 427,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 542,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 440,
											"end": 542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 528,
											"end": 535,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 516,
											"end": 521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 512,
											"end": 526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 508,
											"end": 536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 498,
											"end": 536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 548,
											"end": 941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 644,
											"end": 647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 711,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 672,
											"end": 711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 727,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 794,
											"end": 797,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 727,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 727,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 727,
											"end": 806,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 727,
											"end": 806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 720,
											"end": 806,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 720,
											"end": 806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 815,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 868,
											"end": 871,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 859,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 850,
											"end": 866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 815,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 815,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 815,
											"end": 880,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 905,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 905,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 905,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 905,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 905,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 903,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 896,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 889,
											"end": 935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 889,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1139,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1264,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1183,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1269,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1183,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									],
									".data": {
										"78BD68C7AAD5CCEE14EFDB1FF7A7CC09B75C500C33C172544D24C92D311E0B5B": "4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e4e616d657370616365"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/TransientSlot.sol",
								"contracts/utils/AbstractNonReentrantLockTransient.sol",
								"contracts/utils/NonReentrantLockTransient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ERC7201_NAMESPACE()": "1516f08e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"slotSeed\",\"type\":\"string\"}],\"name\":\"AcquireLockFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"slotSeed\",\"type\":\"string\"}],\"name\":\"GetLockFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"slotSeed\",\"type\":\"string\"}],\"name\":\"UnlockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC7201_NAMESPACE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Library for managing transient reentrancy locks using EIP-1153 transient storage.  Provides functions to acquire, release, and customize locks. Locks are automatically  reset at the end of transactions, ensuring safe use even in multi-call scenarios.  Key Functions: - `getLock()`: Retrieves the default lock. - `getLock(string memory seed)`: Retrieves a custom lock based on a unique seed. - `lock()` & `unlock()`: Acquire and release locks, reverting on failure. - `tryLock()` & `tryUnlock()`: Non-reverting lock functions returning success status. Example usage: ```solidity function criticalOperation() external {    // NonReentrantLockTransient.getLock() also can get a default lock    NonReentrantLockTransient.NonReentrantLock memory lock = \\\"critical.lock\\\".getLock();    lock.lock();     // Critical section code    lock.unlock(); } ```\",\"kind\":\"dev\",\"methods\":{},\"title\":\"NonReentrantLockTransient\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/NonReentrantLockTransient.sol\":\"NonReentrantLockTransient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0x9303ef5a2beb555e52ce56598de205ce07ca8988fc67d073687c06cb8fc973d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2e48fb42844c25e6cb38e7cfa1d91dcdc054613fd10f608833dbc677acf889\",\"dweb:/ipfs/QmT4HQxbgpWA3fZnK4dY3eXHNCoyBvpvzNq5k7eSt5mR5t\"]},\"contracts/utils/NonReentrantLockTransient.sol\":{\"keccak256\":\"0xa544e46916861b6569c05678858f5edb0baaab689682e23d6df24b4ded30e3b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4165bd848036ce8504edaf3612f8d2a13bbd8061d800efebcabce967a59573a\",\"dweb:/ipfs/QmQdsMnQ7uU9QYxyAcdEFdhUFDHay71Pws3y2YDYrVXJWx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2394",
				"formattedMessage": "Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n   --> @openzeppelin/contracts/utils/TransientSlot.sol:108:13:\n    |\n108 |             tstore(slot, value)\n    |             ^^^^^^\n\n",
				"message": "Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3119,
					"file": "@openzeppelin/contracts/utils/TransientSlot.sol",
					"start": 3113
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
					"exportedSymbols": {
						"SlotDerivation": [
							129
						]
					},
					"id": 130,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "199:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SlotDerivation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "225:1372:0",
								"text": " @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "SlotDerivation",
							"nameLocation": "1606:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "1789:194:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1824:153:0",
													"nodeType": "YulBlock",
													"src": "1824:153:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1845:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nativeSrc": "1869:9:0",
																								"nodeType": "YulIdentifier",
																								"src": "1869:9:0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1880:4:0",
																								"nodeType": "YulLiteral",
																								"src": "1880:4:0",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1865:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1865:3:0"
																						},
																						"nativeSrc": "1865:20:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1865:20:0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nativeSrc": "1893:9:0",
																								"nodeType": "YulIdentifier",
																								"src": "1893:9:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "1887:5:0",
																							"nodeType": "YulIdentifier",
																							"src": "1887:5:0"
																						},
																						"nativeSrc": "1887:16:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1887:16:0"
																					}
																				],
																				"functionName": {
																					"name": "keccak256",
																					"nativeSrc": "1855:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "1855:9:0"
																				},
																				"nativeSrc": "1855:49:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1855:49:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1906:1:0",
																				"nodeType": "YulLiteral",
																				"src": "1906:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1851:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:0"
																		},
																		"nativeSrc": "1851:57:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1851:57:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1838:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:0"
																},
																"nativeSrc": "1838:71:0",
																"nodeType": "YulFunctionCall",
																"src": "1838:71:0"
															},
															"nativeSrc": "1838:71:0",
															"nodeType": "YulExpressionStatement",
															"src": "1838:71:0"
														},
														{
															"nativeSrc": "1922:45:0",
															"nodeType": "YulAssignment",
															"src": "1922:45:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1944:4:0",
																				"nodeType": "YulLiteral",
																				"src": "1944:4:0",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1950:4:0",
																				"nodeType": "YulLiteral",
																				"src": "1950:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "1934:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "1934:9:0"
																		},
																		"nativeSrc": "1934:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1934:21:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1961:4:0",
																				"nodeType": "YulLiteral",
																				"src": "1961:4:0",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1957:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:0"
																		},
																		"nativeSrc": "1957:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1930:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:0"
																},
																"nativeSrc": "1930:37:0",
																"nodeType": "YulFunctionCall",
																"src": "1930:37:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "1922:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "1922:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1869:9:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1893:9:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1922:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "1799:178:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "1627:74:0",
										"text": " @dev Derive an ERC-7201 slot from a string (namespace)."
									},
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc7201Slot",
									"nameLocation": "1715:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "namespace",
												"nameLocation": "1741:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1727:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:25:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1783:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1775:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:14:0"
									},
									"scope": 129,
									"src": "1706:277:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "2175:86:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "2185:70:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 26,
																				"name": "slot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "2232:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 25,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2224:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 24,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2224:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2224:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 28,
																		"name": "pos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "2240:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2224:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 22,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"functionReturnParameters": 21,
														"id": 31,
														"nodeType": "Return",
														"src": "2209:35:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "1989:99:0",
										"text": " @dev Add an offset to a slot to get the n-th element of a structure or an array."
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "offset",
									"nameLocation": "2102:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2131:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2123:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:27:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2159:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 19,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:16:0"
									},
									"scope": 129,
									"src": "2093:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2464:127:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2499:86:0",
													"nodeType": "YulBlock",
													"src": "2499:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2520:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2520:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "2526:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "2526:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2513:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:0"
																},
																"nativeSrc": "2513:18:0",
																"nodeType": "YulFunctionCall",
																"src": "2513:18:0"
															},
															"nativeSrc": "2513:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "2513:18:0"
														},
														{
															"nativeSrc": "2544:31:0",
															"nodeType": "YulAssignment",
															"src": "2544:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2564:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2564:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2570:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2570:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2554:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "2554:9:0"
																},
																"nativeSrc": "2554:21:0",
																"nodeType": "YulFunctionCall",
																"src": "2554:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2544:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2544:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 40,
														"isOffset": false,
														"isSlot": false,
														"src": "2544:6:0",
														"valueSize": 1
													},
													{
														"declaration": 37,
														"isOffset": false,
														"isSlot": false,
														"src": "2526:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 42,
												"nodeType": "InlineAssembly",
												"src": "2474:111:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2267:118:0",
										"text": " @dev Derive the location of the first element in an array from the slot where the length is stored."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveArray",
									"nameLocation": "2399:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:14:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2456:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2448:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:16:0"
									},
									"scope": 129,
									"src": "2390:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "2769:179:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2804:138:0",
													"nodeType": "YulBlock",
													"src": "2804:138:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2825:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2825:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"name": "key",
																				"nativeSrc": "2835:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "2835:3:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2844:2:0",
																						"nodeType": "YulLiteral",
																						"src": "2844:2:0",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2852:1:0",
																								"nodeType": "YulLiteral",
																								"src": "2852:1:0",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2848:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2848:3:0"
																						},
																						"nativeSrc": "2848:6:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2848:6:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2840:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2840:3:0"
																				},
																				"nativeSrc": "2840:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2840:15:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2831:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:0"
																		},
																		"nativeSrc": "2831:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:25:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2818:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:0"
																},
																"nativeSrc": "2818:39:0",
																"nodeType": "YulFunctionCall",
																"src": "2818:39:0"
															},
															"nativeSrc": "2818:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "2818:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2877:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2877:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "2883:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2870:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:0"
																},
																"nativeSrc": "2870:18:0",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:0"
															},
															"nativeSrc": "2870:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "2870:18:0"
														},
														{
															"nativeSrc": "2901:31:0",
															"nodeType": "YulAssignment",
															"src": "2901:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2921:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2921:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2927:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2927:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2911:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "2911:9:0"
																},
																"nativeSrc": "2911:21:0",
																"nodeType": "YulFunctionCall",
																"src": "2911:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2901:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2835:3:0",
														"valueSize": 1
													},
													{
														"declaration": 52,
														"isOffset": false,
														"isSlot": false,
														"src": "2901:6:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "2883:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 54,
												"nodeType": "InlineAssembly",
												"src": "2779:163:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2597:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "2689:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2703:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2725:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2717:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:27:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2761:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2753:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 51,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:16:0"
									},
									"scope": 129,
									"src": "2680:268:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3123:173:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3158:132:0",
													"nodeType": "YulBlock",
													"src": "3158:132:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3179:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3179:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "key",
																						"nativeSrc": "3199:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3199:3:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3192:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "3192:6:0"
																				},
																				"nativeSrc": "3192:11:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3192:11:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3185:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "3185:6:0"
																		},
																		"nativeSrc": "3185:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:19:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3172:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:0"
																},
																"nativeSrc": "3172:33:0",
																"nodeType": "YulFunctionCall",
																"src": "3172:33:0"
															},
															"nativeSrc": "3172:33:0",
															"nodeType": "YulExpressionStatement",
															"src": "3172:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3225:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3225:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3231:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "3231:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3218:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:0"
																},
																"nativeSrc": "3218:18:0",
																"nodeType": "YulFunctionCall",
																"src": "3218:18:0"
															},
															"nativeSrc": "3218:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "3218:18:0"
														},
														{
															"nativeSrc": "3249:31:0",
															"nodeType": "YulAssignment",
															"src": "3249:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3269:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3275:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3275:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3259:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "3259:9:0"
																},
																"nativeSrc": "3259:21:0",
																"nodeType": "YulFunctionCall",
																"src": "3259:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3249:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 61,
														"isOffset": false,
														"isSlot": false,
														"src": "3199:3:0",
														"valueSize": 1
													},
													{
														"declaration": 64,
														"isOffset": false,
														"isSlot": false,
														"src": "3249:6:0",
														"valueSize": 1
													},
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "3231:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 66,
												"nodeType": "InlineAssembly",
												"src": "3133:157:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2954:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3046:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 58,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3079:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3074:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:24:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3115:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3107:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 63,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:16:0"
									},
									"scope": 129,
									"src": "3037:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "3474:157:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3509:116:0",
													"nodeType": "YulBlock",
													"src": "3509:116:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3530:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3530:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "3536:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "3536:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:0"
																},
																"nativeSrc": "3523:17:0",
																"nodeType": "YulFunctionCall",
																"src": "3523:17:0"
															},
															"nativeSrc": "3523:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "3523:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3560:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3566:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "3566:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3553:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:0"
																},
																"nativeSrc": "3553:18:0",
																"nodeType": "YulFunctionCall",
																"src": "3553:18:0"
															},
															"nativeSrc": "3553:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "3553:18:0"
														},
														{
															"nativeSrc": "3584:31:0",
															"nodeType": "YulAssignment",
															"src": "3584:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3604:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3604:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3610:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3610:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3594:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "3594:9:0"
																},
																"nativeSrc": "3594:21:0",
																"nodeType": "YulFunctionCall",
																"src": "3594:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3584:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 73,
														"isOffset": false,
														"isSlot": false,
														"src": "3536:3:0",
														"valueSize": 1
													},
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "3584:6:0",
														"valueSize": 1
													},
													{
														"declaration": 71,
														"isOffset": false,
														"isSlot": false,
														"src": "3566:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 78,
												"nodeType": "InlineAssembly",
												"src": "3484:141:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3302:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3394:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3416:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 70,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3430:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3422:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 72,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:27:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 75,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3457:16:0"
									},
									"scope": 129,
									"src": "3385:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3809:157:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3844:116:0",
													"nodeType": "YulBlock",
													"src": "3844:116:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3865:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3865:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "3871:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "3871:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3858:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3858:6:0"
																},
																"nativeSrc": "3858:17:0",
																"nodeType": "YulFunctionCall",
																"src": "3858:17:0"
															},
															"nativeSrc": "3858:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "3858:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3895:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3895:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "3901:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "3901:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3888:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:0"
																},
																"nativeSrc": "3888:18:0",
																"nodeType": "YulFunctionCall",
																"src": "3888:18:0"
															},
															"nativeSrc": "3888:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "3888:18:0"
														},
														{
															"nativeSrc": "3919:31:0",
															"nodeType": "YulAssignment",
															"src": "3919:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3939:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3939:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3945:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3945:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3929:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "3929:9:0"
																},
																"nativeSrc": "3929:21:0",
																"nodeType": "YulFunctionCall",
																"src": "3929:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3919:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "3871:3:0",
														"valueSize": 1
													},
													{
														"declaration": 88,
														"isOffset": false,
														"isSlot": false,
														"src": "3919:6:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "3901:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 90,
												"nodeType": "InlineAssembly",
												"src": "3819:141:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3637:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3729:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3751:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3743:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3765:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3757:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:27:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 87,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:16:0"
									},
									"scope": 129,
									"src": "3720:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "4143:157:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4178:116:0",
													"nodeType": "YulBlock",
													"src": "4178:116:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4199:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4199:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nativeSrc": "4205:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4205:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4192:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:0"
																},
																"nativeSrc": "4192:17:0",
																"nodeType": "YulFunctionCall",
																"src": "4192:17:0"
															},
															"nativeSrc": "4192:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "4192:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4229:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4229:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "4235:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4235:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4222:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:0"
																},
																"nativeSrc": "4222:18:0",
																"nodeType": "YulFunctionCall",
																"src": "4222:18:0"
															},
															"nativeSrc": "4222:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "4222:18:0"
														},
														{
															"nativeSrc": "4253:31:0",
															"nodeType": "YulAssignment",
															"src": "4253:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4273:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4273:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4279:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4279:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4263:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "4263:9:0"
																},
																"nativeSrc": "4263:21:0",
																"nodeType": "YulFunctionCall",
																"src": "4263:21:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4253:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 97,
														"isOffset": false,
														"isSlot": false,
														"src": "4205:3:0",
														"valueSize": 1
													},
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "4253:6:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "4235:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 102,
												"nodeType": "InlineAssembly",
												"src": "4153:141:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3972:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4064:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4086:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4099:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4092:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 96,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4077:26:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4135:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4127:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:16:0"
									},
									"scope": 129,
									"src": "4055:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "4484:326:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4519:285:0",
													"nodeType": "YulBlock",
													"src": "4519:285:0",
													"statements": [
														{
															"nativeSrc": "4533:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4533:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "4553:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4553:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4547:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4547:5:0"
																},
																"nativeSrc": "4547:10:0",
																"nodeType": "YulFunctionCall",
																"src": "4547:10:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4537:6:0",
																	"nodeType": "YulTypedName",
																	"src": "4537:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4570:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4570:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "4587:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4587:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4592:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4592:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4583:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:0"
																},
																"nativeSrc": "4583:14:0",
																"nodeType": "YulFunctionCall",
																"src": "4583:14:0"
															},
															"variables": [
																{
																	"name": "begin",
																	"nativeSrc": "4574:5:0",
																	"nodeType": "YulTypedName",
																	"src": "4574:5:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4610:29:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4610:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "4625:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4625:5:0"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4632:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4621:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:0"
																},
																"nativeSrc": "4621:18:0",
																"nodeType": "YulFunctionCall",
																"src": "4621:18:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "4614:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4614:3:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4652:23:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4652:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4671:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4671:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4665:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:0"
																},
																"nativeSrc": "4665:10:0",
																"nodeType": "YulFunctionCall",
																"src": "4665:10:0"
															},
															"variables": [
																{
																	"name": "cache",
																	"nativeSrc": "4656:5:0",
																	"nodeType": "YulTypedName",
																	"src": "4656:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4695:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:0"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "4700:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4700:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4688:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:0"
																},
																"nativeSrc": "4688:17:0",
																"nodeType": "YulFunctionCall",
																"src": "4688:17:0"
															},
															"nativeSrc": "4688:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "4688:17:0"
														},
														{
															"nativeSrc": "4718:45:0",
															"nodeType": "YulAssignment",
															"src": "4718:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "4738:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4749:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4757:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4745:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4745:3:0"
																		},
																		"nativeSrc": "4745:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4745:17:0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4728:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "4728:9:0"
																},
																"nativeSrc": "4728:35:0",
																"nodeType": "YulFunctionCall",
																"src": "4728:35:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4718:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "4783:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4783:3:0"
																	},
																	{
																		"name": "cache",
																		"nativeSrc": "4788:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4788:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4776:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:0"
																},
																"nativeSrc": "4776:18:0",
																"nodeType": "YulFunctionCall",
																"src": "4776:18:0"
															},
															"nativeSrc": "4776:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "4776:18:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "4553:3:0",
														"valueSize": 1
													},
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "4587:3:0",
														"valueSize": 1
													},
													{
														"declaration": 112,
														"isOffset": false,
														"isSlot": false,
														"src": "4718:6:0",
														"valueSize": 1
													},
													{
														"declaration": 107,
														"isOffset": false,
														"isSlot": false,
														"src": "4700:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 114,
												"nodeType": "InlineAssembly",
												"src": "4494:310:0"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4306:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4398:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4412:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4440:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4426:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4426:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4476:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4468:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:16:0"
									},
									"scope": 129,
									"src": "4389:421:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4993:326:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5028:285:0",
													"nodeType": "YulBlock",
													"src": "5028:285:0",
													"statements": [
														{
															"nativeSrc": "5042:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5042:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "5062:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5062:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5056:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "5056:5:0"
																},
																"nativeSrc": "5056:10:0",
																"nodeType": "YulFunctionCall",
																"src": "5056:10:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5046:6:0",
																	"nodeType": "YulTypedName",
																	"src": "5046:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5079:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5079:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nativeSrc": "5096:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5096:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5101:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5092:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:0"
																},
																"nativeSrc": "5092:14:0",
																"nodeType": "YulFunctionCall",
																"src": "5092:14:0"
															},
															"variables": [
																{
																	"name": "begin",
																	"nativeSrc": "5083:5:0",
																	"nodeType": "YulTypedName",
																	"src": "5083:5:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5119:29:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5119:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "5134:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5134:5:0"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5141:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5130:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:0"
																},
																"nativeSrc": "5130:18:0",
																"nodeType": "YulFunctionCall",
																"src": "5130:18:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "5123:3:0",
																	"nodeType": "YulTypedName",
																	"src": "5123:3:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5161:23:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5161:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5180:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5180:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5174:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "5174:5:0"
																},
																"nativeSrc": "5174:10:0",
																"nodeType": "YulFunctionCall",
																"src": "5174:10:0"
															},
															"variables": [
																{
																	"name": "cache",
																	"nativeSrc": "5165:5:0",
																	"nodeType": "YulTypedName",
																	"src": "5165:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5204:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:0"
																	},
																	{
																		"name": "slot",
																		"nativeSrc": "5209:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5209:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5197:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:0"
																},
																"nativeSrc": "5197:17:0",
																"nodeType": "YulFunctionCall",
																"src": "5197:17:0"
															},
															"nativeSrc": "5197:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "5197:17:0"
														},
														{
															"nativeSrc": "5227:45:0",
															"nodeType": "YulAssignment",
															"src": "5227:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nativeSrc": "5247:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5247:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5258:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5266:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5266:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5254:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:0"
																		},
																		"nativeSrc": "5254:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5254:17:0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5237:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5237:9:0"
																},
																"nativeSrc": "5237:35:0",
																"nodeType": "YulFunctionCall",
																"src": "5237:35:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5227:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "5292:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5292:3:0"
																	},
																	{
																		"name": "cache",
																		"nativeSrc": "5297:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5285:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:0"
																},
																"nativeSrc": "5285:18:0",
																"nodeType": "YulFunctionCall",
																"src": "5285:18:0"
															},
															"nativeSrc": "5285:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "5285:18:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 121,
														"isOffset": false,
														"isSlot": false,
														"src": "5062:3:0",
														"valueSize": 1
													},
													{
														"declaration": 121,
														"isOffset": false,
														"isSlot": false,
														"src": "5096:3:0",
														"valueSize": 1
													},
													{
														"declaration": 124,
														"isOffset": false,
														"isSlot": false,
														"src": "5227:6:0",
														"valueSize": 1
													},
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "5209:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 126,
												"nodeType": "InlineAssembly",
												"src": "5003:310:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4816:78:0",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4908:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4949:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4936:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4936:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4921:32:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4977:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 123,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4976:16:0"
									},
									"scope": 129,
									"src": "4899:420:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 130,
							"src": "1598:3723:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "199:5123:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/TransientSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/TransientSlot.sol",
					"exportedSymbols": {
						"TransientSlot": [
							328
						]
					},
					"id": 329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "197:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransientSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "223:939:1",
								"text": " @dev Library for reading and writing value-types to specific transient storage slots.\n Transient slots are often used to store temporary values that are removed after the current transaction.\n This library helps with reading and writing to such slots without the need for inline assembly.\n  * Example reading and writing values using transient storage:\n ```solidity\n contract Lock {\n     using TransientSlot for *;\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;\n     modifier locked() {\n         require(!_LOCK_SLOT.asBoolean().tload());\n         _LOCK_SLOT.asBoolean().tstore(true);\n         _;\n         _LOCK_SLOT.asBoolean().tstore(false);\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 328,
							"linearizedBaseContracts": [
								328
							],
							"name": "TransientSlot",
							"nameLocation": "1171:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "TransientSlot.AddressSlot",
									"id": 134,
									"name": "AddressSlot",
									"nameLocation": "1270:11:1",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "1265:28:1",
									"underlyingType": {
										"id": 133,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1285:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1437:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1471:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 143,
															"name": "AddressSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1454:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_AddressSlot_$134_$",
																"typeString": "type(TransientSlot.AddressSlot)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1466:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1454:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlot_$134_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.AddressSlot)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
														"typeString": "TransientSlot.AddressSlot"
													}
												},
												"functionReturnParameters": 142,
												"id": 147,
												"nodeType": "Return",
												"src": "1447:29:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1299:64:1",
										"text": " @dev Cast an arbitrary slot to a AddressSlot."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asAddress",
									"nameLocation": "1377:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1395:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1387:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:14:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1424:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
													"typeString": "TransientSlot.AddressSlot"
												},
												"typeName": {
													"id": 140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 139,
														"name": "AddressSlot",
														"nameLocations": [
															"1424:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 134,
														"src": "1424:11:1"
													},
													"referencedDeclaration": 134,
													"src": "1424:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
														"typeString": "TransientSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:13:1"
									},
									"scope": 328,
									"src": "1368:115:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "TransientSlot.BooleanSlot",
									"id": 151,
									"name": "BooleanSlot",
									"nameLocation": "1565:11:1",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "1560:28:1",
									"underlyingType": {
										"id": 150,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1580:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1732:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 160,
															"name": "BooleanSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1749:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_BooleanSlot_$151_$",
																"typeString": "type(TransientSlot.BooleanSlot)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1761:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1749:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlot_$151_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.BooleanSlot)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"functionReturnParameters": 159,
												"id": 164,
												"nodeType": "Return",
												"src": "1742:29:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1594:64:1",
										"text": " @dev Cast an arbitrary slot to a BooleanSlot."
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asBoolean",
									"nameLocation": "1672:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1690:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1682:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:14:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1719:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
													"typeString": "TransientSlot.BooleanSlot"
												},
												"typeName": {
													"id": 157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 156,
														"name": "BooleanSlot",
														"nameLocations": [
															"1719:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 151,
														"src": "1719:11:1"
													},
													"referencedDeclaration": 151,
													"src": "1719:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1718:13:1"
									},
									"scope": 328,
									"src": "1663:115:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "TransientSlot.Bytes32Slot",
									"id": 168,
									"name": "Bytes32Slot",
									"nameLocation": "1863:11:1",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "1858:28:1",
									"underlyingType": {
										"id": 167,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1878:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2030:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2064:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 177,
															"name": "Bytes32Slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2047:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Bytes32Slot_$168_$",
																"typeString": "type(TransientSlot.Bytes32Slot)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2059:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "2047:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Bytes32Slot_$168_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.Bytes32Slot)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2047:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
														"typeString": "TransientSlot.Bytes32Slot"
													}
												},
												"functionReturnParameters": 176,
												"id": 181,
												"nodeType": "Return",
												"src": "2040:29:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1892:64:1",
										"text": " @dev Cast an arbitrary slot to a Bytes32Slot."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes32",
									"nameLocation": "1970:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1988:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1980:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 170,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:14:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2017:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
													"typeString": "TransientSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2017:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "2017:11:1"
													},
													"referencedDeclaration": 168,
													"src": "2017:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
														"typeString": "TransientSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:13:1"
									},
									"scope": 328,
									"src": "1961:115:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "TransientSlot.Uint256Slot",
									"id": 185,
									"name": "Uint256Slot",
									"nameLocation": "2161:11:1",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "2156:28:1",
									"underlyingType": {
										"id": 184,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2176:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2328:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 196,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2362:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 194,
															"name": "Uint256Slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2345:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Uint256Slot_$185_$",
																"typeString": "type(TransientSlot.Uint256Slot)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2357:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "2345:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256Slot_$185_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.Uint256Slot)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
														"typeString": "TransientSlot.Uint256Slot"
													}
												},
												"functionReturnParameters": 193,
												"id": 198,
												"nodeType": "Return",
												"src": "2338:29:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2190:64:1",
										"text": " @dev Cast an arbitrary slot to a Uint256Slot."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asUint256",
									"nameLocation": "2268:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2286:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2278:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:14:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2315:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
													"typeString": "TransientSlot.Uint256Slot"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "Uint256Slot",
														"nameLocations": [
															"2315:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "2315:11:1"
													},
													"referencedDeclaration": 185,
													"src": "2315:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
														"typeString": "TransientSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:13:1"
									},
									"scope": 328,
									"src": "2259:115:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "TransientSlot.Int256Slot",
									"id": 202,
									"name": "Int256Slot",
									"nameLocation": "2458:10:1",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "2453:27:1",
									"underlyingType": {
										"id": 201,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2472:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2621:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2654:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 211,
															"name": "Int256Slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2638:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Int256Slot_$202_$",
																"typeString": "type(TransientSlot.Int256Slot)"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2649:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "2638:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Int256Slot_$202_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.Int256Slot)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
														"typeString": "TransientSlot.Int256Slot"
													}
												},
												"functionReturnParameters": 210,
												"id": 215,
												"nodeType": "Return",
												"src": "2631:28:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2486:63:1",
										"text": " @dev Cast an arbitrary slot to a Int256Slot."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asInt256",
									"nameLocation": "2563:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2572:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2609:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
													"typeString": "TransientSlot.Int256Slot"
												},
												"typeName": {
													"id": 208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 207,
														"name": "Int256Slot",
														"nameLocations": [
															"2609:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 202,
														"src": "2609:10:1"
													},
													"referencedDeclaration": 202,
													"src": "2609:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
														"typeString": "TransientSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:12:1"
									},
									"scope": 328,
									"src": "2554:112:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2832:85:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2867:44:1",
													"nodeType": "YulBlock",
													"src": "2867:44:1",
													"statements": [
														{
															"nativeSrc": "2881:20:1",
															"nodeType": "YulAssignment",
															"src": "2881:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2896:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2896:4:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "2890:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2890:5:1"
																},
																"nativeSrc": "2890:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2890:11:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2881:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2881:5:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 221,
														"isOffset": false,
														"isSlot": false,
														"src": "2896:4:1",
														"valueSize": 1
													},
													{
														"declaration": 224,
														"isOffset": false,
														"isSlot": false,
														"src": "2881:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 226,
												"nodeType": "InlineAssembly",
												"src": "2842:69:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2672:84:1",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "2770:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2788:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2776:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
													"typeString": "TransientSlot.AddressSlot"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "AddressSlot",
														"nameLocations": [
															"2776:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 134,
														"src": "2776:11:1"
													},
													"referencedDeclaration": 134,
													"src": "2776:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
														"typeString": "TransientSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:18:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2825:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2817:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:15:1"
									},
									"scope": 328,
									"src": "2761:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3064:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3099:43:1",
													"nodeType": "YulBlock",
													"src": "3099:43:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3120:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3120:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3126:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3126:5:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "3113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																},
																"nativeSrc": "3113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3113:19:1"
															},
															"nativeSrc": "3113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3113:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 232,
														"isOffset": false,
														"isSlot": false,
														"src": "3120:4:1",
														"valueSize": 1
													},
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "3126:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 237,
												"nodeType": "InlineAssembly",
												"src": "3074:68:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2923:78:1",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "3015:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3034:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3022:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
													"typeString": "TransientSlot.AddressSlot"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "AddressSlot",
														"nameLocations": [
															"3022:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 134,
														"src": "3022:11:1"
													},
													"referencedDeclaration": 134,
													"src": "3022:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlot_$134",
														"typeString": "TransientSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3048:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:33:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3064:0:1"
									},
									"scope": 328,
									"src": "3006:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "3311:85:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3346:44:1",
													"nodeType": "YulBlock",
													"src": "3346:44:1",
													"statements": [
														{
															"nativeSrc": "3360:20:1",
															"nodeType": "YulAssignment",
															"src": "3360:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3375:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3375:4:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "3369:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3369:5:1"
																},
																"nativeSrc": "3369:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3369:11:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3360:5:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 243,
														"isOffset": false,
														"isSlot": false,
														"src": "3375:4:1",
														"valueSize": 1
													},
													{
														"declaration": 246,
														"isOffset": false,
														"isSlot": false,
														"src": "3360:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 248,
												"nodeType": "InlineAssembly",
												"src": "3321:69:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3154:84:1",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "3252:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
													"typeString": "TransientSlot.BooleanSlot"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "BooleanSlot",
														"nameLocations": [
															"3258:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 151,
														"src": "3258:11:1"
													},
													"referencedDeclaration": 151,
													"src": "3258:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3257:18:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3299:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3299:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:12:1"
									},
									"scope": 328,
									"src": "3243:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3540:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:43:1",
													"nodeType": "YulBlock",
													"src": "3575:43:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3596:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3596:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3602:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3602:5:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "3589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:1"
																},
																"nativeSrc": "3589:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3589:19:1"
															},
															"nativeSrc": "3589:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3589:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "3596:4:1",
														"valueSize": 1
													},
													{
														"declaration": 256,
														"isOffset": false,
														"isSlot": false,
														"src": "3602:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 259,
												"nodeType": "InlineAssembly",
												"src": "3550:68:1"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "3402:78:1",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3513:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3501:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
													"typeString": "TransientSlot.BooleanSlot"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "BooleanSlot",
														"nameLocations": [
															"3501:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 151,
														"src": "3501:11:1"
													},
													"referencedDeclaration": 151,
													"src": "3501:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3524:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3519:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3519:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:30:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3540:0:1"
									},
									"scope": 328,
									"src": "3485:139:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3790:85:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3825:44:1",
													"nodeType": "YulBlock",
													"src": "3825:44:1",
													"statements": [
														{
															"nativeSrc": "3839:20:1",
															"nodeType": "YulAssignment",
															"src": "3839:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3854:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3854:4:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "3848:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3848:5:1"
																},
																"nativeSrc": "3848:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3848:11:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3839:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3839:5:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "3854:4:1",
														"valueSize": 1
													},
													{
														"declaration": 268,
														"isOffset": false,
														"isSlot": false,
														"src": "3839:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 270,
												"nodeType": "InlineAssembly",
												"src": "3800:69:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3630:84:1",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "3728:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3746:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3734:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
													"typeString": "TransientSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "Bytes32Slot",
														"nameLocations": [
															"3734:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "3734:11:1"
													},
													"referencedDeclaration": 168,
													"src": "3734:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
														"typeString": "TransientSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:18:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3783:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3775:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:15:1"
									},
									"scope": 328,
									"src": "3719:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "4022:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4057:43:1",
													"nodeType": "YulBlock",
													"src": "4057:43:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4078:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4084:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4084:5:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "4071:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4071:6:1"
																},
																"nativeSrc": "4071:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4071:19:1"
															},
															"nativeSrc": "4071:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4071:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "4078:4:1",
														"valueSize": 1
													},
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "4084:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 281,
												"nodeType": "InlineAssembly",
												"src": "4032:68:1"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3881:78:1",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "3973:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3992:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3980:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
													"typeString": "TransientSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 274,
														"name": "Bytes32Slot",
														"nameLocations": [
															"3980:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "3980:11:1"
													},
													"referencedDeclaration": 168,
													"src": "3980:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32Slot_$168",
														"typeString": "TransientSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3998:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:33:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4022:0:1"
									},
									"scope": 328,
									"src": "3964:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4272:85:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4307:44:1",
													"nodeType": "YulBlock",
													"src": "4307:44:1",
													"statements": [
														{
															"nativeSrc": "4321:20:1",
															"nodeType": "YulAssignment",
															"src": "4321:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4336:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4336:4:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "4330:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4330:5:1"
																},
																"nativeSrc": "4330:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4330:11:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4321:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4321:5:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:4:1",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "4321:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 292,
												"nodeType": "InlineAssembly",
												"src": "4282:69:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4112:84:1",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "4210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4228:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4216:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
													"typeString": "TransientSlot.Uint256Slot"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "Uint256Slot",
														"nameLocations": [
															"4216:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "4216:11:1"
													},
													"referencedDeclaration": 185,
													"src": "4216:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
														"typeString": "TransientSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:18:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4265:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4257:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:15:1"
									},
									"scope": 328,
									"src": "4201:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "4504:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4539:43:1",
													"nodeType": "YulBlock",
													"src": "4539:43:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4560:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4560:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4566:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4566:5:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "4553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:1"
																},
																"nativeSrc": "4553:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4553:19:1"
															},
															"nativeSrc": "4553:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4553:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "4560:4:1",
														"valueSize": 1
													},
													{
														"declaration": 300,
														"isOffset": false,
														"isSlot": false,
														"src": "4566:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 303,
												"nodeType": "InlineAssembly",
												"src": "4514:68:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4363:78:1",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "4455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4474:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4462:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
													"typeString": "TransientSlot.Uint256Slot"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "Uint256Slot",
														"nameLocations": [
															"4462:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "4462:11:1"
													},
													"referencedDeclaration": 185,
													"src": "4462:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256Slot_$185",
														"typeString": "TransientSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4488:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:33:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4504:0:1"
									},
									"scope": 328,
									"src": "4446:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4752:85:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4787:44:1",
													"nodeType": "YulBlock",
													"src": "4787:44:1",
													"statements": [
														{
															"nativeSrc": "4801:20:1",
															"nodeType": "YulAssignment",
															"src": "4801:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4816:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4816:4:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "4810:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4810:5:1"
																},
																"nativeSrc": "4810:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4810:11:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4801:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4801:5:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 309,
														"isOffset": false,
														"isSlot": false,
														"src": "4816:4:1",
														"valueSize": 1
													},
													{
														"declaration": 312,
														"isOffset": false,
														"isSlot": false,
														"src": "4801:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 314,
												"nodeType": "InlineAssembly",
												"src": "4762:69:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "4594:84:1",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "4692:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
													"typeString": "TransientSlot.Int256Slot"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "Int256Slot",
														"nameLocations": [
															"4698:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 202,
														"src": "4698:10:1"
													},
													"referencedDeclaration": 202,
													"src": "4698:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
														"typeString": "TransientSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:17:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4738:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 311,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4738:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4737:14:1"
									},
									"scope": 328,
									"src": "4683:154:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4982:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5017:43:1",
													"nodeType": "YulBlock",
													"src": "5017:43:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5038:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5044:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5044:5:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "5031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:1"
																},
																"nativeSrc": "5031:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5031:19:1"
															},
															"nativeSrc": "5031:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "5031:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 320,
														"isOffset": false,
														"isSlot": false,
														"src": "5038:4:1",
														"valueSize": 1
													},
													{
														"declaration": 322,
														"isOffset": false,
														"isSlot": false,
														"src": "5044:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 325,
												"nodeType": "InlineAssembly",
												"src": "4992:68:1"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "4843:78:1",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "4935:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4953:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4942:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
													"typeString": "TransientSlot.Int256Slot"
												},
												"typeName": {
													"id": 319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 318,
														"name": "Int256Slot",
														"nameLocations": [
															"4942:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 202,
														"src": "4942:10:1"
													},
													"referencedDeclaration": 202,
													"src": "4942:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256Slot_$202",
														"typeString": "TransientSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4966:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4959:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 321,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4959:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4941:31:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4982:0:1"
									},
									"scope": 328,
									"src": "4926:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 329,
							"src": "1163:3905:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "197:4872:1"
				},
				"id": 1
			},
			"contracts/utils/AbstractNonReentrantLockTransient.sol": {
				"ast": {
					"absolutePath": "contracts/utils/AbstractNonReentrantLockTransient.sol",
					"exportedSymbols": {
						"AbstractNonReentrantLockTransient": [
							385
						],
						"NonReentrantLockTransient": [
							630
						],
						"SlotDerivation": [
							129
						],
						"TransientSlot": [
							328
						]
					},
					"id": 386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/utils/NonReentrantLockTransient.sol",
							"file": "contracts/utils/NonReentrantLockTransient.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 631,
							"src": "57:55:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "AbstractNonReentrantLockTransient",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 332,
								"nodeType": "StructuredDocumentation",
								"src": "114:1193:2",
								"text": " @title NonReentrantLockTransient\n @dev Abstract contract that provides reentrancy protection using transient storage (EIP-1153).\n \n This module helps prevent reentrant calls by leveraging transient storage, \n which automatically resets at the end of a transaction, reducing gas costs.\n \n The {nonReentrantLock} modifier applies a default lock to functions, while \n {nonReentrantcustomizeLock} allows for custom, fine-grained locks using unique seeds.\n \n Inheriting from `NonReentrantLockTransient` will make these modifiers available.\n Example usage:\n ```solidity\n contract MyContract is NonReentrantLockTransient {\n     uint256 private _balance;\n \n     // Default reentrancy lock for simple functions\n     function deposit() external nonReentrantLock {\n         _balance += 1;\n     }\n \n     // Custom lock for more granular reentrancy protection\n     function withdraw() external nonReentrantcustomizeLock(\"withdraw.lock\") {\n         require(_balance > 0, \"Insufficient balance\");\n         _balance -= 1;\n     }\n }\n ```\n \n TIP: Use transient storage for efficient reentrancy protection, especially in complex transactions."
							},
							"fullyImplemented": true,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "AbstractNonReentrantLockTransient",
							"nameLocation": "1326:33:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 334,
									"libraryName": {
										"id": 333,
										"name": "NonReentrantLockTransient",
										"nameLocations": [
											"1372:25:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1372:25:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1366:38:2"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "1513:164:2",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "lock",
														"nameLocation": "1573:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "1523:54:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
															"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
														},
														"typeName": {
															"id": 340,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 339,
																"name": "NonReentrantLockTransient.NonReentrantLock",
																"nameLocations": [
																	"1523:25:2",
																	"1549:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 417,
																"src": "1523:42:2"
															},
															"referencedDeclaration": 417,
															"src": "1523:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 342,
															"name": "NonReentrantLockTransient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "1580:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_NonReentrantLockTransient_$630_$",
																"typeString": "type(library NonReentrantLockTransient)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1606:7:2",
														"memberName": "getLock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "1580:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function () view returns (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1523:92:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 346,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1625:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:4:2",
														"memberName": "lock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 513,
														"src": "1625:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$__$attached_to$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "1625:11:2"
											},
											{
												"id": 351,
												"nodeType": "PlaceholderStatement",
												"src": "1646:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 352,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1657:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1662:6:2",
														"memberName": "unlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "1657:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$__$attached_to$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1657:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1410:70:2",
										"text": " @dev Prevents reentrant calls using a default lock."
									},
									"id": 358,
									"name": "nonReentrantLock",
									"nameLocation": "1494:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:2"
									},
									"src": "1485:192:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1888:143:2",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "lock",
														"nameLocation": "1948:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "1898:54:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
															"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
														},
														"typeName": {
															"id": 366,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 365,
																"name": "NonReentrantLockTransient.NonReentrantLock",
																"nameLocations": [
																	"1898:25:2",
																	"1924:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 417,
																"src": "1898:42:2"
															},
															"referencedDeclaration": 417,
															"src": "1898:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 368,
															"name": "seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1955:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1960:7:2",
														"memberName": "getLock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 460,
														"src": "1955:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_NonReentrantLock_$417_memory_ptr_$attached_to$_t_string_memory_ptr_$",
															"typeString": "function (string memory) view returns (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1898:71:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 372,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "1979:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1984:4:2",
														"memberName": "lock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 513,
														"src": "1979:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$__$attached_to$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1979:11:2"
											},
											{
												"id": 377,
												"nodeType": "PlaceholderStatement",
												"src": "2000:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 378,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "2011:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2016:6:2",
														"memberName": "unlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "2011:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$__$attached_to$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2011:13:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1683:145:2",
										"text": " @dev Allows custom reentrancy locks by specifying a unique seed.\n @param seed The unique identifier for the custom lock."
									},
									"id": 384,
									"name": "nonReentrantcustomizeLock",
									"nameLocation": "1842:25:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "1882:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1868:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1868:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:20:2"
									},
									"src": "1833:198:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "1308:725:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2001:2"
				},
				"id": 2
			},
			"contracts/utils/NonReentrantLockTransient.sol": {
				"ast": {
					"absolutePath": "contracts/utils/NonReentrantLockTransient.sol",
					"exportedSymbols": {
						"NonReentrantLockTransient": [
							630
						],
						"SlotDerivation": [
							129
						],
						"TransientSlot": [
							328
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
							"file": "@openzeppelin/contracts/utils/SlotDerivation.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 130,
							"src": "57:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/TransientSlot.sol",
							"file": "@openzeppelin/contracts/utils/TransientSlot.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 329,
							"src": "116:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NonReentrantLockTransient",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 390,
								"nodeType": "StructuredDocumentation",
								"src": "174:955:3",
								"text": " @title NonReentrantLockTransient\n @dev Library for managing transient reentrancy locks using EIP-1153 transient storage.\n \n Provides functions to acquire, release, and customize locks. Locks are automatically \n reset at the end of transactions, ensuring safe use even in multi-call scenarios.\n \n Key Functions:\n - `getLock()`: Retrieves the default lock.\n - `getLock(string memory seed)`: Retrieves a custom lock based on a unique seed.\n - `lock()` & `unlock()`: Acquire and release locks, reverting on failure.\n - `tryLock()` & `tryUnlock()`: Non-reverting lock functions returning success status.\n Example usage:\n ```solidity\n function criticalOperation() external {\n    // NonReentrantLockTransient.getLock() also can get a default lock\n    NonReentrantLockTransient.NonReentrantLock memory lock = \"critical.lock\".getLock();\n    lock.lock(); \n    // Critical section code\n    lock.unlock();\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "NonReentrantLockTransient",
							"nameLocation": "1138:25:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 392,
									"libraryName": {
										"id": 391,
										"name": "SlotDerivation",
										"nameLocations": [
											"1176:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "1176:14:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1170:27:3"
								},
								{
									"global": false,
									"id": 394,
									"libraryName": {
										"id": 393,
										"name": "TransientSlot",
										"nameLocations": [
											"1208:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 328,
										"src": "1208:13:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1202:26:3"
								},
								{
									"errorSelector": "0f538feb",
									"id": 398,
									"name": "GetLockFailure",
									"nameLocation": "1240:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "slotSeed",
												"nameLocation": "1262:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1255:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1255:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:17:3"
									},
									"src": "1234:38:3"
								},
								{
									"errorSelector": "0b8b113e",
									"id": 402,
									"name": "AcquireLockFailure",
									"nameLocation": "1283:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "slotSeed",
												"nameLocation": "1309:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1302:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:17:3"
									},
									"src": "1277:42:3"
								},
								{
									"errorSelector": "d036eb5b",
									"id": 406,
									"name": "UnlockFailure",
									"nameLocation": "1330:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "slotSeed",
												"nameLocation": "1351:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1344:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1344:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:17:3"
									},
									"src": "1324:37:3"
								},
								{
									"constant": true,
									"functionSelector": "1516f08e",
									"id": 409,
									"mutability": "constant",
									"name": "ERC7201_NAMESPACE",
									"nameLocation": "1390:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1367:80:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 407,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1367:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e4e616d657370616365",
										"id": 408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1410:37:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_78bd68c7aad5ccee14efdb1ff7a7cc09b75c500c33c172544d24c92d311e0b5b",
											"typeString": "literal_string \"NonReentrantLockTransient.Namespace\""
										},
										"value": "NonReentrantLockTransient.Namespace"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 412,
									"mutability": "constant",
									"name": "DEFAULT_LOCK_SEED",
									"nameLocation": "1477:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1453:84:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 410,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1453:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4e6f6e5265656e7472616e744c6f636b5472616e7369656e742e64656661756c742e6c6f636b",
										"id": 411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1497:40:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_faacc88369d312f0551ab55116e7b939a3b994008b4cbf5dd194662a45dfd0c7",
											"typeString": "literal_string \"NonReentrantLockTransient.default.lock\""
										},
										"value": "NonReentrantLockTransient.default.lock"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NonReentrantLockTransient.NonReentrantLock",
									"id": 417,
									"members": [
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "_SLOT_SEED",
											"nameLocation": "1585:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 417,
											"src": "1578:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 413,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1578:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 416,
											"mutability": "mutable",
											"name": "_LOCK_SLOT",
											"nameLocation": "1613:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 417,
											"src": "1605:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 415,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1605:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NonReentrantLock",
									"nameLocation": "1551:16:3",
									"nodeType": "StructDefinition",
									"scope": 630,
									"src": "1544:86:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "1829:113:3",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "1847:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "1839:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 424,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1839:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 426,
															"name": "DEFAULT_LOCK_SEED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1854:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1872:11:3",
														"memberName": "erc7201Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "1854:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1854:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1839:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "DEFAULT_LOCK_SEED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1911:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 432,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "1930:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 430,
														"name": "_getLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1902:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_bytes32_$returns$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (string memory,bytes32) view returns (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 434,
												"nodeType": "Return",
												"src": "1895:40:3"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1636:121:3",
										"text": " @dev Retrieves the default lock.\n Reverts with {GetLockFailure} if the lock is already acquired."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLock",
									"nameLocation": "1771:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:2:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1804:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "NonReentrantLock",
														"nameLocations": [
															"1804:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "1804:16:3"
													},
													"referencedDeclaration": 417,
													"src": "1804:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:25:3"
									},
									"scope": 630,
									"src": "1762:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "2253:128:3",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2271:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "2263:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 445,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2263:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [
														{
															"id": 451,
															"name": "slotSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2324:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 447,
																	"name": "ERC7201_NAMESPACE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "2278:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2296:11:3",
																"memberName": "erc7201Slot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 12,
																"src": "2278:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2278:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2310:13:3",
														"memberName": "deriveMapping",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "2278:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,string memory) pure returns (bytes32)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2263:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "slotSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2359:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 456,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2369:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 454,
														"name": "_getLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "2350:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_bytes32_$returns$_t_struct$_NonReentrantLock_$417_memory_ptr_$",
															"typeString": "function (string memory,bytes32) view returns (struct NonReentrantLockTransient.NonReentrantLock memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
													}
												},
												"functionReturnParameters": 444,
												"id": 458,
												"nodeType": "Return",
												"src": "2343:31:3"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1948:211:3",
										"text": " @dev Retrieves a custom lock based on the provided seed.\n @param slotSeed The unique identifier for the custom lock.\n Reverts with {GetLockFailure} if the lock is already acquired."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLock",
									"nameLocation": "2173:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "slotSeed",
												"nameLocation": "2195:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2181:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2181:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:24:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2228:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "NonReentrantLock",
														"nameLocations": [
															"2228:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "2228:16:3"
													},
													"referencedDeclaration": 417,
													"src": "2228:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:25:3"
									},
									"scope": 630,
									"src": "2164:217:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "2490:206:3",
										"statements": [
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "boolSlot",
														"nameLocation": "2526:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "2500:34:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
															"typeString": "TransientSlot.BooleanSlot"
														},
														"typeName": {
															"id": 473,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 472,
																"name": "TransientSlot.BooleanSlot",
																"nameLocations": [
																	"2500:13:3",
																	"2514:11:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 151,
																"src": "2500:25:3"
															},
															"referencedDeclaration": 151,
															"src": "2500:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 475,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2537:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2542:9:3",
														"memberName": "asBoolean",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "2537:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlot_$151_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.BooleanSlot)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2500:53:3"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 479,
															"name": "boolSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2567:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2576:5:3",
														"memberName": "tload",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "2567:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_BooleanSlot_$151_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlot_$151_$",
															"typeString": "function (TransientSlot.BooleanSlot) view returns (bool)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2567:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "2563:78:3",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "2585:56:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "slotSeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "2621:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"name": "GetLockFailure",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2606:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2606:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 485,
															"nodeType": "RevertStatement",
															"src": "2599:31:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "slotSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2674:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 490,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2684:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 488,
														"name": "NonReentrantLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2657:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_NonReentrantLock_$417_storage_ptr_$",
															"typeString": "type(struct NonReentrantLockTransient.NonReentrantLock storage pointer)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 492,
												"nodeType": "Return",
												"src": "2650:39:3"
											}
										]
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLock",
									"nameLocation": "2396:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "slotSeed",
												"nameLocation": "2419:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2405:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 463,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:38:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2465:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 466,
														"name": "NonReentrantLock",
														"nameLocations": [
															"2465:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "2465:16:3"
													},
													"referencedDeclaration": 417,
													"src": "2465:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:25:3"
									},
									"scope": 630,
									"src": "2387:309:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2873:109:3",
										"statements": [
											{
												"condition": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2887:19:3",
													"subExpression": {
														"arguments": [
															{
																"id": 502,
																"name": "_lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2900:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															],
															"id": 501,
															"name": "_tryAcquire",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "2888:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory) returns (bool)"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2888:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "2883:93:3",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "2908:68:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 506,
																			"name": "_lock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "2948:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																				"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2954:10:3",
																		"memberName": "_SLOT_SEED",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "2948:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 505,
																	"name": "AcquireLockFailure",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2929:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2929:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 509,
															"nodeType": "RevertStatement",
															"src": "2922:43:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2702:112:3",
										"text": " @dev Acquires the lock.\n Reverts with {AcquireLockFailure} if the lock is already held."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nameLocation": "2828:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "2857:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2833:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 497,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 496,
														"name": "NonReentrantLock",
														"nameLocations": [
															"2833:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "2833:16:3"
													},
													"referencedDeclaration": 417,
													"src": "2833:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:31:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2873:0:3"
									},
									"scope": 630,
									"src": "2819:163:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3162:104:3",
										"statements": [
											{
												"condition": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3176:19:3",
													"subExpression": {
														"arguments": [
															{
																"id": 521,
																"name": "_lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "3189:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															],
															"id": 520,
															"name": "_tryRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "3177:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory) returns (bool)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3177:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "3172:88:3",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "3197:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 525,
																			"name": "_lock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "3232:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																				"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3238:10:3",
																		"memberName": "_SLOT_SEED",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "3232:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 524,
																	"name": "UnlockFailure",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "3218:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3218:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 528,
															"nodeType": "RevertStatement",
															"src": "3211:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2988:113:3",
										"text": " @dev Releases the lock.\n Reverts with {UnlockFailure} if the lock is not currently held."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nameLocation": "3115:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "3146:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3122:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "NonReentrantLock",
														"nameLocations": [
															"3122:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "3122:16:3"
													},
													"referencedDeclaration": 417,
													"src": "3122:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:31:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:0:3"
									},
									"scope": 630,
									"src": "3106:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "3491:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "_lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3520:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														],
														"id": 541,
														"name": "_tryAcquire",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3508:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory) returns (bool)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3508:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 540,
												"id": 544,
												"nodeType": "Return",
												"src": "3501:25:3"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3272:142:3",
										"text": " @dev Attempts to acquire the lock without reverting.\n @return success `true` if lock was acquired, `false` otherwise."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryLock",
									"nameLocation": "3428:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "3460:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3436:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 535,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 534,
														"name": "NonReentrantLock",
														"nameLocations": [
															"3436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "3436:16:3"
													},
													"referencedDeclaration": 417,
													"src": "3436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:31:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3485:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3485:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:6:3"
									},
									"scope": 630,
									"src": "3419:114:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3760:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "_lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3789:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
															}
														],
														"id": 555,
														"name": "_tryRelease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "3777:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NonReentrantLock_$417_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (struct NonReentrantLockTransient.NonReentrantLock memory) returns (bool)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 554,
												"id": 558,
												"nodeType": "Return",
												"src": "3770:25:3"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "3539:142:3",
										"text": " @dev Attempts to release the lock without reverting.\n @return success `true` if lock was released, `false` otherwise."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryUnlock",
									"nameLocation": "3695:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "3729:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3705:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 548,
														"name": "NonReentrantLock",
														"nameLocations": [
															"3705:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "3705:16:3"
													},
													"referencedDeclaration": 417,
													"src": "3705:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:31:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3754:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3754:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:6:3"
									},
									"scope": 630,
									"src": "3686:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3883:202:3",
										"statements": [
											{
												"assignments": [
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "boolSlot",
														"nameLocation": "3919:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "3893:34:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
															"typeString": "TransientSlot.BooleanSlot"
														},
														"typeName": {
															"id": 571,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 570,
																"name": "TransientSlot.BooleanSlot",
																"nameLocations": [
																	"3893:13:3",
																	"3907:11:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 151,
																"src": "3893:25:3"
															},
															"referencedDeclaration": 151,
															"src": "3893:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 573,
																"name": "_lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "3930:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3936:10:3",
															"memberName": "_LOCK_SLOT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 416,
															"src": "3930:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3947:9:3",
														"memberName": "asBoolean",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "3930:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlot_$151_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.BooleanSlot)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3893:65:3"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 578,
															"name": "boolSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3972:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3981:5:3",
														"memberName": "tload",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "3972:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_BooleanSlot_$151_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlot_$151_$",
															"typeString": "function (TransientSlot.BooleanSlot) view returns (bool)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3972:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "3968:59:3",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "3990:37:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4011:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 567,
															"id": 582,
															"nodeType": "Return",
															"src": "4004:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4052:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 585,
															"name": "boolSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4036:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4045:6:3",
														"memberName": "tstore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "4036:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlot_$151_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlot_$151_$",
															"typeString": "function (TransientSlot.BooleanSlot,bool)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "4036:21:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4074:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 592,
												"nodeType": "Return",
												"src": "4067:11:3"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryAcquire",
									"nameLocation": "3817:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "3853:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3829:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 561,
														"name": "NonReentrantLock",
														"nameLocations": [
															"3829:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "3829:16:3"
													},
													"referencedDeclaration": 417,
													"src": "3829:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:31:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3877:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3877:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:6:3"
									},
									"scope": 630,
									"src": "3808:277:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "4166:204:3",
										"statements": [
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "boolSlot",
														"nameLocation": "4202:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "4176:34:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
															"typeString": "TransientSlot.BooleanSlot"
														},
														"typeName": {
															"id": 605,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 604,
																"name": "TransientSlot.BooleanSlot",
																"nameLocations": [
																	"4176:13:3",
																	"4190:11:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 151,
																"src": "4176:25:3"
															},
															"referencedDeclaration": 151,
															"src": "4176:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 607,
																"name": "_lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "4213:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
																	"typeString": "struct NonReentrantLockTransient.NonReentrantLock memory"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4219:10:3",
															"memberName": "_LOCK_SLOT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 416,
															"src": "4213:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4230:9:3",
														"memberName": "asBoolean",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "4213:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlot_$151_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (TransientSlot.BooleanSlot)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4213:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
														"typeString": "TransientSlot.BooleanSlot"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4176:65:3"
											},
											{
												"condition": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4255:17:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 612,
																"name": "boolSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "4256:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																	"typeString": "TransientSlot.BooleanSlot"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4265:5:3",
															"memberName": "tload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 250,
															"src": "4256:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_BooleanSlot_$151_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlot_$151_$",
																"typeString": "function (TransientSlot.BooleanSlot) view returns (bool)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4256:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "4251:60:3",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "4274:37:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4295:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 601,
															"id": 617,
															"nodeType": "Return",
															"src": "4288:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "66616c7365",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 620,
															"name": "boolSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4320:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BooleanSlot_$151",
																"typeString": "TransientSlot.BooleanSlot"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4329:6:3",
														"memberName": "tstore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "4320:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlot_$151_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlot_$151_$",
															"typeString": "function (TransientSlot.BooleanSlot,bool)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "4320:22:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4359:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 601,
												"id": 627,
												"nodeType": "Return",
												"src": "4352:11:3"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryRelease",
									"nameLocation": "4100:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_lock",
												"nameLocation": "4136:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4112:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NonReentrantLock_$417_memory_ptr",
													"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
												},
												"typeName": {
													"id": 596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 595,
														"name": "NonReentrantLock",
														"nameLocations": [
															"4112:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 417,
														"src": "4112:16:3"
													},
													"referencedDeclaration": 417,
													"src": "4112:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NonReentrantLock_$417_storage_ptr",
														"typeString": "struct NonReentrantLockTransient.NonReentrantLock"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:31:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4160:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4160:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:6:3"
									},
									"scope": 630,
									"src": "4091:279:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "1130:3242:3",
							"usedErrors": [
								398,
								402,
								406
							],
							"usedEvents": []
						}
					],
					"src": "32:4340:3"
				},
				"id": 3
			}
		}
	}
}