{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122053a4c30f7914c6560ded133a4df1de9a0f58443629d715118bafe598b9dd9fa064736f6c634300081a0033",
			"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 LOG4 0xC3 0xF PUSH26 0x14C6560DED133A4DF1DE9A0F58443629D715118BAFE598B9DD9F LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
			"sourceMap": "460:6706:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122053a4c30f7914c6560ded133a4df1de9a0f58443629d715118bafe598b9dd9fa064736f6c634300081a0033",
			"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 LOG4 0xC3 0xF PUSH26 0x14C6560DED133A4DF1DE9A0F58443629D715118BAFE598B9DD9F LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
			"sourceMap": "460:6706:3:-:0;;;;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "17000",
				"executionCost": "92",
				"totalCost": "17092"
			},
			"internal": {
				"_concat(string memory,string memory)": "infinite",
				"_getAddressSlot(bytes32,bytes4)": "infinite",
				"_getAddressToFacetMap(bytes32)": "infinite",
				"at(struct DiamondStroage.AddressToFacetMap storage pointer,uint256)": "infinite",
				"computeIfAbsent(struct DiamondStroage.AddressToFacetMap storage pointer,address)": "infinite",
				"contains(struct DiamondStroage.AddressToFacetMap storage pointer,address)": "infinite",
				"get(DiamondStroage.Bytes4ToAddressMap,bytes4)": "infinite",
				"get(struct DiamondStroage.AddressToFacetMap storage pointer,address)": "infinite",
				"getAddressToFacetMap(string memory)": "infinite",
				"getBytes4ToAddressMap(string memory)": "infinite",
				"keys(struct DiamondStroage.AddressToFacetMap storage pointer)": "infinite",
				"length(struct DiamondStroage.AddressToFacetMap storage pointer)": "infinite",
				"remove(DiamondStroage.Bytes4ToAddressMap,bytes4)": "infinite",
				"remove(struct DiamondStroage.AddressToFacetMap storage pointer,address)": "infinite",
				"set(DiamondStroage.Bytes4ToAddressMap,bytes4,address)": "infinite",
				"set(struct DiamondStroage.AddressToFacetMap storage pointer,address,struct DiamondStroage.DiamondFacet memory)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "key",
					"type": "address"
				},
				{
					"components": [
						{
							"internalType": "bytes4[]",
							"name": "functionSelectors",
							"type": "bytes4[]"
						}
					],
					"internalType": "struct DiamondStroage.DiamondFacet",
					"name": "value",
					"type": "tuple"
				}
			],
			"name": "AddressKeyZero",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "key",
					"type": "address"
				}
			],
			"name": "AddressToFacetMapNonexistentKey",
			"type": "error"
		}
	]
}