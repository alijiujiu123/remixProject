{
	"id": "56ecc3d61c41248a8983f03584c8d8fe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// 去中心化交易所DEX\n// 恒定乘积自动做市商（Constant Product Automated Market Maker, CPAMM）\ncontract SimpleSwap is ERC20 {\n    // 事件\n    // 流动性提供(铸币LP)事件\n    event LiquidityAdded(address indexed liquidityProvider, uint256 token0Amount, uint256 token1Amount, uint256 liquidity);\n    // 移除流动性(销毁LP)事件\n    event LiquidityRemoved(address indexed liquidityProvider, uint256 liquidity, uint256 token0Amount, uint256 token1Amount);\n    // 交易成功事件\n    event SwapSuccess(address indexed tokenIn, uint256 amountIn, address indexed tokenOut, uint256 amountOut);\n\n    // 异常\n    // swap出币小于规定最小值\n    error SwapAmountLessThanOutMin();\n\n    // 代币合约\n    IERC20 public token0;\n    IERC20 public token1;\n    // 代币0储备量\n    uint256 public reserve0;\n    // 代币1储备量\n    uint256 public reserve1;\n    constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {\n        token0 = _token0;\n        token1 = _token1;\n    }\n    // 添加流动性，转进代币，铸造LP\n    /*liquidity计算核心逻辑：\n         第一次添加流动性：\n             sqrt(token0Amount * token1Amount)\n         后续添加流动性：\n            // 取小值\n             min(\n                // token0Amount占token0总储备量reserve0（本次交易后）的比例，乘以LP的总供应量totalSupply\n                token0Amount * totalSupply / reserve0, \n                // token1Amount占token1总储备量reserve1（本次交易后）的比例，乘以LP的总供应量totalSupply\n                token1Amount * totalSupply / reserve1\n            )\n    */\n    // return 获得的LP代币数\n    function addLiquidity(\n        // 添加的token0数量\n        uint256 token0Amount, \n        // 添加的token1数量\n        uint256 token1Amount\n    ) public returns (uint256 liquidity) {\n        // checks\n        require(token0Amount > 0, \"addLiquidity: token0Amount can not zero\");\n        require(token1Amount > 0, \"addLiquidity: token1Amount can not zero\");\n        // effects\n        // 更新储备量\n        reserve0 = token0.balanceOf(address(this)) + token0Amount;\n        reserve1 = token1.balanceOf(address(this)) + token1Amount;\n        uint256 totalSupply = totalSupply();\n        if (totalSupply == 0) {\n            // 第一次添加流动性，铸造sqrt(x * y)单位的LP代币\n            liquidity = sqrt(token0Amount * token1Amount);\n        }else {\n            // 如果不是第一次添加流动性：按添加代币的数量比例铸造LP，取两个代币更小的比例\n            liquidity = min(token0Amount * totalSupply / reserve0, token1Amount * totalSupply / reserve1);\n        }\n        // 检查LP数量\n        require(liquidity > 0, \"addLiquidity: insufficient liquidity\");\n        // 铸造LP\n        _mint(msg.sender, liquidity);\n        // interactions\n        token0.transferFrom(msg.sender, address(this), token0Amount);\n        token1.transferFrom(msg.sender, address(this), token1Amount);\n        // 释放事件\n        emit LiquidityAdded(msg.sender, token0Amount, token1Amount, liquidity);\n    }\n\n    // 移除流动性: 销毁liquidity数量LP代币，返还token0代币&token1代币\n    /*\n    核心逻辑：\n        返还token0代币数量：\n            // 卖出LP代币数量liquidity 占 总供应量totalSupply的比例， 乘以token0总储备量reserve0\n            liquidity * reserv0 / totalSupply\n        返还token1代币数量：\n            // 卖出LP代币数量liquidity 占 总供应量totalSupply的比例， 乘以token1总储备量reserve1\n            liquidity * reserv1 / totalSupply\n    */\n    function removeLiquidity(uint256 liquidity) public returns (uint256 token0Amount, uint256 token1Amount) {\n        // checks\n        uint256 balance = balanceOf(msg.sender);\n        require(balance >= liquidity, \"LP insufficient\");\n        // effects\n        // 计算返还token代币\n        uint256 totalSupply = totalSupply();\n        token0Amount = liquidity * reserve0 / totalSupply;\n        token1Amount = liquidity * reserve1 / totalSupply;\n        reserve0 = token0.balanceOf(address(this)) - token0Amount;\n        reserve1 = token1.balanceOf(address(this)) - token1Amount;\n        // 销毁LP\n        _burn(msg.sender, liquidity);\n        // interactions\n        token0.transfer(msg.sender, token0Amount);\n        token1.transfer(msg.sender, token1Amount);\n        emit LiquidityRemoved(msg.sender, liquidity, token0Amount,token1Amount);\n    }\n\n    // 交易: 将amount数量的tokenIn类型代币, 交换出另一种代币，另一种代币最低出币量为amountOutMin\n    // 返回：amountOut  交换出的另一种代币数量；tokenOut    交换出的另一种代币类型\n    function swap(uint256 amountIn, IERC20 tokenIn, uint256 amountOutMin) public returns (uint256 amountOut, IERC20 tokenOut) {\n        // checks\n        require(amountIn > 0, \"swap: amountIn must positive\");\n        require(tokenIn == token0 || tokenIn == token1, \"swap: tokenIn not supported\");\n        uint256 balance0 = token0.balanceOf(address(this));\n        uint256 balance1 = token1.balanceOf(address(this));\n        if (tokenIn == token0) {\n            // 用token0代币交换token1代币\n            amountOut = calculateSwapOutAmount(amountIn, balance0, balance1);\n            tokenOut = token1;\n            if (amountOut < amountOutMin) {\n                revert SwapAmountLessThanOutMin();\n            }\n            // effects\n            // reserve0增加amountIn\n            reserve0 = token0.balanceOf(address(this)) + amountIn;\n            // reserve1减少amountOut\n            reserve1 = token1.balanceOf(address(this)) - amountOut;\n            // interactions\n            token0.transferFrom(msg.sender, address(this), amountIn);\n            token1.transfer(msg.sender, amountOut);\n        }else {\n            // 用token1代币交换token0代币\n            amountOut = calculateSwapOutAmount(amountIn, balance1, balance0);\n            tokenOut = token0;\n            if (amountOut < amountOutMin) {\n                revert SwapAmountLessThanOutMin();\n            }\n            // effects\n            // reserve1增加 amountIn\n            reserve1 = token1.balanceOf(address(this)) + amountIn;\n            // reserve0减少 amountOut\n            reserve0 = token0.balanceOf(address(this)) - amountOut;\n            // interactions\n            token1.transferFrom(msg.sender, address(this), amountIn);\n            token0.transfer(msg.sender, amountOut);\n        }\n        emit SwapSuccess(address(tokenIn), amountIn, address(tokenOut), amountOut);\n    }\n    \n    // 计算交换出币数量\n    /*\n    核心逻辑：恒定乘积自动做市商（Constant Product Automated Market Maker, CPAMM）,保证: k = x*y不变\n        用x代币，可以交换多少y？设：两种代币总储备量为x、y，通过δx交换出δy代币：\n            交换前：k = x*y\n            交换后：k = (x+δx)*(y-δy)\n            由 x*y = (x+δx)*(y-δy), 可计算出：\n                δy = (δx*y) / (x+δx)\n    */\n    // return   另一种代币出币数量\n    function calculateSwapOutAmount(\n        // 入币数量(δx)\n        uint amountIn, \n        // 入币总储备量(x)\n        uint256 reserveIn,\n        // 出币总储备量(y) \n        uint256 reserveOut\n    ) public pure returns (uint256 amountOut) {\n        require(amountIn > 0, \"calculateSwapOutAmount: amountIn must positive\");\n        require(reserveIn > 0, \"calculateSwapOutAmount: reserveIn must positive\");\n        require(reserveOut > 0, \"calculateSwapOutAmount: reserveOut must positive\");\n        amountOut = (amountIn*reserveOut) / (reserveIn+amountIn);\n    }\n    \n    // 计算平方根\n    function sqrt(uint256 num) internal pure returns (uint256 result) {\n        if (num > 3) {\n            result = num;\n            uint256 x = num / 2 + 1;\n            while (x < result) {\n                result = x;\n                x = (num / x + x) / 2;\n            }\n        }else if(num != 0) {\n            result = 1;\n        }\n    }\n    // 计算小值\n    function min(uint num0, uint256 num1) internal pure returns (uint256 result) {\n        result = num0 < num1 ? num0 : num1;\n    }\n}\n\n/*\n// 准备：部署ERC20合约\ntoken0\n\tadmin\n\t\t0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\n\taddress\n\t\t0xb27A31f1b0AF2946B7F582768f03239b1eC07c2c\ntoken1\n\tadmin\n\t\t0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\n\taddress\n\t\t0x5802016Bc9976C6f63D6170157adAeA1924586c1\n// 铸币给0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\nmint: \n\t0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n\ttoken0: 5000000000000000000\n\ttoken1: 5000000000000000000\n// 部署swap合约\n\t// 构造函数参数\n\t\ttoken0: 0xb27A31f1b0AF2946B7F582768f03239b1eC07c2c\n\t\ttoken1: 0x5802016Bc9976C6f63D6170157adAeA1924586c1\n\taddress\n\t\t0xdfA652ba46f72a877500fDaC5b6E212212d53549\n\n// swap合约测试\n// 1.1 增加流动性(第一次添加)\n\t// approve授权: 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n\ttoken0 approve:\n\t\t0xdfA652ba46f72a877500fDaC5b6E212212d53549, 1000000000000000000\n\ttoken1 approve:\n\t\t0xdfA652ba46f72a877500fDaC5b6E212212d53549, 2000000000000000000\n// 执行：addLiquidity\n\ttoken0Amount: 1000000000000000000\n\ttoken1Amount: 2000000000000000000\n// 结果：ok\n\tlpBalance: 1414213562373095048\n\treserve0: 1000000000000000000\n\treserve1: 2000000000000000000\n// 1.2 增加流动性(后续添加)\n\t// approve授权: 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n\ttoken0 approve:\n\t\t0xdfA652ba46f72a877500fDaC5b6E212212d53549, 1000000000000000000\n\ttoken1 approve:\n\t\t0xdfA652ba46f72a877500fDaC5b6E212212d53549, 1000000000000000000\n// 执行：addLiquidity\n\ttoken0Amount: 1000000000000000000\n\ttoken1Amount: 1000000000000000000\n// 结果：ok\n\t// lp计算结果：min(707106781186547600, 471404520791031700) = 471404520791031700\n\t\t1000000000000000000*1414213562373095048/(1000000000000000000+1000000000000000000) = 707106781186547600\n\t\t1000000000000000000*1414213562373095048/(1000000000000000000+2000000000000000000) = 471404520791031700\n\tlpBalance: 1885618083164126730 （误差可能出现在471404520791031700计算过程中，可接受）\n\t\t1414213562373095048+471404520791031700 = 1885618083164126748\n\treserve0: 2000000000000000000\n\treserve1: 3000000000000000000\n\n// 2.移除流动性\n\t0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n\t\tremoveLiquidity: 100000000\n\t\tresult:\n\t\t\ttoken0.balanceOf(): 3000000000106066017 \tok\n\t\t\t\t3000000000000000000+106066017.17798214 = 3000000000106066017\n\t\t\t\t\t100000000*2000000000000000000/1885618083164126730 = 106066017.17798214\n\t\t\ttoken1.BalanceOf(): 2000000000159099025  \tOK\n\t\t\t\t2000000000000000000+159099025.7669732 = 2000000000159099025\n\t\t\t\t\t100000000*3000000000000000000/1885618083164126730 = 159099025.7669732\n\t\t\tswap.balanceOf(): \t\t\t\t\t  1885618083064126730 \tok\n\t\t\t\t1885618083164126730-100000000 =   1885618083064126730\n\t\t\treserve0: 1999999999893933983 \tok\n\t\t\t\t2000000000000000000-106066017 = 1999999999893933983\n\t\t\treserve1: 2999999999840900975 ok\n\t\t\t\t3000000000000000000-159099025 = 2999999999840900975\n// 3.交易\n \t0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n \ttoken0.approve: 0xdfA652ba46f72a877500fDaC5b6E212212d53549,100000000\n \tswap: 将 100000000 的token0，交换token1, 最少交换金额为：\n \t\tparam:\n \t\t\t100000000, 0xb27A31f1b0AF2946B7F582768f03239b1eC07c2c, 139999999\n \t// 计算100000000可以换多少token1?\n \t\t(δx*y) / (x+δx)\n \t\t\tδx: 100000000\n \t\t\tx: 1999999999893933983\n \t\t\ty: 2999999999840900975\n \t\t(100000000*2999999999840900975)/(1999999999893933983+100000000) = 149999999.9925\n \t\t可以换取y的数量为： 149999999\n\n \tresult:\n \t\ttoken0.balanceOf(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db): 3000000000006066017 \tok\n \t\t\t3000000000106066017 - 100000000 = 3000000000006066017\n \t\ttoken1.BalanceOf(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db): 2000000000309099024 \tok\n \t\t\t2000000000159099025 + 149999999 = 2000000000309099024\n \t\tswap.balanceOf(): \t\t\t\t\t  1885618083064126730  不变 ok\n \t\treserve0: 1999999999993933983 \tok\n \t\t\t1999999999893933983 + 100000000 = 1999999999993933983\n \t\treserve1: 2999999999690900976\tok\n \t\t\t2999999999840900975 - 149999999 = 2999999999690900976\n \t\ttoken0.balanceOf(0xdfA652ba46f72a877500fDaC5b6E212212d53549): 1999999999993933983 \tok\n \t\ttoken1.BalanceOf(0xdfA652ba46f72a877500fDaC5b6E212212d53549): 2999999999690900976 \tok\n*/"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SwapAmountLessThanOutMin",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapSuccess",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "calculateSwapOutAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/SimpleSwap.sol\":224:8354  contract SimpleSwap is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/SimpleSwap.sol\":1009:1138  constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c655377617000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5353000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/token/SimpleSwap.sol\":1098:1105  _token0 */\n  dup2\n    /* \"contracts/token/SimpleSwap.sol\":1089:1095  token0 */\n  0x05\n  0x00\n    /* \"contracts/token/SimpleSwap.sol\":1089:1105  token0 = _token0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/SimpleSwap.sol\":1124:1131  _token1 */\n  dup1\n    /* \"contracts/token/SimpleSwap.sol\":1115:1121  token1 */\n  0x06\n  0x00\n    /* \"contracts/token/SimpleSwap.sol\":1115:1131  token1 = _token1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/SimpleSwap.sol\":1009:1138  constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {... */\n  pop\n  pop\n    /* \"contracts/token/SimpleSwap.sol\":224:8354  contract SimpleSwap is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_46\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_17:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_48\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_18:\n    /* \"#utility.yul\":771:809   */\n  tag_50\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_51:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_19:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_53\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_18\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1580   */\ntag_3:\n    /* \"#utility.yul\":1124:1130   */\n  0x00\n    /* \"#utility.yul\":1132:1138   */\n  dup1\n    /* \"#utility.yul\":1181:1183   */\n  0x40\n    /* \"#utility.yul\":1169:1178   */\n  dup4\n    /* \"#utility.yul\":1160:1167   */\n  dup6\n    /* \"#utility.yul\":1156:1179   */\n  sub\n    /* \"#utility.yul\":1152:1184   */\n  slt\n    /* \"#utility.yul\":1149:1268   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1187:1266   */\n  tag_56\n  tag_13\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1149:1268   */\ntag_55:\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1332:1410   */\n  tag_57\n    /* \"#utility.yul\":1402:1409   */\n  dup6\n    /* \"#utility.yul\":1393:1399   */\n  dup3\n    /* \"#utility.yul\":1382:1391   */\n  dup7\n    /* \"#utility.yul\":1378:1400   */\n  add\n    /* \"#utility.yul\":1332:1410   */\n  tag_19\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1322:1410   */\n  swap3\n  pop\n    /* \"#utility.yul\":1278:1420   */\n  pop\n    /* \"#utility.yul\":1459:1461   */\n  0x20\n    /* \"#utility.yul\":1485:1563   */\n  tag_58\n    /* \"#utility.yul\":1555:1562   */\n  dup6\n    /* \"#utility.yul\":1546:1552   */\n  dup3\n    /* \"#utility.yul\":1535:1544   */\n  dup7\n    /* \"#utility.yul\":1531:1553   */\n  add\n    /* \"#utility.yul\":1485:1563   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1475:1563   */\n  swap2\n  pop\n    /* \"#utility.yul\":1430:1573   */\n  pop\n    /* \"#utility.yul\":1017:1580   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1586:1685   */\ntag_20:\n    /* \"#utility.yul\":1638:1644   */\n  0x00\n    /* \"#utility.yul\":1672:1677   */\n  dup2\n    /* \"#utility.yul\":1666:1678   */\n  mload\n    /* \"#utility.yul\":1656:1678   */\n  swap1\n  pop\n    /* \"#utility.yul\":1586:1685   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1691:1871   */\ntag_21:\n    /* \"#utility.yul\":1739:1816   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1736:1737   */\n  0x00\n    /* \"#utility.yul\":1729:1817   */\n  mstore\n    /* \"#utility.yul\":1836:1840   */\n  0x41\n    /* \"#utility.yul\":1833:1834   */\n  0x04\n    /* \"#utility.yul\":1826:1841   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1877:2057   */\ntag_22:\n    /* \"#utility.yul\":1925:2002   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1922:1923   */\n  0x00\n    /* \"#utility.yul\":1915:2003   */\n  mstore\n    /* \"#utility.yul\":2022:2026   */\n  0x22\n    /* \"#utility.yul\":2019:2020   */\n  0x04\n    /* \"#utility.yul\":2012:2027   */\n  mstore\n    /* \"#utility.yul\":2046:2050   */\n  0x24\n    /* \"#utility.yul\":2043:2044   */\n  0x00\n    /* \"#utility.yul\":2036:2051   */\n  revert\n    /* \"#utility.yul\":2063:2383   */\ntag_23:\n    /* \"#utility.yul\":2107:2113   */\n  0x00\n    /* \"#utility.yul\":2144:2145   */\n  0x02\n    /* \"#utility.yul\":2138:2142   */\n  dup3\n    /* \"#utility.yul\":2134:2146   */\n  div\n    /* \"#utility.yul\":2124:2146   */\n  swap1\n  pop\n    /* \"#utility.yul\":2191:2192   */\n  0x01\n    /* \"#utility.yul\":2185:2189   */\n  dup3\n    /* \"#utility.yul\":2181:2193   */\n  and\n    /* \"#utility.yul\":2212:2230   */\n  dup1\n    /* \"#utility.yul\":2202:2283   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2268:2272   */\n  0x7f\n    /* \"#utility.yul\":2260:2266   */\n  dup3\n    /* \"#utility.yul\":2256:2273   */\n  and\n    /* \"#utility.yul\":2246:2273   */\n  swap2\n  pop\n    /* \"#utility.yul\":2202:2283   */\ntag_63:\n    /* \"#utility.yul\":2330:2332   */\n  0x20\n    /* \"#utility.yul\":2322:2328   */\n  dup3\n    /* \"#utility.yul\":2319:2333   */\n  lt\n    /* \"#utility.yul\":2299:2317   */\n  dup2\n    /* \"#utility.yul\":2296:2334   */\n  sub\n    /* \"#utility.yul\":2293:2377   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2349:2367   */\n  tag_65\n  tag_22\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2293:2377   */\ntag_64:\n    /* \"#utility.yul\":2114:2383   */\n  pop\n    /* \"#utility.yul\":2063:2383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2389:2530   */\ntag_24:\n    /* \"#utility.yul\":2438:2442   */\n  0x00\n    /* \"#utility.yul\":2461:2464   */\n  dup2\n    /* \"#utility.yul\":2453:2464   */\n  swap1\n  pop\n    /* \"#utility.yul\":2484:2487   */\n  dup2\n    /* \"#utility.yul\":2481:2482   */\n  0x00\n    /* \"#utility.yul\":2474:2488   */\n  mstore\n    /* \"#utility.yul\":2518:2522   */\n  0x20\n    /* \"#utility.yul\":2515:2516   */\n  0x00\n    /* \"#utility.yul\":2505:2523   */\n  keccak256\n    /* \"#utility.yul\":2497:2523   */\n  swap1\n  pop\n    /* \"#utility.yul\":2389:2530   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2536:2629   */\ntag_25:\n    /* \"#utility.yul\":2573:2579   */\n  0x00\n    /* \"#utility.yul\":2620:2622   */\n  0x20\n    /* \"#utility.yul\":2615:2617   */\n  0x1f\n    /* \"#utility.yul\":2608:2613   */\n  dup4\n    /* \"#utility.yul\":2604:2618   */\n  add\n    /* \"#utility.yul\":2600:2623   */\n  div\n    /* \"#utility.yul\":2590:2623   */\n  swap1\n  pop\n    /* \"#utility.yul\":2536:2629   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2635:2742   */\ntag_26:\n    /* \"#utility.yul\":2679:2687   */\n  0x00\n    /* \"#utility.yul\":2729:2734   */\n  dup3\n    /* \"#utility.yul\":2723:2727   */\n  dup3\n    /* \"#utility.yul\":2719:2735   */\n  shl\n    /* \"#utility.yul\":2698:2735   */\n  swap1\n  pop\n    /* \"#utility.yul\":2635:2742   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2748:3141   */\ntag_27:\n    /* \"#utility.yul\":2817:2823   */\n  0x00\n    /* \"#utility.yul\":2867:2868   */\n  0x08\n    /* \"#utility.yul\":2855:2865   */\n  dup4\n    /* \"#utility.yul\":2851:2869   */\n  mul\n    /* \"#utility.yul\":2890:2987   */\n  tag_70\n    /* \"#utility.yul\":2920:2986   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2909:2918   */\n  dup3\n    /* \"#utility.yul\":2890:2987   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3008:3047   */\n  tag_71\n    /* \"#utility.yul\":3038:3046   */\n  dup7\n    /* \"#utility.yul\":3027:3036   */\n  dup4\n    /* \"#utility.yul\":3008:3047   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2996:3047   */\n  swap6\n  pop\n    /* \"#utility.yul\":3080:3084   */\n  dup1\n    /* \"#utility.yul\":3076:3085   */\n  not\n    /* \"#utility.yul\":3069:3074   */\n  dup5\n    /* \"#utility.yul\":3065:3086   */\n  and\n    /* \"#utility.yul\":3056:3086   */\n  swap4\n  pop\n    /* \"#utility.yul\":3129:3133   */\n  dup1\n    /* \"#utility.yul\":3119:3127   */\n  dup7\n    /* \"#utility.yul\":3115:3134   */\n  and\n    /* \"#utility.yul\":3108:3113   */\n  dup5\n    /* \"#utility.yul\":3105:3135   */\n  or\n    /* \"#utility.yul\":3095:3135   */\n  swap3\n  pop\n    /* \"#utility.yul\":2824:3141   */\n  pop\n  pop\n    /* \"#utility.yul\":2748:3141   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3147:3224   */\ntag_28:\n    /* \"#utility.yul\":3184:3191   */\n  0x00\n    /* \"#utility.yul\":3213:3218   */\n  dup2\n    /* \"#utility.yul\":3202:3218   */\n  swap1\n  pop\n    /* \"#utility.yul\":3147:3224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3230:3290   */\ntag_29:\n    /* \"#utility.yul\":3258:3261   */\n  0x00\n    /* \"#utility.yul\":3279:3284   */\n  dup2\n    /* \"#utility.yul\":3272:3284   */\n  swap1\n  pop\n    /* \"#utility.yul\":3230:3290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3296:3438   */\ntag_30:\n    /* \"#utility.yul\":3346:3355   */\n  0x00\n    /* \"#utility.yul\":3379:3432   */\n  tag_75\n    /* \"#utility.yul\":3397:3431   */\n  tag_76\n    /* \"#utility.yul\":3406:3430   */\n  tag_77\n    /* \"#utility.yul\":3424:3429   */\n  dup5\n    /* \"#utility.yul\":3406:3430   */\n  tag_28\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3397:3431   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3379:3432   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3366:3432   */\n  swap1\n  pop\n    /* \"#utility.yul\":3296:3438   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3444:3519   */\ntag_31:\n    /* \"#utility.yul\":3487:3490   */\n  0x00\n    /* \"#utility.yul\":3508:3513   */\n  dup2\n    /* \"#utility.yul\":3501:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3444:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3794   */\ntag_32:\n    /* \"#utility.yul\":3635:3674   */\n  tag_80\n    /* \"#utility.yul\":3666:3673   */\n  dup4\n    /* \"#utility.yul\":3635:3674   */\n  tag_30\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3696:3787   */\n  tag_81\n    /* \"#utility.yul\":3745:3786   */\n  tag_82\n    /* \"#utility.yul\":3769:3785   */\n  dup3\n    /* \"#utility.yul\":3745:3786   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3737:3743   */\n  dup5\n    /* \"#utility.yul\":3730:3734   */\n  dup5\n    /* \"#utility.yul\":3724:3735   */\n  sload\n    /* \"#utility.yul\":3696:3787   */\n  tag_27\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3690:3694   */\n  dup3\n    /* \"#utility.yul\":3683:3788   */\n  sstore\n    /* \"#utility.yul\":3601:3794   */\n  pop\n    /* \"#utility.yul\":3525:3794   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3800:3873   */\ntag_33:\n    /* \"#utility.yul\":3845:3848   */\n  0x00\n    /* \"#utility.yul\":3800:3873   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3879:4068   */\ntag_34:\n    /* \"#utility.yul\":3956:3988   */\n  tag_85\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3997:4062   */\n  tag_86\n    /* \"#utility.yul\":4055:4061   */\n  dup2\n    /* \"#utility.yul\":4047:4053   */\n  dup5\n    /* \"#utility.yul\":4041:4045   */\n  dup5\n    /* \"#utility.yul\":3997:4062   */\n  tag_32\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3932:4068   */\n  pop\n    /* \"#utility.yul\":3879:4068   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4074:4260   */\ntag_35:\n    /* \"#utility.yul\":4134:4254   */\ntag_88:\n    /* \"#utility.yul\":4151:4154   */\n  dup2\n    /* \"#utility.yul\":4144:4149   */\n  dup2\n    /* \"#utility.yul\":4141:4155   */\n  lt\n    /* \"#utility.yul\":4134:4254   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4205:4244   */\n  tag_91\n    /* \"#utility.yul\":4242:4243   */\n  0x00\n    /* \"#utility.yul\":4235:4240   */\n  dup3\n    /* \"#utility.yul\":4205:4244   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4178:4179   */\n  0x01\n    /* \"#utility.yul\":4171:4176   */\n  dup2\n    /* \"#utility.yul\":4167:4180   */\n  add\n    /* \"#utility.yul\":4158:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4134:4254   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":4074:4260   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4266:4809   */\ntag_36:\n    /* \"#utility.yul\":4367:4369   */\n  0x1f\n    /* \"#utility.yul\":4362:4365   */\n  dup3\n    /* \"#utility.yul\":4359:4370   */\n  gt\n    /* \"#utility.yul\":4356:4802   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4401:4439   */\n  tag_94\n    /* \"#utility.yul\":4433:4438   */\n  dup2\n    /* \"#utility.yul\":4401:4439   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4485:4514   */\n  tag_95\n    /* \"#utility.yul\":4503:4513   */\n  dup5\n    /* \"#utility.yul\":4485:4514   */\n  tag_25\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4475:4483   */\n  dup2\n    /* \"#utility.yul\":4471:4515   */\n  add\n    /* \"#utility.yul\":4668:4670   */\n  0x20\n    /* \"#utility.yul\":4656:4666   */\n  dup6\n    /* \"#utility.yul\":4653:4671   */\n  lt\n    /* \"#utility.yul\":4650:4699   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4689:4697   */\n  dup2\n    /* \"#utility.yul\":4674:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4699   */\ntag_96:\n    /* \"#utility.yul\":4712:4792   */\n  tag_97\n    /* \"#utility.yul\":4768:4790   */\n  tag_98\n    /* \"#utility.yul\":4786:4789   */\n  dup6\n    /* \"#utility.yul\":4768:4790   */\n  tag_25\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4758:4766   */\n  dup4\n    /* \"#utility.yul\":4754:4791   */\n  add\n    /* \"#utility.yul\":4741:4752   */\n  dup3\n    /* \"#utility.yul\":4712:4792   */\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4371:4802   */\n  pop\n  pop\n    /* \"#utility.yul\":4356:4802   */\ntag_93:\n    /* \"#utility.yul\":4266:4809   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4815:4932   */\ntag_37:\n    /* \"#utility.yul\":4869:4877   */\n  0x00\n    /* \"#utility.yul\":4919:4924   */\n  dup3\n    /* \"#utility.yul\":4913:4917   */\n  dup3\n    /* \"#utility.yul\":4909:4925   */\n  shr\n    /* \"#utility.yul\":4888:4925   */\n  swap1\n  pop\n    /* \"#utility.yul\":4815:4932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4938:5107   */\ntag_38:\n    /* \"#utility.yul\":4982:4988   */\n  0x00\n    /* \"#utility.yul\":5015:5066   */\n  tag_101\n    /* \"#utility.yul\":5063:5064   */\n  0x00\n    /* \"#utility.yul\":5059:5065   */\n  not\n    /* \"#utility.yul\":5051:5056   */\n  dup5\n    /* \"#utility.yul\":5048:5049   */\n  0x08\n    /* \"#utility.yul\":5044:5057   */\n  mul\n    /* \"#utility.yul\":5015:5066   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5011:5067   */\n  not\n    /* \"#utility.yul\":5096:5100   */\n  dup1\n    /* \"#utility.yul\":5090:5094   */\n  dup4\n    /* \"#utility.yul\":5086:5101   */\n  and\n    /* \"#utility.yul\":5076:5101   */\n  swap2\n  pop\n    /* \"#utility.yul\":4989:5107   */\n  pop\n    /* \"#utility.yul\":4938:5107   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5112:5407   */\ntag_39:\n    /* \"#utility.yul\":5188:5192   */\n  0x00\n    /* \"#utility.yul\":5334:5363   */\n  tag_103\n    /* \"#utility.yul\":5359:5362   */\n  dup4\n    /* \"#utility.yul\":5353:5357   */\n  dup4\n    /* \"#utility.yul\":5334:5363   */\n  tag_38\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5326:5363   */\n  swap2\n  pop\n    /* \"#utility.yul\":5396:5399   */\n  dup3\n    /* \"#utility.yul\":5393:5394   */\n  0x02\n    /* \"#utility.yul\":5389:5400   */\n  mul\n    /* \"#utility.yul\":5383:5387   */\n  dup3\n    /* \"#utility.yul\":5380:5401   */\n  or\n    /* \"#utility.yul\":5372:5401   */\n  swap1\n  pop\n    /* \"#utility.yul\":5112:5407   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5412:6807   */\ntag_8:\n    /* \"#utility.yul\":5529:5566   */\n  tag_105\n    /* \"#utility.yul\":5562:5565   */\n  dup3\n    /* \"#utility.yul\":5529:5566   */\n  tag_20\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5631:5649   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5623:5629   */\n  dup2\n    /* \"#utility.yul\":5620:5650   */\n  gt\n    /* \"#utility.yul\":5617:5673   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5653:5671   */\n  tag_107\n  tag_21\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5617:5673   */\ntag_106:\n    /* \"#utility.yul\":5697:5735   */\n  tag_108\n    /* \"#utility.yul\":5729:5733   */\n  dup3\n    /* \"#utility.yul\":5723:5734   */\n  sload\n    /* \"#utility.yul\":5697:5735   */\n  tag_23\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5782:5849   */\n  tag_109\n    /* \"#utility.yul\":5842:5848   */\n  dup3\n    /* \"#utility.yul\":5834:5840   */\n  dup3\n    /* \"#utility.yul\":5828:5832   */\n  dup6\n    /* \"#utility.yul\":5782:5849   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5876:5877   */\n  0x00\n    /* \"#utility.yul\":5900:5904   */\n  0x20\n    /* \"#utility.yul\":5887:5904   */\n  swap1\n  pop\n    /* \"#utility.yul\":5932:5934   */\n  0x1f\n    /* \"#utility.yul\":5924:5930   */\n  dup4\n    /* \"#utility.yul\":5921:5935   */\n  gt\n    /* \"#utility.yul\":5949:5950   */\n  0x01\n    /* \"#utility.yul\":5944:6562   */\n  dup2\n  eq\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6606:6607   */\n  0x00\n    /* \"#utility.yul\":6623:6629   */\n  dup5\n    /* \"#utility.yul\":6620:6697   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":6672:6681   */\n  dup3\n    /* \"#utility.yul\":6667:6670   */\n  dup8\n    /* \"#utility.yul\":6663:6682   */\n  add\n    /* \"#utility.yul\":6657:6683   */\n  mload\n    /* \"#utility.yul\":6648:6683   */\n  swap1\n  pop\n    /* \"#utility.yul\":6620:6697   */\ntag_112:\n    /* \"#utility.yul\":6723:6790   */\n  tag_113\n    /* \"#utility.yul\":6783:6789   */\n  dup6\n    /* \"#utility.yul\":6776:6781   */\n  dup3\n    /* \"#utility.yul\":6723:6790   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":6717:6721   */\n  dup7\n    /* \"#utility.yul\":6710:6791   */\n  sstore\n    /* \"#utility.yul\":6579:6801   */\n  pop\n    /* \"#utility.yul\":5914:6801   */\n  jump(tag_110)\n    /* \"#utility.yul\":5944:6562   */\ntag_111:\n    /* \"#utility.yul\":5996:6000   */\n  0x1f\n    /* \"#utility.yul\":5992:6001   */\n  not\n    /* \"#utility.yul\":5984:5990   */\n  dup5\n    /* \"#utility.yul\":5980:6002   */\n  and\n    /* \"#utility.yul\":6030:6067   */\n  tag_114\n    /* \"#utility.yul\":6062:6066   */\n  dup7\n    /* \"#utility.yul\":6030:6067   */\n  tag_24\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6089:6090   */\n  0x00\n    /* \"#utility.yul\":6103:6311   */\ntag_115:\n    /* \"#utility.yul\":6117:6124   */\n  dup3\n    /* \"#utility.yul\":6114:6115   */\n  dup2\n    /* \"#utility.yul\":6111:6125   */\n  lt\n    /* \"#utility.yul\":6103:6311   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6196:6205   */\n  dup5\n    /* \"#utility.yul\":6191:6194   */\n  dup10\n    /* \"#utility.yul\":6187:6206   */\n  add\n    /* \"#utility.yul\":6181:6207   */\n  mload\n    /* \"#utility.yul\":6173:6179   */\n  dup3\n    /* \"#utility.yul\":6166:6208   */\n  sstore\n    /* \"#utility.yul\":6247:6248   */\n  0x01\n    /* \"#utility.yul\":6239:6245   */\n  dup3\n    /* \"#utility.yul\":6235:6249   */\n  add\n    /* \"#utility.yul\":6225:6249   */\n  swap2\n  pop\n    /* \"#utility.yul\":6294:6296   */\n  0x20\n    /* \"#utility.yul\":6283:6292   */\n  dup6\n    /* \"#utility.yul\":6279:6297   */\n  add\n    /* \"#utility.yul\":6266:6297   */\n  swap5\n  pop\n    /* \"#utility.yul\":6140:6144   */\n  0x20\n    /* \"#utility.yul\":6137:6138   */\n  dup2\n    /* \"#utility.yul\":6133:6145   */\n  add\n    /* \"#utility.yul\":6128:6145   */\n  swap1\n  pop\n    /* \"#utility.yul\":6103:6311   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":6339:6345   */\n  dup7\n    /* \"#utility.yul\":6330:6337   */\n  dup4\n    /* \"#utility.yul\":6327:6346   */\n  lt\n    /* \"#utility.yul\":6324:6503   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6397:6406   */\n  dup5\n    /* \"#utility.yul\":6392:6395   */\n  dup10\n    /* \"#utility.yul\":6388:6407   */\n  add\n    /* \"#utility.yul\":6382:6408   */\n  mload\n    /* \"#utility.yul\":6440:6488   */\n  tag_119\n    /* \"#utility.yul\":6482:6486   */\n  0x1f\n    /* \"#utility.yul\":6474:6480   */\n  dup10\n    /* \"#utility.yul\":6470:6487   */\n  and\n    /* \"#utility.yul\":6459:6468   */\n  dup3\n    /* \"#utility.yul\":6440:6488   */\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6432:6438   */\n  dup4\n    /* \"#utility.yul\":6425:6489   */\n  sstore\n    /* \"#utility.yul\":6347:6503   */\n  pop\n    /* \"#utility.yul\":6324:6503   */\ntag_118:\n    /* \"#utility.yul\":6549:6550   */\n  0x01\n    /* \"#utility.yul\":6545:6546   */\n  0x02\n    /* \"#utility.yul\":6537:6543   */\n  dup9\n    /* \"#utility.yul\":6533:6547   */\n  mul\n    /* \"#utility.yul\":6529:6551   */\n  add\n    /* \"#utility.yul\":6523:6527   */\n  dup9\n    /* \"#utility.yul\":6516:6552   */\n  sstore\n    /* \"#utility.yul\":5951:6562   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5914:6801   */\ntag_110:\n  pop\n    /* \"#utility.yul\":5504:6807   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5412:6807   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/SimpleSwap.sol\":224:8354  contract SimpleSwap is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/SimpleSwap.sol\":224:8354  contract SimpleSwap is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5a76f25e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9cd441da\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa3919e42\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x5a76f25e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x43264349\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":851:871  IERC20 public token0 */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":4881:6748  function swap(uint256 amountIn, IERC20 tokenIn, uint256 amountOutMin) public returns (uint256 amountOut, IERC20 tokenOut) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":927:950  uint256 public reserve0 */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":980:1003  uint256 public reserve1 */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":3787:4639  function removeLiquidity(uint256 liquidity) public returns (uint256 token0Amount, uint256 token1Amount) {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":1812:3259  function addLiquidity(... */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":7255:7830  function calculateSwapOutAmount(... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/SimpleSwap.sol\":877:897  IERC20 public token1 */\n    tag_18:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":851:871  IERC20 public token0 */\n    tag_34:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":4881:6748  function swap(uint256 amountIn, IERC20 tokenIn, uint256 amountOutMin) public returns (uint256 amountOut, IERC20 tokenOut) {... */\n    tag_53:\n        /* \"contracts/token/SimpleSwap.sol\":4967:4984  uint256 amountOut */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":4986:5001  IERC20 tokenOut */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":5050:5051  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":5039:5047  amountIn */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":5039:5051  amountIn > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":5031:5084  require(amountIn > 0, \"swap: amountIn must positive\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/token/SimpleSwap.sol\":5113:5119  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5102:5119  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5102:5109  tokenIn */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":5102:5119  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/SimpleSwap.sol\":5102:5140  tokenIn == token0 || tokenIn == token1 */\n      dup1\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5134:5140  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5123:5140  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5123:5130  tokenIn */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":5123:5140  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/SimpleSwap.sol\":5102:5140  tokenIn == token0 || tokenIn == token1 */\n    tag_122:\n        /* \"contracts/token/SimpleSwap.sol\":5094:5172  require(tokenIn == token0 || tokenIn == token1, \"swap: tokenIn not supported\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/token/SimpleSwap.sol\":5182:5198  uint256 balance0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":5201:5207  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5201:5217  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":5226:5230  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":5201:5232  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/token/SimpleSwap.sol\":5182:5232  uint256 balance0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5242:5258  uint256 balance1 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":5261:5267  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5261:5277  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":5286:5290  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":5261:5292  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_135:\n        /* \"contracts/token/SimpleSwap.sol\":5242:5292  uint256 balance1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5317:5323  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5306:5323  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5306:5313  tokenIn */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":5306:5323  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/SimpleSwap.sol\":5302:6658  if (tokenIn == token0) {... */\n      tag_136\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":5400:5452  calculateSwapOutAmount(amountIn, balance0, balance1) */\n      tag_137\n        /* \"contracts/token/SimpleSwap.sol\":5423:5431  amountIn */\n      dup8\n        /* \"contracts/token/SimpleSwap.sol\":5433:5441  balance0 */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":5443:5451  balance1 */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":5400:5422  calculateSwapOutAmount */\n      tag_84\n        /* \"contracts/token/SimpleSwap.sol\":5400:5452  calculateSwapOutAmount(amountIn, balance0, balance1) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/token/SimpleSwap.sol\":5388:5452  amountOut = calculateSwapOutAmount(amountIn, balance0, balance1) */\n      swap4\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5477:5483  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5466:5483  tokenOut = token1 */\n      swap3\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5513:5525  amountOutMin */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":5501:5510  amountOut */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":5501:5525  amountOut < amountOutMin */\n      lt\n        /* \"contracts/token/SimpleSwap.sol\":5497:5593  if (amountOut < amountOutMin) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":5552:5578  SwapAmountLessThanOutMin() */\n      mload(0x40)\n      0xcf3ba9fc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/SimpleSwap.sol\":5497:5593  if (amountOut < amountOutMin) {... */\n    tag_138:\n        /* \"contracts/token/SimpleSwap.sol\":5712:5720  amountIn */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":5678:5684  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5678:5694  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":5703:5707  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":5678:5709  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_142:\n        /* \"contracts/token/SimpleSwap.sol\":5678:5720  token0.balanceOf(address(this)) + amountIn */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/token/SimpleSwap.sol\":5667:5675  reserve0 */\n      0x07\n        /* \"contracts/token/SimpleSwap.sol\":5667:5720  reserve0 = token0.balanceOf(address(this)) + amountIn */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5818:5827  amountOut */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":5784:5790  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5784:5800  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":5809:5813  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":5784:5815  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_148:\n        /* \"contracts/token/SimpleSwap.sol\":5784:5827  token1.balanceOf(address(this)) - amountOut */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/token/SimpleSwap.sol\":5773:5781  reserve1 */\n      0x08\n        /* \"contracts/token/SimpleSwap.sol\":5773:5827  reserve1 = token1.balanceOf(address(this)) - amountOut */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5869:5875  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5869:5888  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/token/SimpleSwap.sol\":5889:5899  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":5909:5913  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":5916:5924  amountIn */\n      dup11\n        /* \"contracts/token/SimpleSwap.sol\":5869:5925  token0.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5939:5945  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":5939:5954  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/SimpleSwap.sol\":5955:5965  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":5967:5976  amountOut */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":5939:5977  token1.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5302:6658  if (tokenIn == token0) {... */\n      jump(tag_162)\n    tag_136:\n        /* \"contracts/token/SimpleSwap.sol\":6068:6120  calculateSwapOutAmount(amountIn, balance1, balance0) */\n      tag_163\n        /* \"contracts/token/SimpleSwap.sol\":6091:6099  amountIn */\n      dup8\n        /* \"contracts/token/SimpleSwap.sol\":6101:6109  balance1 */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":6111:6119  balance0 */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":6068:6090  calculateSwapOutAmount */\n      tag_84\n        /* \"contracts/token/SimpleSwap.sol\":6068:6120  calculateSwapOutAmount(amountIn, balance1, balance0) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/token/SimpleSwap.sol\":6056:6120  amountOut = calculateSwapOutAmount(amountIn, balance1, balance0) */\n      swap4\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":6145:6151  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6134:6151  tokenOut = token0 */\n      swap3\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":6181:6193  amountOutMin */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":6169:6178  amountOut */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":6169:6193  amountOut < amountOutMin */\n      lt\n        /* \"contracts/token/SimpleSwap.sol\":6165:6261  if (amountOut < amountOutMin) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":6220:6246  SwapAmountLessThanOutMin() */\n      mload(0x40)\n      0xcf3ba9fc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/SimpleSwap.sol\":6165:6261  if (amountOut < amountOutMin) {... */\n    tag_164:\n        /* \"contracts/token/SimpleSwap.sol\":6381:6389  amountIn */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":6347:6353  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6347:6363  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":6372:6376  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":6347:6378  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_168:\n        /* \"contracts/token/SimpleSwap.sol\":6347:6389  token1.balanceOf(address(this)) + amountIn */\n      tag_169\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_169:\n        /* \"contracts/token/SimpleSwap.sol\":6336:6344  reserve1 */\n      0x08\n        /* \"contracts/token/SimpleSwap.sol\":6336:6389  reserve1 = token1.balanceOf(address(this)) + amountIn */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":6488:6497  amountOut */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":6454:6460  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6454:6470  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":6479:6483  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":6454:6485  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_173:\n        /* \"contracts/token/SimpleSwap.sol\":6454:6497  token0.balanceOf(address(this)) - amountOut */\n      tag_174\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_174:\n        /* \"contracts/token/SimpleSwap.sol\":6443:6451  reserve0 */\n      0x07\n        /* \"contracts/token/SimpleSwap.sol\":6443:6497  reserve0 = token0.balanceOf(address(this)) - amountOut */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":6539:6545  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6539:6558  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/token/SimpleSwap.sol\":6559:6569  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":6579:6583  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":6586:6594  amountIn */\n      dup11\n        /* \"contracts/token/SimpleSwap.sol\":6539:6595  token1.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_175:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_178:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":6609:6615  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6609:6624  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/SimpleSwap.sol\":6625:6635  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":6637:6646  amountOut */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":6609:6647  token0.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_182:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":5302:6658  if (tokenIn == token0) {... */\n    tag_162:\n        /* \"contracts/token/SimpleSwap.sol\":6720:6728  tokenOut */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":6672:6741  SwapSuccess(address(tokenIn), amountIn, address(tokenOut), amountOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":6692:6699  tokenIn */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":6672:6741  SwapSuccess(address(tokenIn), amountIn, address(tokenOut), amountOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x80044f7893845e3883418a4d784224b0d2d9606ca5f19c2a910401c2c62761b5\n        /* \"contracts/token/SimpleSwap.sol\":6702:6710  amountIn */\n      dup10\n        /* \"contracts/token/SimpleSwap.sol\":6731:6740  amountOut */\n      dup8\n        /* \"contracts/token/SimpleSwap.sol\":6672:6741  SwapSuccess(address(tokenIn), amountIn, address(tokenOut), amountOut) */\n      mload(0x40)\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/SimpleSwap.sol\":5003:6748  {... */\n      pop\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4881:6748  function swap(uint256 amountIn, IERC20 tokenIn, uint256 amountOutMin) public returns (uint256 amountOut, IERC20 tokenOut) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":927:950  uint256 public reserve0 */\n    tag_57:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":980:1003  uint256 public reserve1 */\n    tag_60:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_100\n      jump\t// in\n    tag_186:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_100\n      jump\t// in\n    tag_187:\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_189\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_188)\n    tag_189:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_190:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_190\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":3787:4639  function removeLiquidity(uint256 liquidity) public returns (uint256 token0Amount, uint256 token1Amount) {... */\n    tag_73:\n        /* \"contracts/token/SimpleSwap.sol\":3847:3867  uint256 token0Amount */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":3869:3889  uint256 token1Amount */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":3919:3934  uint256 balance */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":3937:3958  balanceOf(msg.sender) */\n      tag_192\n        /* \"contracts/token/SimpleSwap.sol\":3947:3957  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":3937:3946  balanceOf */\n      tag_65\n        /* \"contracts/token/SimpleSwap.sol\":3937:3958  balanceOf(msg.sender) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/token/SimpleSwap.sol\":3919:3958  uint256 balance = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":3987:3996  liquidity */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":3976:3983  balance */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":3976:3996  balance >= liquidity */\n      lt\n      iszero\n        /* \"contracts/token/SimpleSwap.sol\":3968:4016  require(balance >= liquidity, \"LP insufficient\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/token/SimpleSwap.sol\":4080:4099  uint256 totalSupply */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":4102:4115  totalSupply() */\n      tag_196\n        /* \"contracts/token/SimpleSwap.sol\":4102:4113  totalSupply */\n      tag_38\n        /* \"contracts/token/SimpleSwap.sol\":4102:4115  totalSupply() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/token/SimpleSwap.sol\":4080:4115  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4163:4174  totalSupply */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":4152:4160  reserve0 */\n      sload(0x07)\n        /* \"contracts/token/SimpleSwap.sol\":4140:4149  liquidity */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4140:4160  liquidity * reserve0 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/token/SimpleSwap.sol\":4140:4174  liquidity * reserve0 / totalSupply */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/token/SimpleSwap.sol\":4125:4174  token0Amount = liquidity * reserve0 / totalSupply */\n      swap4\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4222:4233  totalSupply */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":4211:4219  reserve1 */\n      sload(0x08)\n        /* \"contracts/token/SimpleSwap.sol\":4199:4208  liquidity */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4199:4219  liquidity * reserve1 */\n      tag_201\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_201:\n        /* \"contracts/token/SimpleSwap.sol\":4199:4233  liquidity * reserve1 / totalSupply */\n      tag_202\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_202:\n        /* \"contracts/token/SimpleSwap.sol\":4184:4233  token1Amount = liquidity * reserve1 / totalSupply */\n      swap3\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4288:4300  token0Amount */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":4254:4260  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":4254:4270  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":4279:4283  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":4254:4285  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_206:\n        /* \"contracts/token/SimpleSwap.sol\":4254:4300  token0.balanceOf(address(this)) - token0Amount */\n      tag_207\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_207:\n        /* \"contracts/token/SimpleSwap.sol\":4243:4251  reserve0 */\n      0x07\n        /* \"contracts/token/SimpleSwap.sol\":4243:4300  reserve0 = token0.balanceOf(address(this)) - token0Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4355:4367  token1Amount */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":4321:4327  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":4321:4337  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":4346:4350  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":4321:4352  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_211:\n        /* \"contracts/token/SimpleSwap.sol\":4321:4367  token1.balanceOf(address(this)) - token1Amount */\n      tag_212\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_212:\n        /* \"contracts/token/SimpleSwap.sol\":4310:4318  reserve1 */\n      0x08\n        /* \"contracts/token/SimpleSwap.sol\":4310:4367  reserve1 = token1.balanceOf(address(this)) - token1Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4397:4425  _burn(msg.sender, liquidity) */\n      tag_213\n        /* \"contracts/token/SimpleSwap.sol\":4403:4413  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":4415:4424  liquidity */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4397:4402  _burn */\n      tag_214\n        /* \"contracts/token/SimpleSwap.sol\":4397:4425  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/token/SimpleSwap.sol\":4459:4465  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":4459:4474  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/SimpleSwap.sol\":4475:4485  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":4487:4499  token0Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4459:4500  token0.transfer(msg.sender, token0Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_215:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_218:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4510:4516  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":4510:4525  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/SimpleSwap.sol\":4526:4536  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":4538:4550  token1Amount */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":4510:4551  token1.transfer(msg.sender, token1Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_219:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_222:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":4583:4593  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":4566:4632  LiquidityRemoved(msg.sender, liquidity, token0Amount,token1Amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d\n        /* \"contracts/token/SimpleSwap.sol\":4595:4604  liquidity */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4606:4618  token0Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4619:4631  token1Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":4566:4632  LiquidityRemoved(msg.sender, liquidity, token0Amount,token1Amount) */\n      mload(0x40)\n      tag_223\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token/SimpleSwap.sol\":3891:4639  {... */\n      pop\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":3787:4639  function removeLiquidity(uint256 liquidity) public returns (uint256 token0Amount, uint256 token1Amount) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":1812:3259  function addLiquidity(... */\n    tag_79:\n        /* \"contracts/token/SimpleSwap.sol\":1983:2000  uint256 liquidity */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":2053:2054  0 */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":2038:2050  token0Amount */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":2038:2054  token0Amount > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":2030:2098  require(token0Amount > 0, \"addLiquidity: token0Amount can not zero\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/token/SimpleSwap.sol\":2131:2132  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":2116:2128  token1Amount */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":2116:2132  token1Amount > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":2108:2176  require(token1Amount > 0, \"addLiquidity: token1Amount can not zero\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/token/SimpleSwap.sol\":2277:2289  token0Amount */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":2243:2249  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":2243:2259  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":2268:2272  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":2243:2274  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_235:\n        /* \"contracts/token/SimpleSwap.sol\":2243:2289  token0.balanceOf(address(this)) + token0Amount */\n      tag_236\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_236:\n        /* \"contracts/token/SimpleSwap.sol\":2232:2240  reserve0 */\n      0x07\n        /* \"contracts/token/SimpleSwap.sol\":2232:2289  reserve0 = token0.balanceOf(address(this)) + token0Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":2344:2356  token1Amount */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":2310:2316  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":2310:2326  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/token/SimpleSwap.sol\":2335:2339  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":2310:2341  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_240:\n        /* \"contracts/token/SimpleSwap.sol\":2310:2356  token1.balanceOf(address(this)) + token1Amount */\n      tag_241\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_241:\n        /* \"contracts/token/SimpleSwap.sol\":2299:2307  reserve1 */\n      0x08\n        /* \"contracts/token/SimpleSwap.sol\":2299:2356  reserve1 = token1.balanceOf(address(this)) + token1Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":2366:2385  uint256 totalSupply */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":2388:2401  totalSupply() */\n      tag_242\n        /* \"contracts/token/SimpleSwap.sol\":2388:2399  totalSupply */\n      tag_38\n        /* \"contracts/token/SimpleSwap.sol\":2388:2401  totalSupply() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/token/SimpleSwap.sol\":2366:2401  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":2430:2431  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":2415:2426  totalSupply */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":2415:2431  totalSupply == 0 */\n      sub\n        /* \"contracts/token/SimpleSwap.sol\":2411:2829  if (totalSupply == 0) {... */\n      tag_243\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":2536:2569  sqrt(token0Amount * token1Amount) */\n      tag_244\n        /* \"contracts/token/SimpleSwap.sol\":2556:2568  token1Amount */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":2541:2553  token0Amount */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":2541:2568  token0Amount * token1Amount */\n      tag_245\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_245:\n        /* \"contracts/token/SimpleSwap.sol\":2536:2540  sqrt */\n      tag_246\n        /* \"contracts/token/SimpleSwap.sol\":2536:2569  sqrt(token0Amount * token1Amount) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/token/SimpleSwap.sol\":2524:2569  liquidity = sqrt(token0Amount * token1Amount) */\n      swap2\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":2411:2829  if (totalSupply == 0) {... */\n      jump(tag_247)\n    tag_243:\n        /* \"contracts/token/SimpleSwap.sol\":2737:2818  min(token0Amount * totalSupply / reserve0, token1Amount * totalSupply / reserve1) */\n      tag_248\n        /* \"contracts/token/SimpleSwap.sol\":2770:2778  reserve0 */\n      sload(0x07)\n        /* \"contracts/token/SimpleSwap.sol\":2756:2767  totalSupply */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":2741:2753  token0Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":2741:2767  token0Amount * totalSupply */\n      tag_249\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_249:\n        /* \"contracts/token/SimpleSwap.sol\":2741:2778  token0Amount * totalSupply / reserve0 */\n      tag_250\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_250:\n        /* \"contracts/token/SimpleSwap.sol\":2809:2817  reserve1 */\n      sload(0x08)\n        /* \"contracts/token/SimpleSwap.sol\":2795:2806  totalSupply */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":2780:2792  token1Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":2780:2806  token1Amount * totalSupply */\n      tag_251\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_251:\n        /* \"contracts/token/SimpleSwap.sol\":2780:2817  token1Amount * totalSupply / reserve1 */\n      tag_252\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_252:\n        /* \"contracts/token/SimpleSwap.sol\":2737:2740  min */\n      tag_253\n        /* \"contracts/token/SimpleSwap.sol\":2737:2818  min(token0Amount * totalSupply / reserve0, token1Amount * totalSupply / reserve1) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/token/SimpleSwap.sol\":2725:2818  liquidity = min(token0Amount * totalSupply / reserve0, token1Amount * totalSupply / reserve1) */\n      swap2\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":2411:2829  if (totalSupply == 0) {... */\n    tag_247:\n        /* \"contracts/token/SimpleSwap.sol\":2884:2885  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":2872:2881  liquidity */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":2872:2885  liquidity > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":2864:2926  require(liquidity > 0, \"addLiquidity: insufficient liquidity\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/token/SimpleSwap.sol\":2956:2984  _mint(msg.sender, liquidity) */\n      tag_257\n        /* \"contracts/token/SimpleSwap.sol\":2962:2972  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":2974:2983  liquidity */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":2956:2961  _mint */\n      tag_258\n        /* \"contracts/token/SimpleSwap.sol\":2956:2984  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/token/SimpleSwap.sol\":3018:3024  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":3018:3037  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/token/SimpleSwap.sol\":3038:3048  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":3058:3062  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":3065:3077  token0Amount */\n      dup8\n        /* \"contracts/token/SimpleSwap.sol\":3018:3078  token0.transferFrom(msg.sender, address(this), token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_259:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_262:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":3088:3094  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/SimpleSwap.sol\":3088:3107  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/token/SimpleSwap.sol\":3108:3118  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":3128:3132  this */\n      address\n        /* \"contracts/token/SimpleSwap.sol\":3135:3147  token1Amount */\n      dup7\n        /* \"contracts/token/SimpleSwap.sol\":3088:3148  token1.transferFrom(msg.sender, address(this), token1Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_263:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_266:\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":3202:3212  msg.sender */\n      caller\n        /* \"contracts/token/SimpleSwap.sol\":3187:3252  LiquidityAdded(msg.sender, token0Amount, token1Amount, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n        /* \"contracts/token/SimpleSwap.sol\":3214:3226  token0Amount */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":3228:3240  token1Amount */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":3242:3251  liquidity */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":3187:3252  LiquidityAdded(msg.sender, token0Amount, token1Amount, liquidity) */\n      mload(0x40)\n      tag_267\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token/SimpleSwap.sol\":2002:3259  {... */\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":1812:3259  function addLiquidity(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":7255:7830  function calculateSwapOutAmount(... */\n    tag_84:\n        /* \"contracts/token/SimpleSwap.sol\":7489:7506  uint256 amountOut */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":7537:7538  0 */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":7526:7534  amountIn */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":7526:7538  amountIn > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":7518:7589  require(amountIn > 0, \"calculateSwapOutAmount: amountIn must positive\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/token/SimpleSwap.sol\":7619:7620  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":7607:7616  reserveIn */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":7607:7620  reserveIn > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":7599:7672  require(reserveIn > 0, \"calculateSwapOutAmount: reserveIn must positive\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"contracts/token/SimpleSwap.sol\":7703:7704  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":7690:7700  reserveOut */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":7690:7704  reserveOut > 0 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":7682:7757  require(reserveOut > 0, \"calculateSwapOutAmount: reserveOut must positive\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/token/SimpleSwap.sol\":7814:7822  amountIn */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":7804:7813  reserveIn */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":7804:7822  reserveIn+amountIn */\n      tag_278\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_278:\n        /* \"contracts/token/SimpleSwap.sol\":7789:7799  reserveOut */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":7780:7788  amountIn */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":7780:7799  amountIn*reserveOut */\n      tag_279\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_279:\n        /* \"contracts/token/SimpleSwap.sol\":7779:7823  (amountIn*reserveOut) / (reserveIn+amountIn) */\n      tag_280\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_280:\n        /* \"contracts/token/SimpleSwap.sol\":7767:7823  amountOut = (amountIn*reserveOut) / (reserveIn+amountIn) */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":7255:7830  function calculateSwapOutAmount(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":877:897  IERC20 public token1 */\n    tag_91:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":7863:8199  function sqrt(uint256 num) internal pure returns (uint256 result) {... */\n    tag_246:\n        /* \"contracts/token/SimpleSwap.sol\":7913:7927  uint256 result */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":7949:7950  3 */\n      0x03\n        /* \"contracts/token/SimpleSwap.sol\":7943:7946  num */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":7943:7950  num > 3 */\n      gt\n        /* \"contracts/token/SimpleSwap.sol\":7939:8193  if (num > 3) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":7975:7978  num */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":7966:7978  result = num */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":7992:8001  uint256 x */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":8014:8015  1 */\n      0x01\n        /* \"contracts/token/SimpleSwap.sol\":8010:8011  2 */\n      0x02\n        /* \"contracts/token/SimpleSwap.sol\":8004:8007  num */\n      dup5\n        /* \"contracts/token/SimpleSwap.sol\":8004:8011  num / 2 */\n      tag_309\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_309:\n        /* \"contracts/token/SimpleSwap.sol\":8004:8015  num / 2 + 1 */\n      tag_310\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_310:\n        /* \"contracts/token/SimpleSwap.sol\":7992:8015  uint256 x = num / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":8029:8130  while (x < result) {... */\n    tag_311:\n        /* \"contracts/token/SimpleSwap.sol\":8040:8046  result */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":8036:8037  x */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":8036:8046  x < result */\n      lt\n        /* \"contracts/token/SimpleSwap.sol\":8029:8130  while (x < result) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":8075:8076  x */\n      dup1\n        /* \"contracts/token/SimpleSwap.sol\":8066:8076  result = x */\n      swap2\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":8114:8115  2 */\n      0x02\n        /* \"contracts/token/SimpleSwap.sol\":8109:8110  x */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":8105:8106  x */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":8099:8102  num */\n      dup6\n        /* \"contracts/token/SimpleSwap.sol\":8099:8106  num / x */\n      tag_313\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_313:\n        /* \"contracts/token/SimpleSwap.sol\":8099:8110  num / x + x */\n      tag_314\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_314:\n        /* \"contracts/token/SimpleSwap.sol\":8098:8115  (num / x + x) / 2 */\n      tag_315\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_315:\n        /* \"contracts/token/SimpleSwap.sol\":8094:8115  x = (num / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":8029:8130  while (x < result) {... */\n      jump(tag_311)\n    tag_312:\n        /* \"contracts/token/SimpleSwap.sol\":7952:8140  {... */\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":7939:8193  if (num > 3) {... */\n      jump(tag_316)\n    tag_308:\n        /* \"contracts/token/SimpleSwap.sol\":8155:8156  0 */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":8148:8151  num */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":8148:8156  num != 0 */\n      eq\n        /* \"contracts/token/SimpleSwap.sol\":8145:8193  if(num != 0) {... */\n      tag_317\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":8181:8182  1 */\n      0x01\n        /* \"contracts/token/SimpleSwap.sol\":8172:8182  result = 1 */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":8145:8193  if(num != 0) {... */\n    tag_317:\n        /* \"contracts/token/SimpleSwap.sol\":7939:8193  if (num > 3) {... */\n    tag_316:\n        /* \"contracts/token/SimpleSwap.sol\":7863:8199  function sqrt(uint256 num) internal pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/SimpleSwap.sol\":8224:8352  function min(uint num0, uint256 num1) internal pure returns (uint256 result) {... */\n    tag_253:\n        /* \"contracts/token/SimpleSwap.sol\":8285:8299  uint256 result */\n      0x00\n        /* \"contracts/token/SimpleSwap.sol\":8327:8331  num1 */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":8320:8324  num0 */\n      dup4\n        /* \"contracts/token/SimpleSwap.sol\":8320:8331  num0 < num1 */\n      lt\n        /* \"contracts/token/SimpleSwap.sol\":8320:8345  num0 < num1 ? num0 : num1 */\n      tag_319\n      jumpi\n        /* \"contracts/token/SimpleSwap.sol\":8341:8345  num1 */\n      dup2\n        /* \"contracts/token/SimpleSwap.sol\":8320:8345  num0 < num1 ? num0 : num1 */\n      jump(tag_320)\n    tag_319:\n        /* \"contracts/token/SimpleSwap.sol\":8334:8338  num0 */\n      dup3\n        /* \"contracts/token/SimpleSwap.sol\":8320:8345  num0 < num1 ? num0 : num1 */\n    tag_320:\n        /* \"contracts/token/SimpleSwap.sol\":8311:8345  result = num0 < num1 ? num0 : num1 */\n      swap1\n      pop\n        /* \"contracts/token/SimpleSwap.sol\":8224:8352  function min(uint num0, uint256 num1) internal pure returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_331\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_334\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_334:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_335)\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_339)\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_340\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_341:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_342:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_343:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_344:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_345:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_400\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_341\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":711:782   */\n      tag_401\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_342\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_402\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_343\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":881:910   */\n      tag_403\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_344\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_405\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_345\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_347:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_349:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_350:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_411\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_349\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_351:\n        /* \"#utility.yul\":1876:1900   */\n      tag_413\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_350\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_414:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_352:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_416\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_351\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_353:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_354:\n        /* \"#utility.yul\":2232:2256   */\n      tag_419\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_353\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_420:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_355:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_422\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_354\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_425\n      tag_347\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2525:2644   */\n    tag_424:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_426\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_352\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_427\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_355\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_356:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_357:\n        /* \"#utility.yul\":3089:3110   */\n      tag_430\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_356\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_432\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_357\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3399   */\n    tag_358:\n        /* \"#utility.yul\":3367:3370   */\n      0x00\n        /* \"#utility.yul\":3388:3393   */\n      dup2\n        /* \"#utility.yul\":3381:3393   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3405:3547   */\n    tag_359:\n        /* \"#utility.yul\":3455:3464   */\n      0x00\n        /* \"#utility.yul\":3488:3541   */\n      tag_435\n        /* \"#utility.yul\":3506:3540   */\n      tag_436\n        /* \"#utility.yul\":3515:3539   */\n      tag_437\n        /* \"#utility.yul\":3533:3538   */\n      dup5\n        /* \"#utility.yul\":3515:3539   */\n      tag_349\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3506:3540   */\n      tag_358\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3488:3541   */\n      tag_349\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3475:3541   */\n      swap1\n      pop\n        /* \"#utility.yul\":3405:3547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3553:3679   */\n    tag_360:\n        /* \"#utility.yul\":3603:3612   */\n      0x00\n        /* \"#utility.yul\":3636:3673   */\n      tag_439\n        /* \"#utility.yul\":3667:3672   */\n      dup3\n        /* \"#utility.yul\":3636:3673   */\n      tag_359\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3623:3673   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3825   */\n    tag_361:\n        /* \"#utility.yul\":3749:3758   */\n      0x00\n        /* \"#utility.yul\":3782:3819   */\n      tag_441\n        /* \"#utility.yul\":3813:3818   */\n      dup3\n        /* \"#utility.yul\":3782:3819   */\n      tag_360\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3769:3819   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:3990   */\n    tag_362:\n        /* \"#utility.yul\":3932:3983   */\n      tag_443\n        /* \"#utility.yul\":3977:3982   */\n      dup2\n        /* \"#utility.yul\":3932:3983   */\n      tag_361\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3927:3930   */\n      dup3\n        /* \"#utility.yul\":3920:3984   */\n      mstore\n        /* \"#utility.yul\":3831:3990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3996:4246   */\n    tag_36:\n        /* \"#utility.yul\":4103:4107   */\n      0x00\n        /* \"#utility.yul\":4141:4143   */\n      0x20\n        /* \"#utility.yul\":4130:4139   */\n      dup3\n        /* \"#utility.yul\":4126:4144   */\n      add\n        /* \"#utility.yul\":4118:4144   */\n      swap1\n      pop\n        /* \"#utility.yul\":4154:4239   */\n      tag_445\n        /* \"#utility.yul\":4236:4237   */\n      0x00\n        /* \"#utility.yul\":4225:4234   */\n      dup4\n        /* \"#utility.yul\":4221:4238   */\n      add\n        /* \"#utility.yul\":4212:4218   */\n      dup5\n        /* \"#utility.yul\":4154:4239   */\n      tag_362\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3996:4246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4370   */\n    tag_363:\n        /* \"#utility.yul\":4339:4363   */\n      tag_447\n        /* \"#utility.yul\":4357:4362   */\n      dup2\n        /* \"#utility.yul\":4339:4363   */\n      tag_353\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4334:4337   */\n      dup3\n        /* \"#utility.yul\":4327:4364   */\n      mstore\n        /* \"#utility.yul\":4252:4370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4598   */\n    tag_40:\n        /* \"#utility.yul\":4469:4473   */\n      0x00\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4496:4505   */\n      dup3\n        /* \"#utility.yul\":4492:4510   */\n      add\n        /* \"#utility.yul\":4484:4510   */\n      swap1\n      pop\n        /* \"#utility.yul\":4520:4591   */\n      tag_449\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4577:4586   */\n      dup4\n        /* \"#utility.yul\":4573:4590   */\n      add\n        /* \"#utility.yul\":4564:4570   */\n      dup5\n        /* \"#utility.yul\":4520:4591   */\n      tag_363\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4376:4598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4604:5223   */\n    tag_43:\n        /* \"#utility.yul\":4681:4687   */\n      0x00\n        /* \"#utility.yul\":4689:4695   */\n      dup1\n        /* \"#utility.yul\":4697:4703   */\n      0x00\n        /* \"#utility.yul\":4746:4748   */\n      0x60\n        /* \"#utility.yul\":4734:4743   */\n      dup5\n        /* \"#utility.yul\":4725:4732   */\n      dup7\n        /* \"#utility.yul\":4721:4744   */\n      sub\n        /* \"#utility.yul\":4717:4749   */\n      slt\n        /* \"#utility.yul\":4714:4833   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":4752:4831   */\n      tag_452\n      tag_347\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4714:4833   */\n    tag_451:\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4897:4950   */\n      tag_453\n        /* \"#utility.yul\":4942:4949   */\n      dup7\n        /* \"#utility.yul\":4933:4939   */\n      dup3\n        /* \"#utility.yul\":4922:4931   */\n      dup8\n        /* \"#utility.yul\":4918:4940   */\n      add\n        /* \"#utility.yul\":4897:4950   */\n      tag_352\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4887:4950   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:4960   */\n      pop\n        /* \"#utility.yul\":4999:5001   */\n      0x20\n        /* \"#utility.yul\":5025:5078   */\n      tag_454\n        /* \"#utility.yul\":5070:5077   */\n      dup7\n        /* \"#utility.yul\":5061:5067   */\n      dup3\n        /* \"#utility.yul\":5050:5059   */\n      dup8\n        /* \"#utility.yul\":5046:5068   */\n      add\n        /* \"#utility.yul\":5025:5078   */\n      tag_352\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5015:5078   */\n      swap3\n      pop\n        /* \"#utility.yul\":4970:5088   */\n      pop\n        /* \"#utility.yul\":5127:5129   */\n      0x40\n        /* \"#utility.yul\":5153:5206   */\n      tag_455\n        /* \"#utility.yul\":5198:5205   */\n      dup7\n        /* \"#utility.yul\":5189:5195   */\n      dup3\n        /* \"#utility.yul\":5178:5187   */\n      dup8\n        /* \"#utility.yul\":5174:5196   */\n      add\n        /* \"#utility.yul\":5153:5206   */\n      tag_355\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5143:5206   */\n      swap2\n      pop\n        /* \"#utility.yul\":5098:5216   */\n      pop\n        /* \"#utility.yul\":4604:5223   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5229:5315   */\n    tag_364:\n        /* \"#utility.yul\":5264:5271   */\n      0x00\n        /* \"#utility.yul\":5304:5308   */\n      0xff\n        /* \"#utility.yul\":5297:5302   */\n      dup3\n        /* \"#utility.yul\":5293:5309   */\n      and\n        /* \"#utility.yul\":5282:5309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5433   */\n    tag_365:\n        /* \"#utility.yul\":5404:5426   */\n      tag_458\n        /* \"#utility.yul\":5420:5425   */\n      dup2\n        /* \"#utility.yul\":5404:5426   */\n      tag_364\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5399:5402   */\n      dup3\n        /* \"#utility.yul\":5392:5427   */\n      mstore\n        /* \"#utility.yul\":5321:5433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5653   */\n    tag_49:\n        /* \"#utility.yul\":5528:5532   */\n      0x00\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5551:5569   */\n      add\n        /* \"#utility.yul\":5543:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5646   */\n      tag_460\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5632:5641   */\n      dup4\n        /* \"#utility.yul\":5628:5645   */\n      add\n        /* \"#utility.yul\":5619:5625   */\n      dup5\n        /* \"#utility.yul\":5579:5646   */\n      tag_365\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5439:5653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5769   */\n    tag_366:\n        /* \"#utility.yul\":5710:5717   */\n      0x00\n        /* \"#utility.yul\":5739:5763   */\n      tag_462\n        /* \"#utility.yul\":5757:5762   */\n      dup3\n        /* \"#utility.yul\":5739:5763   */\n      tag_350\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5728:5763   */\n      swap1\n      pop\n        /* \"#utility.yul\":5659:5769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5775:5925   */\n    tag_367:\n        /* \"#utility.yul\":5862:5900   */\n      tag_464\n        /* \"#utility.yul\":5894:5899   */\n      dup2\n        /* \"#utility.yul\":5862:5900   */\n      tag_366\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5855:5860   */\n      dup2\n        /* \"#utility.yul\":5852:5901   */\n      eq\n        /* \"#utility.yul\":5842:5919   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":5915:5916   */\n      0x00\n        /* \"#utility.yul\":5912:5913   */\n      dup1\n        /* \"#utility.yul\":5905:5917   */\n      revert\n        /* \"#utility.yul\":5842:5919   */\n    tag_465:\n        /* \"#utility.yul\":5775:5925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6098   */\n    tag_368:\n        /* \"#utility.yul\":5991:5996   */\n      0x00\n        /* \"#utility.yul\":6029:6035   */\n      dup2\n        /* \"#utility.yul\":6016:6036   */\n      calldataload\n        /* \"#utility.yul\":6007:6036   */\n      swap1\n      pop\n        /* \"#utility.yul\":6045:6092   */\n      tag_467\n        /* \"#utility.yul\":6086:6091   */\n      dup2\n        /* \"#utility.yul\":6045:6092   */\n      tag_367\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5931:6098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6751   */\n    tag_52:\n        /* \"#utility.yul\":6195:6201   */\n      0x00\n        /* \"#utility.yul\":6203:6209   */\n      dup1\n        /* \"#utility.yul\":6211:6217   */\n      0x00\n        /* \"#utility.yul\":6260:6262   */\n      0x60\n        /* \"#utility.yul\":6248:6257   */\n      dup5\n        /* \"#utility.yul\":6239:6246   */\n      dup7\n        /* \"#utility.yul\":6235:6258   */\n      sub\n        /* \"#utility.yul\":6231:6263   */\n      slt\n        /* \"#utility.yul\":6228:6347   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":6266:6345   */\n      tag_470\n      tag_347\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6228:6347   */\n    tag_469:\n        /* \"#utility.yul\":6386:6387   */\n      0x00\n        /* \"#utility.yul\":6411:6464   */\n      tag_471\n        /* \"#utility.yul\":6456:6463   */\n      dup7\n        /* \"#utility.yul\":6447:6453   */\n      dup3\n        /* \"#utility.yul\":6436:6445   */\n      dup8\n        /* \"#utility.yul\":6432:6454   */\n      add\n        /* \"#utility.yul\":6411:6464   */\n      tag_355\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6401:6464   */\n      swap4\n      pop\n        /* \"#utility.yul\":6357:6474   */\n      pop\n        /* \"#utility.yul\":6513:6515   */\n      0x20\n        /* \"#utility.yul\":6539:6606   */\n      tag_472\n        /* \"#utility.yul\":6598:6605   */\n      dup7\n        /* \"#utility.yul\":6589:6595   */\n      dup3\n        /* \"#utility.yul\":6578:6587   */\n      dup8\n        /* \"#utility.yul\":6574:6596   */\n      add\n        /* \"#utility.yul\":6539:6606   */\n      tag_368\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6529:6606   */\n      swap3\n      pop\n        /* \"#utility.yul\":6484:6616   */\n      pop\n        /* \"#utility.yul\":6655:6657   */\n      0x40\n        /* \"#utility.yul\":6681:6734   */\n      tag_473\n        /* \"#utility.yul\":6726:6733   */\n      dup7\n        /* \"#utility.yul\":6717:6723   */\n      dup3\n        /* \"#utility.yul\":6706:6715   */\n      dup8\n        /* \"#utility.yul\":6702:6724   */\n      add\n        /* \"#utility.yul\":6681:6734   */\n      tag_355\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6671:6734   */\n      swap2\n      pop\n        /* \"#utility.yul\":6626:6744   */\n      pop\n        /* \"#utility.yul\":6104:6751   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6757:7117   */\n    tag_55:\n        /* \"#utility.yul\":6892:6896   */\n      0x00\n        /* \"#utility.yul\":6930:6932   */\n      0x40\n        /* \"#utility.yul\":6919:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6933   */\n      add\n        /* \"#utility.yul\":6907:6933   */\n      swap1\n      pop\n        /* \"#utility.yul\":6943:7014   */\n      tag_475\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7000:7009   */\n      dup4\n        /* \"#utility.yul\":6996:7013   */\n      add\n        /* \"#utility.yul\":6987:6993   */\n      dup6\n        /* \"#utility.yul\":6943:7014   */\n      tag_363\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7024:7110   */\n      tag_476\n        /* \"#utility.yul\":7106:7108   */\n      0x20\n        /* \"#utility.yul\":7095:7104   */\n      dup4\n        /* \"#utility.yul\":7091:7109   */\n      add\n        /* \"#utility.yul\":7082:7088   */\n      dup5\n        /* \"#utility.yul\":7024:7110   */\n      tag_362\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6757:7117   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7123:7452   */\n    tag_64:\n        /* \"#utility.yul\":7182:7188   */\n      0x00\n        /* \"#utility.yul\":7231:7233   */\n      0x20\n        /* \"#utility.yul\":7219:7228   */\n      dup3\n        /* \"#utility.yul\":7210:7217   */\n      dup5\n        /* \"#utility.yul\":7206:7229   */\n      sub\n        /* \"#utility.yul\":7202:7234   */\n      slt\n        /* \"#utility.yul\":7199:7318   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7237:7316   */\n      tag_479\n      tag_347\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7199:7318   */\n    tag_478:\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7382:7435   */\n      tag_480\n        /* \"#utility.yul\":7427:7434   */\n      dup5\n        /* \"#utility.yul\":7418:7424   */\n      dup3\n        /* \"#utility.yul\":7407:7416   */\n      dup6\n        /* \"#utility.yul\":7403:7425   */\n      add\n        /* \"#utility.yul\":7382:7435   */\n      tag_352\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7372:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7328:7445   */\n      pop\n        /* \"#utility.yul\":7123:7452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7787   */\n    tag_72:\n        /* \"#utility.yul\":7517:7523   */\n      0x00\n        /* \"#utility.yul\":7566:7568   */\n      0x20\n        /* \"#utility.yul\":7554:7563   */\n      dup3\n        /* \"#utility.yul\":7545:7552   */\n      dup5\n        /* \"#utility.yul\":7541:7564   */\n      sub\n        /* \"#utility.yul\":7537:7569   */\n      slt\n        /* \"#utility.yul\":7534:7653   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7572:7651   */\n      tag_483\n      tag_347\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7534:7653   */\n    tag_482:\n        /* \"#utility.yul\":7692:7693   */\n      0x00\n        /* \"#utility.yul\":7717:7770   */\n      tag_484\n        /* \"#utility.yul\":7762:7769   */\n      dup5\n        /* \"#utility.yul\":7753:7759   */\n      dup3\n        /* \"#utility.yul\":7742:7751   */\n      dup6\n        /* \"#utility.yul\":7738:7760   */\n      add\n        /* \"#utility.yul\":7717:7770   */\n      tag_355\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7707:7770   */\n      swap2\n      pop\n        /* \"#utility.yul\":7663:7780   */\n      pop\n        /* \"#utility.yul\":7458:7787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7793:8125   */\n    tag_75:\n        /* \"#utility.yul\":7914:7918   */\n      0x00\n        /* \"#utility.yul\":7952:7954   */\n      0x40\n        /* \"#utility.yul\":7941:7950   */\n      dup3\n        /* \"#utility.yul\":7937:7955   */\n      add\n        /* \"#utility.yul\":7929:7955   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:8036   */\n      tag_486\n        /* \"#utility.yul\":8033:8034   */\n      0x00\n        /* \"#utility.yul\":8022:8031   */\n      dup4\n        /* \"#utility.yul\":8018:8035   */\n      add\n        /* \"#utility.yul\":8009:8015   */\n      dup6\n        /* \"#utility.yul\":7965:8036   */\n      tag_363\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8046:8118   */\n      tag_487\n        /* \"#utility.yul\":8114:8116   */\n      0x20\n        /* \"#utility.yul\":8103:8112   */\n      dup4\n        /* \"#utility.yul\":8099:8117   */\n      add\n        /* \"#utility.yul\":8090:8096   */\n      dup5\n        /* \"#utility.yul\":8046:8118   */\n      tag_363\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7793:8125   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8605   */\n    tag_78:\n        /* \"#utility.yul\":8199:8205   */\n      0x00\n        /* \"#utility.yul\":8207:8213   */\n      dup1\n        /* \"#utility.yul\":8256:8258   */\n      0x40\n        /* \"#utility.yul\":8244:8253   */\n      dup4\n        /* \"#utility.yul\":8235:8242   */\n      dup6\n        /* \"#utility.yul\":8231:8254   */\n      sub\n        /* \"#utility.yul\":8227:8259   */\n      slt\n        /* \"#utility.yul\":8224:8343   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":8262:8341   */\n      tag_490\n      tag_347\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8224:8343   */\n    tag_489:\n        /* \"#utility.yul\":8382:8383   */\n      0x00\n        /* \"#utility.yul\":8407:8460   */\n      tag_491\n        /* \"#utility.yul\":8452:8459   */\n      dup6\n        /* \"#utility.yul\":8443:8449   */\n      dup3\n        /* \"#utility.yul\":8432:8441   */\n      dup7\n        /* \"#utility.yul\":8428:8450   */\n      add\n        /* \"#utility.yul\":8407:8460   */\n      tag_355\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8397:8460   */\n      swap3\n      pop\n        /* \"#utility.yul\":8353:8470   */\n      pop\n        /* \"#utility.yul\":8509:8511   */\n      0x20\n        /* \"#utility.yul\":8535:8588   */\n      tag_492\n        /* \"#utility.yul\":8580:8587   */\n      dup6\n        /* \"#utility.yul\":8571:8577   */\n      dup3\n        /* \"#utility.yul\":8560:8569   */\n      dup7\n        /* \"#utility.yul\":8556:8578   */\n      add\n        /* \"#utility.yul\":8535:8588   */\n      tag_355\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8525:8588   */\n      swap2\n      pop\n        /* \"#utility.yul\":8480:8598   */\n      pop\n        /* \"#utility.yul\":8131:8605   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8611:9230   */\n    tag_83:\n        /* \"#utility.yul\":8688:8694   */\n      0x00\n        /* \"#utility.yul\":8696:8702   */\n      dup1\n        /* \"#utility.yul\":8704:8710   */\n      0x00\n        /* \"#utility.yul\":8753:8755   */\n      0x60\n        /* \"#utility.yul\":8741:8750   */\n      dup5\n        /* \"#utility.yul\":8732:8739   */\n      dup7\n        /* \"#utility.yul\":8728:8751   */\n      sub\n        /* \"#utility.yul\":8724:8756   */\n      slt\n        /* \"#utility.yul\":8721:8840   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8759:8838   */\n      tag_495\n      tag_347\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8721:8840   */\n    tag_494:\n        /* \"#utility.yul\":8879:8880   */\n      0x00\n        /* \"#utility.yul\":8904:8957   */\n      tag_496\n        /* \"#utility.yul\":8949:8956   */\n      dup7\n        /* \"#utility.yul\":8940:8946   */\n      dup3\n        /* \"#utility.yul\":8929:8938   */\n      dup8\n        /* \"#utility.yul\":8925:8947   */\n      add\n        /* \"#utility.yul\":8904:8957   */\n      tag_355\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8894:8957   */\n      swap4\n      pop\n        /* \"#utility.yul\":8850:8967   */\n      pop\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"#utility.yul\":9032:9085   */\n      tag_497\n        /* \"#utility.yul\":9077:9084   */\n      dup7\n        /* \"#utility.yul\":9068:9074   */\n      dup3\n        /* \"#utility.yul\":9057:9066   */\n      dup8\n        /* \"#utility.yul\":9053:9075   */\n      add\n        /* \"#utility.yul\":9032:9085   */\n      tag_355\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9022:9085   */\n      swap3\n      pop\n        /* \"#utility.yul\":8977:9095   */\n      pop\n        /* \"#utility.yul\":9134:9136   */\n      0x40\n        /* \"#utility.yul\":9160:9213   */\n      tag_498\n        /* \"#utility.yul\":9205:9212   */\n      dup7\n        /* \"#utility.yul\":9196:9202   */\n      dup3\n        /* \"#utility.yul\":9185:9194   */\n      dup8\n        /* \"#utility.yul\":9181:9203   */\n      add\n        /* \"#utility.yul\":9160:9213   */\n      tag_355\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9150:9213   */\n      swap2\n      pop\n        /* \"#utility.yul\":9105:9223   */\n      pop\n        /* \"#utility.yul\":8611:9230   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9236:9710   */\n    tag_95:\n        /* \"#utility.yul\":9304:9310   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup1\n        /* \"#utility.yul\":9361:9363   */\n      0x40\n        /* \"#utility.yul\":9349:9358   */\n      dup4\n        /* \"#utility.yul\":9340:9347   */\n      dup6\n        /* \"#utility.yul\":9336:9359   */\n      sub\n        /* \"#utility.yul\":9332:9364   */\n      slt\n        /* \"#utility.yul\":9329:9448   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":9367:9446   */\n      tag_501\n      tag_347\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9329:9448   */\n    tag_500:\n        /* \"#utility.yul\":9487:9488   */\n      0x00\n        /* \"#utility.yul\":9512:9565   */\n      tag_502\n        /* \"#utility.yul\":9557:9564   */\n      dup6\n        /* \"#utility.yul\":9548:9554   */\n      dup3\n        /* \"#utility.yul\":9537:9546   */\n      dup7\n        /* \"#utility.yul\":9533:9555   */\n      add\n        /* \"#utility.yul\":9512:9565   */\n      tag_352\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9502:9565   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9575   */\n      pop\n        /* \"#utility.yul\":9614:9616   */\n      0x20\n        /* \"#utility.yul\":9640:9693   */\n      tag_503\n        /* \"#utility.yul\":9685:9692   */\n      dup6\n        /* \"#utility.yul\":9676:9682   */\n      dup3\n        /* \"#utility.yul\":9665:9674   */\n      dup7\n        /* \"#utility.yul\":9661:9683   */\n      add\n        /* \"#utility.yul\":9640:9693   */\n      tag_352\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9630:9693   */\n      swap2\n      pop\n        /* \"#utility.yul\":9585:9703   */\n      pop\n        /* \"#utility.yul\":9236:9710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9896   */\n    tag_369:\n        /* \"#utility.yul\":9764:9841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9761:9762   */\n      0x00\n        /* \"#utility.yul\":9754:9842   */\n      mstore\n        /* \"#utility.yul\":9861:9865   */\n      0x22\n        /* \"#utility.yul\":9858:9859   */\n      0x04\n        /* \"#utility.yul\":9851:9866   */\n      mstore\n        /* \"#utility.yul\":9885:9889   */\n      0x24\n        /* \"#utility.yul\":9882:9883   */\n      0x00\n        /* \"#utility.yul\":9875:9890   */\n      revert\n        /* \"#utility.yul\":9902:10222   */\n    tag_100:\n        /* \"#utility.yul\":9946:9952   */\n      0x00\n        /* \"#utility.yul\":9983:9984   */\n      0x02\n        /* \"#utility.yul\":9977:9981   */\n      dup3\n        /* \"#utility.yul\":9973:9985   */\n      div\n        /* \"#utility.yul\":9963:9985   */\n      swap1\n      pop\n        /* \"#utility.yul\":10030:10031   */\n      0x01\n        /* \"#utility.yul\":10024:10028   */\n      dup3\n        /* \"#utility.yul\":10020:10032   */\n      and\n        /* \"#utility.yul\":10051:10069   */\n      dup1\n        /* \"#utility.yul\":10041:10122   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":10107:10111   */\n      0x7f\n        /* \"#utility.yul\":10099:10105   */\n      dup3\n        /* \"#utility.yul\":10095:10112   */\n      and\n        /* \"#utility.yul\":10085:10112   */\n      swap2\n      pop\n        /* \"#utility.yul\":10041:10122   */\n    tag_506:\n        /* \"#utility.yul\":10169:10171   */\n      0x20\n        /* \"#utility.yul\":10161:10167   */\n      dup3\n        /* \"#utility.yul\":10158:10172   */\n      lt\n        /* \"#utility.yul\":10138:10156   */\n      dup2\n        /* \"#utility.yul\":10135:10173   */\n      sub\n        /* \"#utility.yul\":10132:10216   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10188:10206   */\n      tag_508\n      tag_369\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10132:10216   */\n    tag_507:\n        /* \"#utility.yul\":9953:10222   */\n      pop\n        /* \"#utility.yul\":9902:10222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10228:10406   */\n    tag_370:\n        /* \"#utility.yul\":10368:10398   */\n      0x737761703a20616d6f756e74496e206d75737420706f73697469766500000000\n        /* \"#utility.yul\":10364:10365   */\n      0x00\n        /* \"#utility.yul\":10356:10362   */\n      dup3\n        /* \"#utility.yul\":10352:10366   */\n      add\n        /* \"#utility.yul\":10345:10399   */\n      mstore\n        /* \"#utility.yul\":10228:10406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10412:10778   */\n    tag_371:\n        /* \"#utility.yul\":10554:10557   */\n      0x00\n        /* \"#utility.yul\":10575:10642   */\n      tag_511\n        /* \"#utility.yul\":10639:10641   */\n      0x1c\n        /* \"#utility.yul\":10634:10637   */\n      dup4\n        /* \"#utility.yul\":10575:10642   */\n      tag_342\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10568:10642   */\n      swap2\n      pop\n        /* \"#utility.yul\":10651:10744   */\n      tag_512\n        /* \"#utility.yul\":10740:10743   */\n      dup3\n        /* \"#utility.yul\":10651:10744   */\n      tag_370\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10769:10771   */\n      0x20\n        /* \"#utility.yul\":10764:10767   */\n      dup3\n        /* \"#utility.yul\":10760:10772   */\n      add\n        /* \"#utility.yul\":10753:10772   */\n      swap1\n      pop\n        /* \"#utility.yul\":10412:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11203   */\n    tag_121:\n        /* \"#utility.yul\":10950:10954   */\n      0x00\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"#utility.yul\":10977:10986   */\n      dup3\n        /* \"#utility.yul\":10973:10991   */\n      add\n        /* \"#utility.yul\":10965:10991   */\n      swap1\n      pop\n        /* \"#utility.yul\":11037:11046   */\n      dup2\n        /* \"#utility.yul\":11031:11035   */\n      dup2\n        /* \"#utility.yul\":11027:11047   */\n      sub\n        /* \"#utility.yul\":11023:11024   */\n      0x00\n        /* \"#utility.yul\":11012:11021   */\n      dup4\n        /* \"#utility.yul\":11008:11025   */\n      add\n        /* \"#utility.yul\":11001:11048   */\n      mstore\n        /* \"#utility.yul\":11065:11196   */\n      tag_514\n        /* \"#utility.yul\":11191:11195   */\n      dup2\n        /* \"#utility.yul\":11065:11196   */\n      tag_371\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11057:11196   */\n      swap1\n      pop\n        /* \"#utility.yul\":10784:11203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11386   */\n    tag_372:\n        /* \"#utility.yul\":11349:11378   */\n      0x737761703a20746f6b656e496e206e6f7420737570706f727465640000000000\n        /* \"#utility.yul\":11345:11346   */\n      0x00\n        /* \"#utility.yul\":11337:11343   */\n      dup3\n        /* \"#utility.yul\":11333:11347   */\n      add\n        /* \"#utility.yul\":11326:11379   */\n      mstore\n        /* \"#utility.yul\":11209:11386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11392:11758   */\n    tag_373:\n        /* \"#utility.yul\":11534:11537   */\n      0x00\n        /* \"#utility.yul\":11555:11622   */\n      tag_517\n        /* \"#utility.yul\":11619:11621   */\n      0x1b\n        /* \"#utility.yul\":11614:11617   */\n      dup4\n        /* \"#utility.yul\":11555:11622   */\n      tag_342\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11548:11622   */\n      swap2\n      pop\n        /* \"#utility.yul\":11631:11724   */\n      tag_518\n        /* \"#utility.yul\":11720:11723   */\n      dup3\n        /* \"#utility.yul\":11631:11724   */\n      tag_372\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11749:11751   */\n      0x20\n        /* \"#utility.yul\":11744:11747   */\n      dup3\n        /* \"#utility.yul\":11740:11752   */\n      add\n        /* \"#utility.yul\":11733:11752   */\n      swap1\n      pop\n        /* \"#utility.yul\":11392:11758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11764:12183   */\n    tag_125:\n        /* \"#utility.yul\":11930:11934   */\n      0x00\n        /* \"#utility.yul\":11968:11970   */\n      0x20\n        /* \"#utility.yul\":11957:11966   */\n      dup3\n        /* \"#utility.yul\":11953:11971   */\n      add\n        /* \"#utility.yul\":11945:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":12017:12026   */\n      dup2\n        /* \"#utility.yul\":12011:12015   */\n      dup2\n        /* \"#utility.yul\":12007:12027   */\n      sub\n        /* \"#utility.yul\":12003:12004   */\n      0x00\n        /* \"#utility.yul\":11992:12001   */\n      dup4\n        /* \"#utility.yul\":11988:12005   */\n      add\n        /* \"#utility.yul\":11981:12028   */\n      mstore\n        /* \"#utility.yul\":12045:12176   */\n      tag_520\n        /* \"#utility.yul\":12171:12175   */\n      dup2\n        /* \"#utility.yul\":12045:12176   */\n      tag_373\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12037:12176   */\n      swap1\n      pop\n        /* \"#utility.yul\":11764:12183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12189:12307   */\n    tag_374:\n        /* \"#utility.yul\":12276:12300   */\n      tag_522\n        /* \"#utility.yul\":12294:12299   */\n      dup2\n        /* \"#utility.yul\":12276:12300   */\n      tag_350\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12271:12274   */\n      dup3\n        /* \"#utility.yul\":12264:12301   */\n      mstore\n        /* \"#utility.yul\":12189:12307   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12313:12535   */\n    tag_127:\n        /* \"#utility.yul\":12406:12410   */\n      0x00\n        /* \"#utility.yul\":12444:12446   */\n      0x20\n        /* \"#utility.yul\":12433:12442   */\n      dup3\n        /* \"#utility.yul\":12429:12447   */\n      add\n        /* \"#utility.yul\":12421:12447   */\n      swap1\n      pop\n        /* \"#utility.yul\":12457:12528   */\n      tag_524\n        /* \"#utility.yul\":12525:12526   */\n      0x00\n        /* \"#utility.yul\":12514:12523   */\n      dup4\n        /* \"#utility.yul\":12510:12527   */\n      add\n        /* \"#utility.yul\":12501:12507   */\n      dup5\n        /* \"#utility.yul\":12457:12528   */\n      tag_374\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12313:12535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12541:12684   */\n    tag_375:\n        /* \"#utility.yul\":12598:12603   */\n      0x00\n        /* \"#utility.yul\":12629:12635   */\n      dup2\n        /* \"#utility.yul\":12623:12636   */\n      mload\n        /* \"#utility.yul\":12614:12636   */\n      swap1\n      pop\n        /* \"#utility.yul\":12645:12678   */\n      tag_526\n        /* \"#utility.yul\":12672:12677   */\n      dup2\n        /* \"#utility.yul\":12645:12678   */\n      tag_354\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12541:12684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12690:13041   */\n    tag_131:\n        /* \"#utility.yul\":12760:12766   */\n      0x00\n        /* \"#utility.yul\":12809:12811   */\n      0x20\n        /* \"#utility.yul\":12797:12806   */\n      dup3\n        /* \"#utility.yul\":12788:12795   */\n      dup5\n        /* \"#utility.yul\":12784:12807   */\n      sub\n        /* \"#utility.yul\":12780:12812   */\n      slt\n        /* \"#utility.yul\":12777:12896   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":12815:12894   */\n      tag_529\n      tag_347\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12777:12896   */\n    tag_528:\n        /* \"#utility.yul\":12935:12936   */\n      0x00\n        /* \"#utility.yul\":12960:13024   */\n      tag_530\n        /* \"#utility.yul\":13016:13023   */\n      dup5\n        /* \"#utility.yul\":13007:13013   */\n      dup3\n        /* \"#utility.yul\":12996:13005   */\n      dup6\n        /* \"#utility.yul\":12992:13014   */\n      add\n        /* \"#utility.yul\":12960:13024   */\n      tag_375\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12950:13024   */\n      swap2\n      pop\n        /* \"#utility.yul\":12906:13034   */\n      pop\n        /* \"#utility.yul\":12690:13041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13227   */\n    tag_376:\n        /* \"#utility.yul\":13095:13172   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13092:13093   */\n      0x00\n        /* \"#utility.yul\":13085:13173   */\n      mstore\n        /* \"#utility.yul\":13192:13196   */\n      0x11\n        /* \"#utility.yul\":13189:13190   */\n      0x04\n        /* \"#utility.yul\":13182:13197   */\n      mstore\n        /* \"#utility.yul\":13216:13220   */\n      0x24\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13206:13221   */\n      revert\n        /* \"#utility.yul\":13233:13424   */\n    tag_144:\n        /* \"#utility.yul\":13273:13276   */\n      0x00\n        /* \"#utility.yul\":13292:13312   */\n      tag_533\n        /* \"#utility.yul\":13310:13311   */\n      dup3\n        /* \"#utility.yul\":13292:13312   */\n      tag_353\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13287:13312   */\n      swap2\n      pop\n        /* \"#utility.yul\":13326:13346   */\n      tag_534\n        /* \"#utility.yul\":13344:13345   */\n      dup4\n        /* \"#utility.yul\":13326:13346   */\n      tag_353\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13321:13346   */\n      swap3\n      pop\n        /* \"#utility.yul\":13369:13370   */\n      dup3\n        /* \"#utility.yul\":13366:13367   */\n      dup3\n        /* \"#utility.yul\":13362:13371   */\n      add\n        /* \"#utility.yul\":13355:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":13390:13393   */\n      dup1\n        /* \"#utility.yul\":13387:13388   */\n      dup3\n        /* \"#utility.yul\":13384:13394   */\n      gt\n        /* \"#utility.yul\":13381:13417   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":13397:13415   */\n      tag_536\n      tag_376\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13381:13417   */\n    tag_535:\n        /* \"#utility.yul\":13233:13424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13430:13624   */\n    tag_150:\n        /* \"#utility.yul\":13470:13474   */\n      0x00\n        /* \"#utility.yul\":13490:13510   */\n      tag_538\n        /* \"#utility.yul\":13508:13509   */\n      dup3\n        /* \"#utility.yul\":13490:13510   */\n      tag_353\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":13485:13510   */\n      swap2\n      pop\n        /* \"#utility.yul\":13524:13544   */\n      tag_539\n        /* \"#utility.yul\":13542:13543   */\n      dup4\n        /* \"#utility.yul\":13524:13544   */\n      tag_353\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13519:13544   */\n      swap3\n      pop\n        /* \"#utility.yul\":13568:13569   */\n      dup3\n        /* \"#utility.yul\":13565:13566   */\n      dup3\n        /* \"#utility.yul\":13561:13570   */\n      sub\n        /* \"#utility.yul\":13553:13570   */\n      swap1\n      pop\n        /* \"#utility.yul\":13592:13593   */\n      dup2\n        /* \"#utility.yul\":13586:13590   */\n      dup2\n        /* \"#utility.yul\":13583:13594   */\n      gt\n        /* \"#utility.yul\":13580:13617   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":13597:13615   */\n      tag_541\n      tag_376\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13580:13617   */\n    tag_540:\n        /* \"#utility.yul\":13430:13624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:14072   */\n    tag_152:\n        /* \"#utility.yul\":13779:13783   */\n      0x00\n        /* \"#utility.yul\":13817:13819   */\n      0x60\n        /* \"#utility.yul\":13806:13815   */\n      dup3\n        /* \"#utility.yul\":13802:13820   */\n      add\n        /* \"#utility.yul\":13794:13820   */\n      swap1\n      pop\n        /* \"#utility.yul\":13830:13901   */\n      tag_543\n        /* \"#utility.yul\":13898:13899   */\n      0x00\n        /* \"#utility.yul\":13887:13896   */\n      dup4\n        /* \"#utility.yul\":13883:13900   */\n      add\n        /* \"#utility.yul\":13874:13880   */\n      dup7\n        /* \"#utility.yul\":13830:13901   */\n      tag_374\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13911:13983   */\n      tag_544\n        /* \"#utility.yul\":13979:13981   */\n      0x20\n        /* \"#utility.yul\":13968:13977   */\n      dup4\n        /* \"#utility.yul\":13964:13982   */\n      add\n        /* \"#utility.yul\":13955:13961   */\n      dup6\n        /* \"#utility.yul\":13911:13983   */\n      tag_374\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13993:14065   */\n      tag_545\n        /* \"#utility.yul\":14061:14063   */\n      0x40\n        /* \"#utility.yul\":14050:14059   */\n      dup4\n        /* \"#utility.yul\":14046:14064   */\n      add\n        /* \"#utility.yul\":14037:14043   */\n      dup5\n        /* \"#utility.yul\":13993:14065   */\n      tag_363\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13630:14072   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14078:14194   */\n    tag_377:\n        /* \"#utility.yul\":14148:14169   */\n      tag_547\n        /* \"#utility.yul\":14163:14168   */\n      dup2\n        /* \"#utility.yul\":14148:14169   */\n      tag_356\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14141:14146   */\n      dup2\n        /* \"#utility.yul\":14138:14170   */\n      eq\n        /* \"#utility.yul\":14128:14188   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":14184:14185   */\n      0x00\n        /* \"#utility.yul\":14181:14182   */\n      dup1\n        /* \"#utility.yul\":14174:14186   */\n      revert\n        /* \"#utility.yul\":14128:14188   */\n    tag_548:\n        /* \"#utility.yul\":14078:14194   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14337   */\n    tag_378:\n        /* \"#utility.yul\":14254:14259   */\n      0x00\n        /* \"#utility.yul\":14285:14291   */\n      dup2\n        /* \"#utility.yul\":14279:14292   */\n      mload\n        /* \"#utility.yul\":14270:14292   */\n      swap1\n      pop\n        /* \"#utility.yul\":14301:14331   */\n      tag_550\n        /* \"#utility.yul\":14325:14330   */\n      dup2\n        /* \"#utility.yul\":14301:14331   */\n      tag_377\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14200:14337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14343:14688   */\n    tag_156:\n        /* \"#utility.yul\":14410:14416   */\n      0x00\n        /* \"#utility.yul\":14459:14461   */\n      0x20\n        /* \"#utility.yul\":14447:14456   */\n      dup3\n        /* \"#utility.yul\":14438:14445   */\n      dup5\n        /* \"#utility.yul\":14434:14457   */\n      sub\n        /* \"#utility.yul\":14430:14462   */\n      slt\n        /* \"#utility.yul\":14427:14546   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":14465:14544   */\n      tag_553\n      tag_347\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14427:14546   */\n    tag_552:\n        /* \"#utility.yul\":14585:14586   */\n      0x00\n        /* \"#utility.yul\":14610:14671   */\n      tag_554\n        /* \"#utility.yul\":14663:14670   */\n      dup5\n        /* \"#utility.yul\":14654:14660   */\n      dup3\n        /* \"#utility.yul\":14643:14652   */\n      dup6\n        /* \"#utility.yul\":14639:14661   */\n      add\n        /* \"#utility.yul\":14610:14671   */\n      tag_378\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14600:14671   */\n      swap2\n      pop\n        /* \"#utility.yul\":14556:14681   */\n      pop\n        /* \"#utility.yul\":14343:14688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14694:15026   */\n    tag_158:\n        /* \"#utility.yul\":14815:14819   */\n      0x00\n        /* \"#utility.yul\":14853:14855   */\n      0x40\n        /* \"#utility.yul\":14842:14851   */\n      dup3\n        /* \"#utility.yul\":14838:14856   */\n      add\n        /* \"#utility.yul\":14830:14856   */\n      swap1\n      pop\n        /* \"#utility.yul\":14866:14937   */\n      tag_556\n        /* \"#utility.yul\":14934:14935   */\n      0x00\n        /* \"#utility.yul\":14923:14932   */\n      dup4\n        /* \"#utility.yul\":14919:14936   */\n      add\n        /* \"#utility.yul\":14910:14916   */\n      dup6\n        /* \"#utility.yul\":14866:14937   */\n      tag_374\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14947:15019   */\n      tag_557\n        /* \"#utility.yul\":15015:15017   */\n      0x20\n        /* \"#utility.yul\":15004:15013   */\n      dup4\n        /* \"#utility.yul\":15000:15018   */\n      add\n        /* \"#utility.yul\":14991:14997   */\n      dup5\n        /* \"#utility.yul\":14947:15019   */\n      tag_363\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14694:15026   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15032:15197   */\n    tag_379:\n        /* \"#utility.yul\":15172:15189   */\n      0x4c5020696e73756666696369656e740000000000000000000000000000000000\n        /* \"#utility.yul\":15168:15169   */\n      0x00\n        /* \"#utility.yul\":15160:15166   */\n      dup3\n        /* \"#utility.yul\":15156:15170   */\n      add\n        /* \"#utility.yul\":15149:15190   */\n      mstore\n        /* \"#utility.yul\":15032:15197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15203:15569   */\n    tag_380:\n        /* \"#utility.yul\":15345:15348   */\n      0x00\n        /* \"#utility.yul\":15366:15433   */\n      tag_560\n        /* \"#utility.yul\":15430:15432   */\n      0x0f\n        /* \"#utility.yul\":15425:15428   */\n      dup4\n        /* \"#utility.yul\":15366:15433   */\n      tag_342\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15359:15433   */\n      swap2\n      pop\n        /* \"#utility.yul\":15442:15535   */\n      tag_561\n        /* \"#utility.yul\":15531:15534   */\n      dup3\n        /* \"#utility.yul\":15442:15535   */\n      tag_379\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":15560:15562   */\n      0x20\n        /* \"#utility.yul\":15555:15558   */\n      dup3\n        /* \"#utility.yul\":15551:15563   */\n      add\n        /* \"#utility.yul\":15544:15563   */\n      swap1\n      pop\n        /* \"#utility.yul\":15203:15569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15575:15994   */\n    tag_195:\n        /* \"#utility.yul\":15741:15745   */\n      0x00\n        /* \"#utility.yul\":15779:15781   */\n      0x20\n        /* \"#utility.yul\":15768:15777   */\n      dup3\n        /* \"#utility.yul\":15764:15782   */\n      add\n        /* \"#utility.yul\":15756:15782   */\n      swap1\n      pop\n        /* \"#utility.yul\":15828:15837   */\n      dup2\n        /* \"#utility.yul\":15822:15826   */\n      dup2\n        /* \"#utility.yul\":15818:15838   */\n      sub\n        /* \"#utility.yul\":15814:15815   */\n      0x00\n        /* \"#utility.yul\":15803:15812   */\n      dup4\n        /* \"#utility.yul\":15799:15816   */\n      add\n        /* \"#utility.yul\":15792:15839   */\n      mstore\n        /* \"#utility.yul\":15856:15987   */\n      tag_563\n        /* \"#utility.yul\":15982:15986   */\n      dup2\n        /* \"#utility.yul\":15856:15987   */\n      tag_380\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":15848:15987   */\n      swap1\n      pop\n        /* \"#utility.yul\":15575:15994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16000:16410   */\n    tag_198:\n        /* \"#utility.yul\":16040:16047   */\n      0x00\n        /* \"#utility.yul\":16063:16083   */\n      tag_565\n        /* \"#utility.yul\":16081:16082   */\n      dup3\n        /* \"#utility.yul\":16063:16083   */\n      tag_353\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16058:16083   */\n      swap2\n      pop\n        /* \"#utility.yul\":16097:16117   */\n      tag_566\n        /* \"#utility.yul\":16115:16116   */\n      dup4\n        /* \"#utility.yul\":16097:16117   */\n      tag_353\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16092:16117   */\n      swap3\n      pop\n        /* \"#utility.yul\":16152:16153   */\n      dup3\n        /* \"#utility.yul\":16149:16150   */\n      dup3\n        /* \"#utility.yul\":16145:16154   */\n      mul\n        /* \"#utility.yul\":16174:16204   */\n      tag_567\n        /* \"#utility.yul\":16192:16203   */\n      dup2\n        /* \"#utility.yul\":16174:16204   */\n      tag_353\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16163:16204   */\n      swap2\n      pop\n        /* \"#utility.yul\":16353:16354   */\n      dup3\n        /* \"#utility.yul\":16344:16351   */\n      dup3\n        /* \"#utility.yul\":16340:16355   */\n      div\n        /* \"#utility.yul\":16337:16338   */\n      dup5\n        /* \"#utility.yul\":16334:16356   */\n      eq\n        /* \"#utility.yul\":16314:16315   */\n      dup4\n        /* \"#utility.yul\":16307:16316   */\n      iszero\n        /* \"#utility.yul\":16287:16370   */\n      or\n        /* \"#utility.yul\":16264:16403   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":16383:16401   */\n      tag_569\n      tag_376\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16264:16403   */\n    tag_568:\n        /* \"#utility.yul\":16048:16410   */\n      pop\n        /* \"#utility.yul\":16000:16410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16416:16596   */\n    tag_381:\n        /* \"#utility.yul\":16464:16541   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16461:16462   */\n      0x00\n        /* \"#utility.yul\":16454:16542   */\n      mstore\n        /* \"#utility.yul\":16561:16565   */\n      0x12\n        /* \"#utility.yul\":16558:16559   */\n      0x04\n        /* \"#utility.yul\":16551:16566   */\n      mstore\n        /* \"#utility.yul\":16585:16589   */\n      0x24\n        /* \"#utility.yul\":16582:16583   */\n      0x00\n        /* \"#utility.yul\":16575:16590   */\n      revert\n        /* \"#utility.yul\":16602:16787   */\n    tag_200:\n        /* \"#utility.yul\":16642:16643   */\n      0x00\n        /* \"#utility.yul\":16659:16679   */\n      tag_572\n        /* \"#utility.yul\":16677:16678   */\n      dup3\n        /* \"#utility.yul\":16659:16679   */\n      tag_353\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16654:16679   */\n      swap2\n      pop\n        /* \"#utility.yul\":16693:16713   */\n      tag_573\n        /* \"#utility.yul\":16711:16712   */\n      dup4\n        /* \"#utility.yul\":16693:16713   */\n      tag_353\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16688:16713   */\n      swap3\n      pop\n        /* \"#utility.yul\":16732:16733   */\n      dup3\n        /* \"#utility.yul\":16722:16757   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":16737:16755   */\n      tag_575\n      tag_381\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16722:16757   */\n    tag_574:\n        /* \"#utility.yul\":16779:16780   */\n      dup3\n        /* \"#utility.yul\":16776:16777   */\n      dup3\n        /* \"#utility.yul\":16772:16781   */\n      div\n        /* \"#utility.yul\":16767:16781   */\n      swap1\n      pop\n        /* \"#utility.yul\":16602:16787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16793:17235   */\n    tag_224:\n        /* \"#utility.yul\":16942:16946   */\n      0x00\n        /* \"#utility.yul\":16980:16982   */\n      0x60\n        /* \"#utility.yul\":16969:16978   */\n      dup3\n        /* \"#utility.yul\":16965:16983   */\n      add\n        /* \"#utility.yul\":16957:16983   */\n      swap1\n      pop\n        /* \"#utility.yul\":16993:17064   */\n      tag_577\n        /* \"#utility.yul\":17061:17062   */\n      0x00\n        /* \"#utility.yul\":17050:17059   */\n      dup4\n        /* \"#utility.yul\":17046:17063   */\n      add\n        /* \"#utility.yul\":17037:17043   */\n      dup7\n        /* \"#utility.yul\":16993:17064   */\n      tag_363\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17074:17146   */\n      tag_578\n        /* \"#utility.yul\":17142:17144   */\n      0x20\n        /* \"#utility.yul\":17131:17140   */\n      dup4\n        /* \"#utility.yul\":17127:17145   */\n      add\n        /* \"#utility.yul\":17118:17124   */\n      dup6\n        /* \"#utility.yul\":17074:17146   */\n      tag_363\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17156:17228   */\n      tag_579\n        /* \"#utility.yul\":17224:17226   */\n      0x40\n        /* \"#utility.yul\":17213:17222   */\n      dup4\n        /* \"#utility.yul\":17209:17227   */\n      add\n        /* \"#utility.yul\":17200:17206   */\n      dup5\n        /* \"#utility.yul\":17156:17228   */\n      tag_363\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16793:17235   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17241:17467   */\n    tag_382:\n        /* \"#utility.yul\":17381:17415   */\n      0x6164644c69717569646974793a20746f6b656e30416d6f756e742063616e206e\n        /* \"#utility.yul\":17377:17378   */\n      0x00\n        /* \"#utility.yul\":17369:17375   */\n      dup3\n        /* \"#utility.yul\":17365:17379   */\n      add\n        /* \"#utility.yul\":17358:17416   */\n      mstore\n        /* \"#utility.yul\":17450:17459   */\n      0x6f74207a65726f00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17445:17447   */\n      0x20\n        /* \"#utility.yul\":17437:17443   */\n      dup3\n        /* \"#utility.yul\":17433:17448   */\n      add\n        /* \"#utility.yul\":17426:17460   */\n      mstore\n        /* \"#utility.yul\":17241:17467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17473:17839   */\n    tag_383:\n        /* \"#utility.yul\":17615:17618   */\n      0x00\n        /* \"#utility.yul\":17636:17703   */\n      tag_582\n        /* \"#utility.yul\":17700:17702   */\n      0x27\n        /* \"#utility.yul\":17695:17698   */\n      dup4\n        /* \"#utility.yul\":17636:17703   */\n      tag_342\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17629:17703   */\n      swap2\n      pop\n        /* \"#utility.yul\":17712:17805   */\n      tag_583\n        /* \"#utility.yul\":17801:17804   */\n      dup3\n        /* \"#utility.yul\":17712:17805   */\n      tag_382\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17830:17832   */\n      0x40\n        /* \"#utility.yul\":17825:17828   */\n      dup3\n        /* \"#utility.yul\":17821:17833   */\n      add\n        /* \"#utility.yul\":17814:17833   */\n      swap1\n      pop\n        /* \"#utility.yul\":17473:17839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17845:18264   */\n    tag_228:\n        /* \"#utility.yul\":18011:18015   */\n      0x00\n        /* \"#utility.yul\":18049:18051   */\n      0x20\n        /* \"#utility.yul\":18038:18047   */\n      dup3\n        /* \"#utility.yul\":18034:18052   */\n      add\n        /* \"#utility.yul\":18026:18052   */\n      swap1\n      pop\n        /* \"#utility.yul\":18098:18107   */\n      dup2\n        /* \"#utility.yul\":18092:18096   */\n      dup2\n        /* \"#utility.yul\":18088:18108   */\n      sub\n        /* \"#utility.yul\":18084:18085   */\n      0x00\n        /* \"#utility.yul\":18073:18082   */\n      dup4\n        /* \"#utility.yul\":18069:18086   */\n      add\n        /* \"#utility.yul\":18062:18109   */\n      mstore\n        /* \"#utility.yul\":18126:18257   */\n      tag_585\n        /* \"#utility.yul\":18252:18256   */\n      dup2\n        /* \"#utility.yul\":18126:18257   */\n      tag_383\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18118:18257   */\n      swap1\n      pop\n        /* \"#utility.yul\":17845:18264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18270:18496   */\n    tag_384:\n        /* \"#utility.yul\":18410:18444   */\n      0x6164644c69717569646974793a20746f6b656e31416d6f756e742063616e206e\n        /* \"#utility.yul\":18406:18407   */\n      0x00\n        /* \"#utility.yul\":18398:18404   */\n      dup3\n        /* \"#utility.yul\":18394:18408   */\n      add\n        /* \"#utility.yul\":18387:18445   */\n      mstore\n        /* \"#utility.yul\":18479:18488   */\n      0x6f74207a65726f00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18474:18476   */\n      0x20\n        /* \"#utility.yul\":18466:18472   */\n      dup3\n        /* \"#utility.yul\":18462:18477   */\n      add\n        /* \"#utility.yul\":18455:18489   */\n      mstore\n        /* \"#utility.yul\":18270:18496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18502:18868   */\n    tag_385:\n        /* \"#utility.yul\":18644:18647   */\n      0x00\n        /* \"#utility.yul\":18665:18732   */\n      tag_588\n        /* \"#utility.yul\":18729:18731   */\n      0x27\n        /* \"#utility.yul\":18724:18727   */\n      dup4\n        /* \"#utility.yul\":18665:18732   */\n      tag_342\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18658:18732   */\n      swap2\n      pop\n        /* \"#utility.yul\":18741:18834   */\n      tag_589\n        /* \"#utility.yul\":18830:18833   */\n      dup3\n        /* \"#utility.yul\":18741:18834   */\n      tag_384\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18859:18861   */\n      0x40\n        /* \"#utility.yul\":18854:18857   */\n      dup3\n        /* \"#utility.yul\":18850:18862   */\n      add\n        /* \"#utility.yul\":18843:18862   */\n      swap1\n      pop\n        /* \"#utility.yul\":18502:18868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18874:19293   */\n    tag_231:\n        /* \"#utility.yul\":19040:19044   */\n      0x00\n        /* \"#utility.yul\":19078:19080   */\n      0x20\n        /* \"#utility.yul\":19067:19076   */\n      dup3\n        /* \"#utility.yul\":19063:19081   */\n      add\n        /* \"#utility.yul\":19055:19081   */\n      swap1\n      pop\n        /* \"#utility.yul\":19127:19136   */\n      dup2\n        /* \"#utility.yul\":19121:19125   */\n      dup2\n        /* \"#utility.yul\":19117:19137   */\n      sub\n        /* \"#utility.yul\":19113:19114   */\n      0x00\n        /* \"#utility.yul\":19102:19111   */\n      dup4\n        /* \"#utility.yul\":19098:19115   */\n      add\n        /* \"#utility.yul\":19091:19138   */\n      mstore\n        /* \"#utility.yul\":19155:19286   */\n      tag_591\n        /* \"#utility.yul\":19281:19285   */\n      dup2\n        /* \"#utility.yul\":19155:19286   */\n      tag_385\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19147:19286   */\n      swap1\n      pop\n        /* \"#utility.yul\":18874:19293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19299:19522   */\n    tag_386:\n        /* \"#utility.yul\":19439:19473   */\n      0x6164644c69717569646974793a20696e73756666696369656e74206c69717569\n        /* \"#utility.yul\":19435:19436   */\n      0x00\n        /* \"#utility.yul\":19427:19433   */\n      dup3\n        /* \"#utility.yul\":19423:19437   */\n      add\n        /* \"#utility.yul\":19416:19474   */\n      mstore\n        /* \"#utility.yul\":19508:19514   */\n      0x6469747900000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19503:19505   */\n      0x20\n        /* \"#utility.yul\":19495:19501   */\n      dup3\n        /* \"#utility.yul\":19491:19506   */\n      add\n        /* \"#utility.yul\":19484:19515   */\n      mstore\n        /* \"#utility.yul\":19299:19522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19528:19894   */\n    tag_387:\n        /* \"#utility.yul\":19670:19673   */\n      0x00\n        /* \"#utility.yul\":19691:19758   */\n      tag_594\n        /* \"#utility.yul\":19755:19757   */\n      0x24\n        /* \"#utility.yul\":19750:19753   */\n      dup4\n        /* \"#utility.yul\":19691:19758   */\n      tag_342\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19684:19758   */\n      swap2\n      pop\n        /* \"#utility.yul\":19767:19860   */\n      tag_595\n        /* \"#utility.yul\":19856:19859   */\n      dup3\n        /* \"#utility.yul\":19767:19860   */\n      tag_386\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19885:19887   */\n      0x40\n        /* \"#utility.yul\":19880:19883   */\n      dup3\n        /* \"#utility.yul\":19876:19888   */\n      add\n        /* \"#utility.yul\":19869:19888   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19900:20319   */\n    tag_256:\n        /* \"#utility.yul\":20066:20070   */\n      0x00\n        /* \"#utility.yul\":20104:20106   */\n      0x20\n        /* \"#utility.yul\":20093:20102   */\n      dup3\n        /* \"#utility.yul\":20089:20107   */\n      add\n        /* \"#utility.yul\":20081:20107   */\n      swap1\n      pop\n        /* \"#utility.yul\":20153:20162   */\n      dup2\n        /* \"#utility.yul\":20147:20151   */\n      dup2\n        /* \"#utility.yul\":20143:20163   */\n      sub\n        /* \"#utility.yul\":20139:20140   */\n      0x00\n        /* \"#utility.yul\":20128:20137   */\n      dup4\n        /* \"#utility.yul\":20124:20141   */\n      add\n        /* \"#utility.yul\":20117:20164   */\n      mstore\n        /* \"#utility.yul\":20181:20312   */\n      tag_597\n        /* \"#utility.yul\":20307:20311   */\n      dup2\n        /* \"#utility.yul\":20181:20312   */\n      tag_387\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20173:20312   */\n      swap1\n      pop\n        /* \"#utility.yul\":19900:20319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20325:20558   */\n    tag_388:\n        /* \"#utility.yul\":20465:20499   */\n      0x63616c63756c617465537761704f7574416d6f756e743a20616d6f756e74496e\n        /* \"#utility.yul\":20461:20462   */\n      0x00\n        /* \"#utility.yul\":20453:20459   */\n      dup3\n        /* \"#utility.yul\":20449:20463   */\n      add\n        /* \"#utility.yul\":20442:20500   */\n      mstore\n        /* \"#utility.yul\":20534:20550   */\n      0x206d75737420706f736974697665000000000000000000000000000000000000\n        /* \"#utility.yul\":20529:20531   */\n      0x20\n        /* \"#utility.yul\":20521:20527   */\n      dup3\n        /* \"#utility.yul\":20517:20532   */\n      add\n        /* \"#utility.yul\":20510:20551   */\n      mstore\n        /* \"#utility.yul\":20325:20558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20564:20930   */\n    tag_389:\n        /* \"#utility.yul\":20706:20709   */\n      0x00\n        /* \"#utility.yul\":20727:20794   */\n      tag_600\n        /* \"#utility.yul\":20791:20793   */\n      0x2e\n        /* \"#utility.yul\":20786:20789   */\n      dup4\n        /* \"#utility.yul\":20727:20794   */\n      tag_342\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20720:20794   */\n      swap2\n      pop\n        /* \"#utility.yul\":20803:20896   */\n      tag_601\n        /* \"#utility.yul\":20892:20895   */\n      dup3\n        /* \"#utility.yul\":20803:20896   */\n      tag_388\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20921:20923   */\n      0x40\n        /* \"#utility.yul\":20916:20919   */\n      dup3\n        /* \"#utility.yul\":20912:20924   */\n      add\n        /* \"#utility.yul\":20905:20924   */\n      swap1\n      pop\n        /* \"#utility.yul\":20564:20930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20936:21355   */\n    tag_271:\n        /* \"#utility.yul\":21102:21106   */\n      0x00\n        /* \"#utility.yul\":21140:21142   */\n      0x20\n        /* \"#utility.yul\":21129:21138   */\n      dup3\n        /* \"#utility.yul\":21125:21143   */\n      add\n        /* \"#utility.yul\":21117:21143   */\n      swap1\n      pop\n        /* \"#utility.yul\":21189:21198   */\n      dup2\n        /* \"#utility.yul\":21183:21187   */\n      dup2\n        /* \"#utility.yul\":21179:21199   */\n      sub\n        /* \"#utility.yul\":21175:21176   */\n      0x00\n        /* \"#utility.yul\":21164:21173   */\n      dup4\n        /* \"#utility.yul\":21160:21177   */\n      add\n        /* \"#utility.yul\":21153:21200   */\n      mstore\n        /* \"#utility.yul\":21217:21348   */\n      tag_603\n        /* \"#utility.yul\":21343:21347   */\n      dup2\n        /* \"#utility.yul\":21217:21348   */\n      tag_389\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21209:21348   */\n      swap1\n      pop\n        /* \"#utility.yul\":20936:21355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21361:21595   */\n    tag_390:\n        /* \"#utility.yul\":21501:21535   */\n      0x63616c63756c617465537761704f7574416d6f756e743a207265736572766549\n        /* \"#utility.yul\":21497:21498   */\n      0x00\n        /* \"#utility.yul\":21489:21495   */\n      dup3\n        /* \"#utility.yul\":21485:21499   */\n      add\n        /* \"#utility.yul\":21478:21536   */\n      mstore\n        /* \"#utility.yul\":21570:21587   */\n      0x6e206d75737420706f7369746976650000000000000000000000000000000000\n        /* \"#utility.yul\":21565:21567   */\n      0x20\n        /* \"#utility.yul\":21557:21563   */\n      dup3\n        /* \"#utility.yul\":21553:21568   */\n      add\n        /* \"#utility.yul\":21546:21588   */\n      mstore\n        /* \"#utility.yul\":21361:21595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21601:21967   */\n    tag_391:\n        /* \"#utility.yul\":21743:21746   */\n      0x00\n        /* \"#utility.yul\":21764:21831   */\n      tag_606\n        /* \"#utility.yul\":21828:21830   */\n      0x2f\n        /* \"#utility.yul\":21823:21826   */\n      dup4\n        /* \"#utility.yul\":21764:21831   */\n      tag_342\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":21757:21831   */\n      swap2\n      pop\n        /* \"#utility.yul\":21840:21933   */\n      tag_607\n        /* \"#utility.yul\":21929:21932   */\n      dup3\n        /* \"#utility.yul\":21840:21933   */\n      tag_390\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":21958:21960   */\n      0x40\n        /* \"#utility.yul\":21953:21956   */\n      dup3\n        /* \"#utility.yul\":21949:21961   */\n      add\n        /* \"#utility.yul\":21942:21961   */\n      swap1\n      pop\n        /* \"#utility.yul\":21601:21967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21973:22392   */\n    tag_274:\n        /* \"#utility.yul\":22139:22143   */\n      0x00\n        /* \"#utility.yul\":22177:22179   */\n      0x20\n        /* \"#utility.yul\":22166:22175   */\n      dup3\n        /* \"#utility.yul\":22162:22180   */\n      add\n        /* \"#utility.yul\":22154:22180   */\n      swap1\n      pop\n        /* \"#utility.yul\":22226:22235   */\n      dup2\n        /* \"#utility.yul\":22220:22224   */\n      dup2\n        /* \"#utility.yul\":22216:22236   */\n      sub\n        /* \"#utility.yul\":22212:22213   */\n      0x00\n        /* \"#utility.yul\":22201:22210   */\n      dup4\n        /* \"#utility.yul\":22197:22214   */\n      add\n        /* \"#utility.yul\":22190:22237   */\n      mstore\n        /* \"#utility.yul\":22254:22385   */\n      tag_609\n        /* \"#utility.yul\":22380:22384   */\n      dup2\n        /* \"#utility.yul\":22254:22385   */\n      tag_391\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":22246:22385   */\n      swap1\n      pop\n        /* \"#utility.yul\":21973:22392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22398:22633   */\n    tag_392:\n        /* \"#utility.yul\":22538:22572   */\n      0x63616c63756c617465537761704f7574416d6f756e743a20726573657276654f\n        /* \"#utility.yul\":22534:22535   */\n      0x00\n        /* \"#utility.yul\":22526:22532   */\n      dup3\n        /* \"#utility.yul\":22522:22536   */\n      add\n        /* \"#utility.yul\":22515:22573   */\n      mstore\n        /* \"#utility.yul\":22607:22625   */\n      0x7574206d75737420706f73697469766500000000000000000000000000000000\n        /* \"#utility.yul\":22602:22604   */\n      0x20\n        /* \"#utility.yul\":22594:22600   */\n      dup3\n        /* \"#utility.yul\":22590:22605   */\n      add\n        /* \"#utility.yul\":22583:22626   */\n      mstore\n        /* \"#utility.yul\":22398:22633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22639:23005   */\n    tag_393:\n        /* \"#utility.yul\":22781:22784   */\n      0x00\n        /* \"#utility.yul\":22802:22869   */\n      tag_612\n        /* \"#utility.yul\":22866:22868   */\n      0x30\n        /* \"#utility.yul\":22861:22864   */\n      dup4\n        /* \"#utility.yul\":22802:22869   */\n      tag_342\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":22795:22869   */\n      swap2\n      pop\n        /* \"#utility.yul\":22878:22971   */\n      tag_613\n        /* \"#utility.yul\":22967:22970   */\n      dup3\n        /* \"#utility.yul\":22878:22971   */\n      tag_392\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":22996:22998   */\n      0x40\n        /* \"#utility.yul\":22991:22994   */\n      dup3\n        /* \"#utility.yul\":22987:22999   */\n      add\n        /* \"#utility.yul\":22980:22999   */\n      swap1\n      pop\n        /* \"#utility.yul\":22639:23005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23011:23430   */\n    tag_277:\n        /* \"#utility.yul\":23177:23181   */\n      0x00\n        /* \"#utility.yul\":23215:23217   */\n      0x20\n        /* \"#utility.yul\":23204:23213   */\n      dup3\n        /* \"#utility.yul\":23200:23218   */\n      add\n        /* \"#utility.yul\":23192:23218   */\n      swap1\n      pop\n        /* \"#utility.yul\":23264:23273   */\n      dup2\n        /* \"#utility.yul\":23258:23262   */\n      dup2\n        /* \"#utility.yul\":23254:23274   */\n      sub\n        /* \"#utility.yul\":23250:23251   */\n      0x00\n        /* \"#utility.yul\":23239:23248   */\n      dup4\n        /* \"#utility.yul\":23235:23252   */\n      add\n        /* \"#utility.yul\":23228:23275   */\n      mstore\n        /* \"#utility.yul\":23292:23423   */\n      tag_615\n        /* \"#utility.yul\":23418:23422   */\n      dup2\n        /* \"#utility.yul\":23292:23423   */\n      tag_393\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":23284:23423   */\n      swap1\n      pop\n        /* \"#utility.yul\":23011:23430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23436:23878   */\n    tag_294:\n        /* \"#utility.yul\":23585:23589   */\n      0x00\n        /* \"#utility.yul\":23623:23625   */\n      0x60\n        /* \"#utility.yul\":23612:23621   */\n      dup3\n        /* \"#utility.yul\":23608:23626   */\n      add\n        /* \"#utility.yul\":23600:23626   */\n      swap1\n      pop\n        /* \"#utility.yul\":23636:23707   */\n      tag_617\n        /* \"#utility.yul\":23704:23705   */\n      0x00\n        /* \"#utility.yul\":23693:23702   */\n      dup4\n        /* \"#utility.yul\":23689:23706   */\n      add\n        /* \"#utility.yul\":23680:23686   */\n      dup7\n        /* \"#utility.yul\":23636:23707   */\n      tag_374\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":23717:23789   */\n      tag_618\n        /* \"#utility.yul\":23785:23787   */\n      0x20\n        /* \"#utility.yul\":23774:23783   */\n      dup4\n        /* \"#utility.yul\":23770:23788   */\n      add\n        /* \"#utility.yul\":23761:23767   */\n      dup6\n        /* \"#utility.yul\":23717:23789   */\n      tag_363\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":23799:23871   */\n      tag_619\n        /* \"#utility.yul\":23867:23869   */\n      0x40\n        /* \"#utility.yul\":23856:23865   */\n      dup4\n        /* \"#utility.yul\":23852:23870   */\n      add\n        /* \"#utility.yul\":23843:23849   */\n      dup5\n        /* \"#utility.yul\":23799:23871   */\n      tag_363\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":23436:23878   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122099834e2f6f4e98d84376552bb880117154be87b6df8bea8a7c9080f7e75105e164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6810:6",
										"nodeType": "YulBlock",
										"src": "0:6810:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1139:441:6",
													"nodeType": "YulBlock",
													"src": "1139:441:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1185:83:6",
																"nodeType": "YulBlock",
																"src": "1185:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1187:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1187:77:6"
																			},
																			"nativeSrc": "1187:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:79:6"
																		},
																		"nativeSrc": "1187:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1160:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1160:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1169:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1169:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:6"
																		},
																		"nativeSrc": "1156:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:6"
																},
																"nativeSrc": "1152:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:32:6"
															},
															"nativeSrc": "1149:119:6",
															"nodeType": "YulIf",
															"src": "1149:119:6"
														},
														{
															"nativeSrc": "1278:142:6",
															"nodeType": "YulBlock",
															"src": "1278:142:6",
															"statements": [
																{
																	"nativeSrc": "1293:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1293:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1307:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1297:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1297:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1322:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1322:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1378:3:6"
																				},
																				"nativeSrc": "1378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1332:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1332:45:6"
																		},
																		"nativeSrc": "1332:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1430:143:6",
															"nodeType": "YulBlock",
															"src": "1430:143:6",
															"statements": [
																{
																	"nativeSrc": "1445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1475:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1475:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1535:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1535:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1546:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1546:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1531:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:6"
																				},
																				"nativeSrc": "1531:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1531:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1555:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1555:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1485:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1485:45:6"
																		},
																		"nativeSrc": "1485:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1485:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "1017:563:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1101:9:6",
														"nodeType": "YulTypedName",
														"src": "1101:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1112:7:6",
														"nodeType": "YulTypedName",
														"src": "1112:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1124:6:6",
														"nodeType": "YulTypedName",
														"src": "1124:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"src": "1017:563:6"
											},
											{
												"body": {
													"nativeSrc": "1645:40:6",
													"nodeType": "YulBlock",
													"src": "1645:40:6",
													"statements": [
														{
															"nativeSrc": "1656:22:6",
															"nodeType": "YulAssignment",
															"src": "1656:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1672:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1666:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1666:5:6"
																},
																"nativeSrc": "1666:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1666:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1586:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1628:5:6",
														"nodeType": "YulTypedName",
														"src": "1628:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1638:6:6",
														"nodeType": "YulTypedName",
														"src": "1638:6:6",
														"type": ""
													}
												],
												"src": "1586:99:6"
											},
											{
												"body": {
													"nativeSrc": "1719:152:6",
													"nodeType": "YulBlock",
													"src": "1719:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1736:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1736:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1739:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1739:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:6"
																},
																"nativeSrc": "1729:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1729:88:6"
															},
															"nativeSrc": "1729:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1729:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1833:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1833:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1836:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1836:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1826:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:6"
																},
																"nativeSrc": "1826:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:15:6"
															},
															"nativeSrc": "1826:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1826:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1857:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1860:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:6"
																},
																"nativeSrc": "1850:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:15:6"
															},
															"nativeSrc": "1850:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1850:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1691:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:180:6"
											},
											{
												"body": {
													"nativeSrc": "1905:152:6",
													"nodeType": "YulBlock",
													"src": "1905:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1922:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1922:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1925:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:6"
																},
																"nativeSrc": "1915:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1915:88:6"
															},
															"nativeSrc": "1915:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1915:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2022:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:6"
																},
																"nativeSrc": "2012:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2012:15:6"
															},
															"nativeSrc": "2012:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2012:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2043:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2046:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2046:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2036:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:6"
																},
																"nativeSrc": "2036:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2036:15:6"
															},
															"nativeSrc": "2036:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2036:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1877:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1877:180:6"
											},
											{
												"body": {
													"nativeSrc": "2114:269:6",
													"nodeType": "YulBlock",
													"src": "2114:269:6",
													"statements": [
														{
															"nativeSrc": "2124:22:6",
															"nodeType": "YulAssignment",
															"src": "2124:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2138:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2138:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2144:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2144:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2134:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:6"
																},
																"nativeSrc": "2134:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2134:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2124:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:6"
																}
															]
														},
														{
															"nativeSrc": "2155:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2155:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2185:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2185:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2191:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2191:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2181:3:6"
																},
																"nativeSrc": "2181:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2181:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2159:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2159:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2232:51:6",
																"nodeType": "YulBlock",
																"src": "2232:51:6",
																"statements": [
																	{
																		"nativeSrc": "2246:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2246:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2260:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2260:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2268:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2256:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2256:3:6"
																			},
																			"nativeSrc": "2256:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2256:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2212:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2212:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:6"
																},
																"nativeSrc": "2205:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2205:26:6"
															},
															"nativeSrc": "2202:81:6",
															"nodeType": "YulIf",
															"src": "2202:81:6"
														},
														{
															"body": {
																"nativeSrc": "2335:42:6",
																"nodeType": "YulBlock",
																"src": "2335:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2349:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2349:16:6"
																			},
																			"nativeSrc": "2349:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2349:18:6"
																		},
																		"nativeSrc": "2349:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2299:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2322:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2319:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2319:2:6"
																		},
																		"nativeSrc": "2319:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2296:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2296:2:6"
																},
																"nativeSrc": "2296:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2296:38:6"
															},
															"nativeSrc": "2293:84:6",
															"nodeType": "YulIf",
															"src": "2293:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2063:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2098:4:6",
														"nodeType": "YulTypedName",
														"src": "2098:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2107:6:6",
														"nodeType": "YulTypedName",
														"src": "2107:6:6",
														"type": ""
													}
												],
												"src": "2063:320:6"
											},
											{
												"body": {
													"nativeSrc": "2443:87:6",
													"nodeType": "YulBlock",
													"src": "2443:87:6",
													"statements": [
														{
															"nativeSrc": "2453:11:6",
															"nodeType": "YulAssignment",
															"src": "2453:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2461:3:6",
																"nodeType": "YulIdentifier",
																"src": "2461:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2453:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2453:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2481:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2481:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2484:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2484:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2474:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2474:6:6"
																},
																"nativeSrc": "2474:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2474:14:6"
															},
															"nativeSrc": "2474:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2474:14:6"
														},
														{
															"nativeSrc": "2497:26:6",
															"nodeType": "YulAssignment",
															"src": "2497:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2515:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2518:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2518:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2505:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2505:9:6"
																},
																"nativeSrc": "2505:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2505:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2497:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2497:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2389:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2430:3:6",
														"nodeType": "YulTypedName",
														"src": "2430:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2438:4:6",
														"nodeType": "YulTypedName",
														"src": "2438:4:6",
														"type": ""
													}
												],
												"src": "2389:141:6"
											},
											{
												"body": {
													"nativeSrc": "2580:49:6",
													"nodeType": "YulBlock",
													"src": "2580:49:6",
													"statements": [
														{
															"nativeSrc": "2590:33:6",
															"nodeType": "YulAssignment",
															"src": "2590:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2608:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2608:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2615:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2615:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2604:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:6"
																		},
																		"nativeSrc": "2604:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2604:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2620:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2620:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2600:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:6"
																},
																"nativeSrc": "2600:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2600:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2590:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2536:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2563:5:6",
														"nodeType": "YulTypedName",
														"src": "2563:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2573:6:6",
														"nodeType": "YulTypedName",
														"src": "2573:6:6",
														"type": ""
													}
												],
												"src": "2536:93:6"
											},
											{
												"body": {
													"nativeSrc": "2688:54:6",
													"nodeType": "YulBlock",
													"src": "2688:54:6",
													"statements": [
														{
															"nativeSrc": "2698:37:6",
															"nodeType": "YulAssignment",
															"src": "2698:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2723:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2723:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2729:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2729:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																},
																"nativeSrc": "2719:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2719:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2698:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2698:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2635:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2663:4:6",
														"nodeType": "YulTypedName",
														"src": "2663:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2669:5:6",
														"nodeType": "YulTypedName",
														"src": "2669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2679:8:6",
														"nodeType": "YulTypedName",
														"src": "2679:8:6",
														"type": ""
													}
												],
												"src": "2635:107:6"
											},
											{
												"body": {
													"nativeSrc": "2824:317:6",
													"nodeType": "YulBlock",
													"src": "2824:317:6",
													"statements": [
														{
															"nativeSrc": "2834:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2834:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2855:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2855:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2867:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2867:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2851:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:6"
																},
																"nativeSrc": "2851:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2851:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2838:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2838:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2878:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2878:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2909:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2909:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2920:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2920:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2890:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2890:18:6"
																},
																"nativeSrc": "2890:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2890:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2882:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2882:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2996:51:6",
															"nodeType": "YulAssignment",
															"src": "2996:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3027:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3038:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3038:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3008:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3008:18:6"
																},
																"nativeSrc": "3008:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3008:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2996:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:8:6"
																}
															]
														},
														{
															"nativeSrc": "3056:30:6",
															"nodeType": "YulAssignment",
															"src": "3056:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3069:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3069:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3080:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3080:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3076:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:6"
																		},
																		"nativeSrc": "3076:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3065:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:6"
																},
																"nativeSrc": "3065:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3065:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3056:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3056:5:6"
																}
															]
														},
														{
															"nativeSrc": "3095:40:6",
															"nodeType": "YulAssignment",
															"src": "3095:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3108:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3119:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3119:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3129:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3129:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3115:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:6"
																		},
																		"nativeSrc": "3115:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3115:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3105:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:2:6"
																},
																"nativeSrc": "3105:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2748:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2785:5:6",
														"nodeType": "YulTypedName",
														"src": "2785:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2792:10:6",
														"nodeType": "YulTypedName",
														"src": "2792:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2804:8:6",
														"nodeType": "YulTypedName",
														"src": "2804:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2817:6:6",
														"nodeType": "YulTypedName",
														"src": "2817:6:6",
														"type": ""
													}
												],
												"src": "2748:393:6"
											},
											{
												"body": {
													"nativeSrc": "3192:32:6",
													"nodeType": "YulBlock",
													"src": "3192:32:6",
													"statements": [
														{
															"nativeSrc": "3202:16:6",
															"nodeType": "YulAssignment",
															"src": "3202:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3213:5:6",
																"nodeType": "YulIdentifier",
																"src": "3213:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3202:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3202:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3147:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3174:5:6",
														"nodeType": "YulTypedName",
														"src": "3174:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3184:7:6",
														"nodeType": "YulTypedName",
														"src": "3184:7:6",
														"type": ""
													}
												],
												"src": "3147:77:6"
											},
											{
												"body": {
													"nativeSrc": "3262:28:6",
													"nodeType": "YulBlock",
													"src": "3262:28:6",
													"statements": [
														{
															"nativeSrc": "3272:12:6",
															"nodeType": "YulAssignment",
															"src": "3272:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3279:5:6",
																"nodeType": "YulIdentifier",
																"src": "3279:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3230:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3248:5:6",
														"nodeType": "YulTypedName",
														"src": "3248:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3258:3:6",
														"nodeType": "YulTypedName",
														"src": "3258:3:6",
														"type": ""
													}
												],
												"src": "3230:60:6"
											},
											{
												"body": {
													"nativeSrc": "3356:82:6",
													"nodeType": "YulBlock",
													"src": "3356:82:6",
													"statements": [
														{
															"nativeSrc": "3366:66:6",
															"nodeType": "YulAssignment",
															"src": "3366:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3424:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3424:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3406:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3406:17:6"
																				},
																				"nativeSrc": "3406:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3406:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3397:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3397:8:6"
																		},
																		"nativeSrc": "3397:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3397:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3379:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3379:17:6"
																},
																"nativeSrc": "3379:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3379:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3366:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3366:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3296:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3336:5:6",
														"nodeType": "YulTypedName",
														"src": "3336:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3346:9:6",
														"nodeType": "YulTypedName",
														"src": "3346:9:6",
														"type": ""
													}
												],
												"src": "3296:142:6"
											},
											{
												"body": {
													"nativeSrc": "3491:28:6",
													"nodeType": "YulBlock",
													"src": "3491:28:6",
													"statements": [
														{
															"nativeSrc": "3501:12:6",
															"nodeType": "YulAssignment",
															"src": "3501:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3508:5:6",
																"nodeType": "YulIdentifier",
																"src": "3508:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3501:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3444:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3477:5:6",
														"nodeType": "YulTypedName",
														"src": "3477:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3487:3:6",
														"nodeType": "YulTypedName",
														"src": "3487:3:6",
														"type": ""
													}
												],
												"src": "3444:75:6"
											},
											{
												"body": {
													"nativeSrc": "3601:193:6",
													"nodeType": "YulBlock",
													"src": "3601:193:6",
													"statements": [
														{
															"nativeSrc": "3611:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3611:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3666:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3666:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3635:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3635:30:6"
																},
																"nativeSrc": "3635:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3635:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3615:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3615:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3690:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3730:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3730:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3724:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3724:5:6"
																				},
																				"nativeSrc": "3724:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3724:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3737:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3769:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3769:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3745:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3745:23:6"
																				},
																				"nativeSrc": "3745:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3745:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3696:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3696:27:6"
																		},
																		"nativeSrc": "3696:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3683:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:6"
																},
																"nativeSrc": "3683:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3683:105:6"
															},
															"nativeSrc": "3683:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3683:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3525:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3578:4:6",
														"nodeType": "YulTypedName",
														"src": "3578:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3584:6:6",
														"nodeType": "YulTypedName",
														"src": "3584:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3592:7:6",
														"nodeType": "YulTypedName",
														"src": "3592:7:6",
														"type": ""
													}
												],
												"src": "3525:269:6"
											},
											{
												"body": {
													"nativeSrc": "3849:24:6",
													"nodeType": "YulBlock",
													"src": "3849:24:6",
													"statements": [
														{
															"nativeSrc": "3859:8:6",
															"nodeType": "YulAssignment",
															"src": "3859:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3866:1:6",
																"nodeType": "YulLiteral",
																"src": "3866:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3859:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3800:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3845:3:6",
														"nodeType": "YulTypedName",
														"src": "3845:3:6",
														"type": ""
													}
												],
												"src": "3800:73:6"
											},
											{
												"body": {
													"nativeSrc": "3932:136:6",
													"nodeType": "YulBlock",
													"src": "3932:136:6",
													"statements": [
														{
															"nativeSrc": "3942:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3942:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3956:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3956:30:6"
																},
																"nativeSrc": "3956:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3956:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3946:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3946:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4041:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4041:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4047:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4055:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4055:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3997:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3997:43:6"
																},
																"nativeSrc": "3997:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3997:65:6"
															},
															"nativeSrc": "3997:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3997:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3879:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3918:4:6",
														"nodeType": "YulTypedName",
														"src": "3918:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3924:6:6",
														"nodeType": "YulTypedName",
														"src": "3924:6:6",
														"type": ""
													}
												],
												"src": "3879:189:6"
											},
											{
												"body": {
													"nativeSrc": "4124:136:6",
													"nodeType": "YulBlock",
													"src": "4124:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4191:63:6",
																"nodeType": "YulBlock",
																"src": "4191:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4235:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4235:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4242:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4242:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4205:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4205:29:6"
																			},
																			"nativeSrc": "4205:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4205:39:6"
																		},
																		"nativeSrc": "4205:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4205:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4144:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4144:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4151:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4151:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4141:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4141:2:6"
																},
																"nativeSrc": "4141:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4141:14:6"
															},
															"nativeSrc": "4134:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4156:26:6",
																"nodeType": "YulBlock",
																"src": "4156:26:6",
																"statements": [
																	{
																		"nativeSrc": "4158:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4158:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4171:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4171:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4178:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4167:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4167:3:6"
																			},
																			"nativeSrc": "4167:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4167:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4158:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4158:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4138:2:6",
																"nodeType": "YulBlock",
																"src": "4138:2:6",
																"statements": []
															},
															"src": "4134:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4074:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4112:5:6",
														"nodeType": "YulTypedName",
														"src": "4112:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4119:3:6",
														"nodeType": "YulTypedName",
														"src": "4119:3:6",
														"type": ""
													}
												],
												"src": "4074:186:6"
											},
											{
												"body": {
													"nativeSrc": "4345:464:6",
													"nodeType": "YulBlock",
													"src": "4345:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4371:431:6",
																"nodeType": "YulBlock",
																"src": "4371:431:6",
																"statements": [
																	{
																		"nativeSrc": "4385:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4385:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4433:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4401:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4401:31:6"
																			},
																			"nativeSrc": "4401:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4401:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4389:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4389:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4452:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4452:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4475:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4475:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4503:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4503:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4485:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4485:17:6"
																					},
																					"nativeSrc": "4485:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4485:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4471:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4471:3:6"
																			},
																			"nativeSrc": "4471:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4471:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4456:11:6",
																				"nodeType": "YulTypedName",
																				"src": "4456:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4672:27:6",
																			"nodeType": "YulBlock",
																			"src": "4672:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4674:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4674:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4689:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4689:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4674:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4674:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4656:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4656:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4668:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4653:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4653:2:6"
																			},
																			"nativeSrc": "4653:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4653:18:6"
																		},
																		"nativeSrc": "4650:49:6",
																		"nodeType": "YulIf",
																		"src": "4650:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4741:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4741:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4758:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4758:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4786:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4786:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4768:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4768:17:6"
																							},
																							"nativeSrc": "4768:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4768:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4754:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4754:3:6"
																					},
																					"nativeSrc": "4754:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4754:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4712:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4712:28:6"
																			},
																			"nativeSrc": "4712:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4712:80:6"
																		},
																		"nativeSrc": "4712:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4362:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4362:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4367:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4367:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4359:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4359:2:6"
																},
																"nativeSrc": "4359:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4359:11:6"
															},
															"nativeSrc": "4356:446:6",
															"nodeType": "YulIf",
															"src": "4356:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4266:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4321:5:6",
														"nodeType": "YulTypedName",
														"src": "4321:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4328:3:6",
														"nodeType": "YulTypedName",
														"src": "4328:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4333:10:6",
														"nodeType": "YulTypedName",
														"src": "4333:10:6",
														"type": ""
													}
												],
												"src": "4266:543:6"
											},
											{
												"body": {
													"nativeSrc": "4878:54:6",
													"nodeType": "YulBlock",
													"src": "4878:54:6",
													"statements": [
														{
															"nativeSrc": "4888:37:6",
															"nodeType": "YulAssignment",
															"src": "4888:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4913:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4913:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4919:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4919:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4909:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:6"
																},
																"nativeSrc": "4909:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4909:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4888:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4888:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4815:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4853:4:6",
														"nodeType": "YulTypedName",
														"src": "4853:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4859:5:6",
														"nodeType": "YulTypedName",
														"src": "4859:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4869:8:6",
														"nodeType": "YulTypedName",
														"src": "4869:8:6",
														"type": ""
													}
												],
												"src": "4815:117:6"
											},
											{
												"body": {
													"nativeSrc": "4989:118:6",
													"nodeType": "YulBlock",
													"src": "4989:118:6",
													"statements": [
														{
															"nativeSrc": "4999:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4999:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5048:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5048:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5051:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5051:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5044:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:6"
																				},
																				"nativeSrc": "5044:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5063:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5063:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5059:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5059:3:6"
																				},
																				"nativeSrc": "5059:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5059:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5015:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5015:28:6"
																		},
																		"nativeSrc": "5015:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5011:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:6"
																},
																"nativeSrc": "5011:56:6",
																"nodeType": "YulFunctionCall",
																"src": "5011:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5003:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5003:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5076:25:6",
															"nodeType": "YulAssignment",
															"src": "5076:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5090:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5090:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5096:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5096:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5086:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5086:3:6"
																},
																"nativeSrc": "5086:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5086:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4938:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4966:4:6",
														"nodeType": "YulTypedName",
														"src": "4966:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4972:5:6",
														"nodeType": "YulTypedName",
														"src": "4972:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4982:6:6",
														"nodeType": "YulTypedName",
														"src": "4982:6:6",
														"type": ""
													}
												],
												"src": "4938:169:6"
											},
											{
												"body": {
													"nativeSrc": "5193:214:6",
													"nodeType": "YulBlock",
													"src": "5193:214:6",
													"statements": [
														{
															"nativeSrc": "5326:37:6",
															"nodeType": "YulAssignment",
															"src": "5326:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5353:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5353:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5359:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5359:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5334:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5334:18:6"
																},
																"nativeSrc": "5334:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5334:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5326:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5326:4:6"
																}
															]
														},
														{
															"nativeSrc": "5372:29:6",
															"nodeType": "YulAssignment",
															"src": "5372:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5383:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5383:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5393:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5393:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5396:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5396:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5389:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:6"
																		},
																		"nativeSrc": "5389:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5380:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:6"
																},
																"nativeSrc": "5380:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5380:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5372:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5372:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5112:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5174:4:6",
														"nodeType": "YulTypedName",
														"src": "5174:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5180:3:6",
														"nodeType": "YulTypedName",
														"src": "5180:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5188:4:6",
														"nodeType": "YulTypedName",
														"src": "5188:4:6",
														"type": ""
													}
												],
												"src": "5112:295:6"
											},
											{
												"body": {
													"nativeSrc": "5504:1303:6",
													"nodeType": "YulBlock",
													"src": "5504:1303:6",
													"statements": [
														{
															"nativeSrc": "5515:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5515:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5562:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5529:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:32:6"
																},
																"nativeSrc": "5529:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5529:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5519:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5519:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5651:22:6",
																"nodeType": "YulBlock",
																"src": "5651:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5653:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5653:16:6"
																			},
																			"nativeSrc": "5653:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5653:18:6"
																		},
																		"nativeSrc": "5653:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5653:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5623:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5623:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5631:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5631:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5620:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5620:2:6"
																},
																"nativeSrc": "5620:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5620:30:6"
															},
															"nativeSrc": "5617:56:6",
															"nodeType": "YulIf",
															"src": "5617:56:6"
														},
														{
															"nativeSrc": "5683:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5683:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5729:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5729:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5723:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5723:5:6"
																		},
																		"nativeSrc": "5723:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5723:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5697:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5697:25:6"
																},
																"nativeSrc": "5697:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5697:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5687:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5687:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5828:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5828:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5834:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5842:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5842:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5782:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5782:45:6"
																},
																"nativeSrc": "5782:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5782:67:6"
															},
															"nativeSrc": "5782:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5782:67:6"
														},
														{
															"nativeSrc": "5859:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5859:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5876:1:6",
																"nodeType": "YulLiteral",
																"src": "5876:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5863:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5863:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5887:17:6",
															"nodeType": "YulAssignment",
															"src": "5887:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5900:4:6",
																"nodeType": "YulLiteral",
																"src": "5900:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5887:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5887:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5951:611:6",
																		"nodeType": "YulBlock",
																		"src": "5951:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5965:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5965:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5984:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5984:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5996:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5996:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5992:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5992:3:6"
																							},
																							"nativeSrc": "5992:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5992:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5980:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5980:3:6"
																					},
																					"nativeSrc": "5980:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5980:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5969:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5969:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6016:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6016:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6062:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6062:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6030:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "6030:31:6"
																					},
																					"nativeSrc": "6030:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6030:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6020:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6020:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6080:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6080:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6089:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6089:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6084:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6084:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6148:163:6",
																					"nodeType": "YulBlock",
																					"src": "6148:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6173:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6173:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6191:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6191:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6196:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6196:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6187:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6187:3:6"
																												},
																												"nativeSrc": "6187:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6187:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6181:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6181:5:6"
																										},
																										"nativeSrc": "6181:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6181:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6166:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6166:6:6"
																								},
																								"nativeSrc": "6166:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6166:42:6"
																							},
																							"nativeSrc": "6166:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6166:42:6"
																						},
																						{
																							"nativeSrc": "6225:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6225:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6239:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6239:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6247:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6247:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6235:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6235:3:6"
																								},
																								"nativeSrc": "6235:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6235:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6225:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6225:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6266:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6266:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6283:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6283:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6294:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6294:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6279:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6279:3:6"
																								},
																								"nativeSrc": "6279:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6279:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6266:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6266:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6114:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6114:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6117:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6117:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6111:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6111:2:6"
																					},
																					"nativeSrc": "6111:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6111:14:6"
																				},
																				"nativeSrc": "6103:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6126:21:6",
																					"nodeType": "YulBlock",
																					"src": "6126:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6128:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6128:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6137:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6137:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6140:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6140:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6133:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6133:3:6"
																								},
																								"nativeSrc": "6133:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6133:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6128:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6128:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6107:3:6",
																					"nodeType": "YulBlock",
																					"src": "6107:3:6",
																					"statements": []
																				},
																				"src": "6103:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6347:156:6",
																					"nodeType": "YulBlock",
																					"src": "6347:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6365:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6365:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6392:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6392:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6397:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6397:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6388:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6388:3:6"
																										},
																										"nativeSrc": "6388:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6388:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6382:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6382:5:6"
																								},
																								"nativeSrc": "6382:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6382:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6369:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6369:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6432:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6432:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6459:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6459:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6474:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6474:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6482:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6482:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6470:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6470:3:6"
																												},
																												"nativeSrc": "6470:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6470:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6440:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "6440:18:6"
																										},
																										"nativeSrc": "6440:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6440:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6425:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6425:6:6"
																								},
																								"nativeSrc": "6425:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6425:64:6"
																							},
																							"nativeSrc": "6425:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6425:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6330:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6330:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6339:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6339:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6327:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6327:2:6"
																					},
																					"nativeSrc": "6327:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6327:19:6"
																				},
																				"nativeSrc": "6324:179:6",
																				"nodeType": "YulIf",
																				"src": "6324:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6523:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6523:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6537:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6537:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6545:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6545:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6533:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6533:3:6"
																									},
																									"nativeSrc": "6533:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6533:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6549:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6549:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6529:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6529:3:6"
																							},
																							"nativeSrc": "6529:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6529:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6516:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6516:6:6"
																					},
																					"nativeSrc": "6516:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6516:36:6"
																				},
																				"nativeSrc": "6516:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6516:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5944:618:6",
																	"nodeType": "YulCase",
																	"src": "5944:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5949:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5949:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6579:222:6",
																		"nodeType": "YulBlock",
																		"src": "6579:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6593:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6593:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6606:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6597:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6597:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6630:67:6",
																					"nodeType": "YulBlock",
																					"src": "6630:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6648:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6648:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6667:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6667:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6672:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6672:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6663:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6663:3:6"
																										},
																										"nativeSrc": "6663:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6663:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6657:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6657:5:6"
																								},
																								"nativeSrc": "6657:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6657:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6648:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6648:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6623:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6623:6:6"
																				},
																				"nativeSrc": "6620:77:6",
																				"nodeType": "YulIf",
																				"src": "6620:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6717:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6717:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6776:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6776:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6783:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6783:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6723:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6723:52:6"
																							},
																							"nativeSrc": "6723:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6723:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6710:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6710:6:6"
																					},
																					"nativeSrc": "6710:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6710:81:6"
																				},
																				"nativeSrc": "6710:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6710:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6571:230:6",
																	"nodeType": "YulCase",
																	"src": "6571:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5924:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5924:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5932:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5921:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5921:2:6"
																},
																"nativeSrc": "5921:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5921:14:6"
															},
															"nativeSrc": "5914:887:6",
															"nodeType": "YulSwitch",
															"src": "5914:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5412:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5493:4:6",
														"nodeType": "YulTypedName",
														"src": "5493:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5499:3:6",
														"nodeType": "YulTypedName",
														"src": "5499:3:6",
														"type": ""
													}
												],
												"src": "5412:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516130c63803806130c6833981810160405281019061003191906101b5565b6040518060400160405280600a81526020017f53696d706c6553776170000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f535300000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061042d565b5080600490816100bc919061042d565b5050508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506104fc565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101738261014a565b9050919050565b5f61018482610169565b9050919050565b6101948161017a565b811461019e575f80fd5b50565b5f815190506101af8161018b565b92915050565b5f80604083850312156101cb576101ca610146565b5b5f6101d8858286016101a1565b92505060206101e9858286016101a1565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026e57607f821691505b6020821081036102815761028061022a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a8565b6102ed86836102a8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033161032c61032784610305565b61030e565b610305565b9050919050565b5f819050919050565b61034a83610317565b61035e61035682610338565b8484546102b4565b825550505050565b5f90565b610372610366565b61037d818484610341565b505050565b5b818110156103a0576103955f8261036a565b600181019050610383565b5050565b601f8211156103e5576103b681610287565b6103bf84610299565b810160208510156103ce578190505b6103e26103da85610299565b830182610382565b50505b505050565b5f82821c905092915050565b5f6104055f19846008026103ea565b1980831691505092915050565b5f61041d83836103f6565b9150826002028217905092915050565b610436826101f3565b67ffffffffffffffff81111561044f5761044e6101fd565b5b6104598254610257565b6104648282856103a4565b5f60209050601f831160018114610495575f8415610483578287015190505b61048d8582610412565b8655506104f4565b601f1984166104a386610287565b5f5b828110156104ca578489015182556001820191506020850194506020810190506104a5565b868310156104e757848901516104e3601f8916826103f6565b8355505b6001600288020188555050505b505050505050565b612bbd806105095f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80635a76f25e116100a05780639cd441da1161006f5780639cd441da146102d1578063a3919e4214610301578063a9059cbb14610331578063d21220a714610361578063dd62ed3e1461037f57610109565b80635a76f25e1461023457806370a082311461025257806395d89b41146102825780639c8f9f23146102a057610109565b806323b872dd116100dc57806323b872dd14610197578063313ce567146101c757806343264349146101e5578063443cb4bc1461021657610109565b806306fdde031461010d578063095ea7b31461012b5780630dfe16811461015b57806318160ddd14610179575b5f80fd5b6101156103af565b6040516101229190611fae565b60405180910390f35b6101456004803603810190610140919061205f565b61043f565b60405161015291906120b7565b60405180910390f35b610163610461565b604051610170919061212b565b60405180910390f35b610181610486565b60405161018e9190612153565b60405180910390f35b6101b160048036038101906101ac919061216c565b61048f565b6040516101be91906120b7565b60405180910390f35b6101cf6104bd565b6040516101dc91906121d7565b60405180910390f35b6101ff60048036038101906101fa919061222b565b6104c5565b60405161020d92919061227b565b60405180910390f35b61021e610de8565b60405161022b9190612153565b60405180910390f35b61023c610dee565b6040516102499190612153565b60405180910390f35b61026c600480360381019061026791906122a2565b610df4565b6040516102799190612153565b60405180910390f35b61028a610e39565b6040516102979190611fae565b60405180910390f35b6102ba60048036038101906102b591906122cd565b610ec9565b6040516102c89291906122f8565b60405180910390f35b6102eb60048036038101906102e6919061231f565b61124c565b6040516102f89190612153565b60405180910390f35b61031b6004803603810190610316919061235d565b611672565b6040516103289190612153565b60405180910390f35b61034b6004803603810190610346919061205f565b611764565b60405161035891906120b7565b60405180910390f35b610369611786565b604051610376919061212b565b60405180910390f35b610399600480360381019061039491906123ad565b6117ab565b6040516103a69190612153565b60405180910390f35b6060600380546103be90612418565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea90612418565b80156104355780601f1061040c57610100808354040283529160200191610435565b820191905f5260205f20905b81548152906001019060200180831161041857829003601f168201915b5050505050905090565b5f8061044961182d565b9050610456818585611834565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f8061049961182d565b90506104a6858285611846565b6104b18585856118d9565b60019150509392505050565b5f6012905090565b5f805f8511610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090612492565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806105b0575060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b6105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e6906124fa565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064a9190612527565b602060405180830381865afa158015610665573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106899190612554565b90505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106e69190612527565b602060405180830381865afa158015610701573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107259190612554565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610a7b57610786878383611672565b935060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250848410156107e6576040517fcf3ba9fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108419190612527565b602060405180830381865afa15801561085c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108809190612554565b61088a91906125ac565b6007819055508360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108eb9190612527565b602060405180830381865afa158015610906573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092a9190612554565b61093491906125df565b60088190555060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161099893929190612612565b6020604051808303815f875af11580156109b4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d89190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610a3592919061269c565b6020604051808303815f875af1158015610a51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a759190612671565b50610d77565b610a86878284611672565b935060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925084841015610ae6576040517fcf3ba9fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b419190612527565b602060405180830381865afa158015610b5c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b809190612554565b610b8a91906125ac565b6008819055508360055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610beb9190612527565b602060405180830381865afa158015610c06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2a9190612554565b610c3491906125df565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610c9893929190612612565b6020604051808303815f875af1158015610cb4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd89190612671565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610d3592919061269c565b6020604051808303815f875af1158015610d51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d759190612671565b505b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f80044f7893845e3883418a4d784224b0d2d9606ca5f19c2a910401c2c62761b58987604051610dd69291906122f8565b60405180910390a35050935093915050565b60075481565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610e4890612418565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7490612418565b8015610ebf5780601f10610e9657610100808354040283529160200191610ebf565b820191905f5260205f20905b815481529060010190602001808311610ea257829003601f168201915b5050505050905090565b5f805f610ed533610df4565b905083811015610f1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f119061270d565b60405180910390fd5b5f610f23610486565b90508060075486610f34919061272b565b610f3e9190612799565b93508060085486610f4f919061272b565b610f599190612799565b92508360055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fb69190612527565b602060405180830381865afa158015610fd1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff59190612554565b610fff91906125df565b6007819055508260065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110609190612527565b602060405180830381865afa15801561107b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109f9190612554565b6110a991906125df565b6008819055506110b933866119c9565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161111592919061269c565b6020604051808303815f875af1158015611131573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111559190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016111b292919061269c565b6020604051808303815f875af11580156111ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f29190612671565b503373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d86868660405161123d939291906127c9565b60405180910390a25050915091565b5f80831161128f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112869061286e565b60405180910390fd5b5f82116112d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c8906128fc565b60405180910390fd5b8260055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161132c9190612527565b602060405180830381865afa158015611347573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136b9190612554565b61137591906125ac565b6007819055508160065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113d69190612527565b602060405180830381865afa1580156113f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114159190612554565b61141f91906125ac565b6008819055505f61142e610486565b90505f81036114525761144b8385611446919061272b565b611a48565b915061148f565b61148c6007548286611464919061272b565b61146e9190612799565b600854838661147d919061272b565b6114879190612799565b611abf565b91505b5f82116114d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c89061298a565b60405180910390fd5b6114db3383611ad7565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161153993929190612612565b6020604051808303815f875af1158015611555573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115799190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016115d893929190612612565b6020604051808303815f875af11580156115f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116189190612671565b503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e858585604051611663939291906127c9565b60405180910390a25092915050565b5f8084116116b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ac90612a18565b60405180910390fd5b5f83116116f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ee90612aa6565b60405180910390fd5b5f8211611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173090612b34565b60405180910390fd5b838361174591906125ac565b8285611751919061272b565b61175b9190612799565b90509392505050565b5f8061176e61182d565b905061177b8185856118d9565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6118418383836001611b56565b505050565b5f61185184846117ab565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156118d357818110156118c4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016118bb93929190612b52565b60405180910390fd5b6118d284848484035f611b56565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611949575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119409190612527565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119b09190612527565b60405180910390fd5b6119c4838383611d25565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a39575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a309190612527565b60405180910390fd5b611a44825f83611d25565b5050565b5f6003821115611aad578190505f6001600284611a659190612799565b611a6f91906125ac565b90505b81811015611aa7578091506002818285611a8c9190612799565b611a9691906125ac565b611aa09190612799565b9050611a72565b50611aba565b5f8214611ab957600190505b5b919050565b5f818310611acd5781611acf565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b47575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b3e9190612527565b60405180910390fd5b611b525f8383611d25565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611bc6575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611bbd9190612527565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c36575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c2d9190612527565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d1f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d169190612153565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d75578060025f828254611d6991906125ac565b92505081905550611e43565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dfe578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611df593929190612b52565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e8a578060025f8282540392505081905550611ed4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f319190612153565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f8082611f3e565b611f8a8185611f48565b9350611f9a818560208601611f58565b611fa381611f66565b840191505092915050565b5f6020820190508181035f830152611fc68184611f76565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ffb82611fd2565b9050919050565b61200b81611ff1565b8114612015575f80fd5b50565b5f8135905061202681612002565b92915050565b5f819050919050565b61203e8161202c565b8114612048575f80fd5b50565b5f8135905061205981612035565b92915050565b5f806040838503121561207557612074611fce565b5b5f61208285828601612018565b92505060206120938582860161204b565b9150509250929050565b5f8115159050919050565b6120b18161209d565b82525050565b5f6020820190506120ca5f8301846120a8565b92915050565b5f819050919050565b5f6120f36120ee6120e984611fd2565b6120d0565b611fd2565b9050919050565b5f612104826120d9565b9050919050565b5f612115826120fa565b9050919050565b6121258161210b565b82525050565b5f60208201905061213e5f83018461211c565b92915050565b61214d8161202c565b82525050565b5f6020820190506121665f830184612144565b92915050565b5f805f6060848603121561218357612182611fce565b5b5f61219086828701612018565b93505060206121a186828701612018565b92505060406121b28682870161204b565b9150509250925092565b5f60ff82169050919050565b6121d1816121bc565b82525050565b5f6020820190506121ea5f8301846121c8565b92915050565b5f6121fa82611ff1565b9050919050565b61220a816121f0565b8114612214575f80fd5b50565b5f8135905061222581612201565b92915050565b5f805f6060848603121561224257612241611fce565b5b5f61224f8682870161204b565b935050602061226086828701612217565b92505060406122718682870161204b565b9150509250925092565b5f60408201905061228e5f830185612144565b61229b602083018461211c565b9392505050565b5f602082840312156122b7576122b6611fce565b5b5f6122c484828501612018565b91505092915050565b5f602082840312156122e2576122e1611fce565b5b5f6122ef8482850161204b565b91505092915050565b5f60408201905061230b5f830185612144565b6123186020830184612144565b9392505050565b5f806040838503121561233557612334611fce565b5b5f6123428582860161204b565b92505060206123538582860161204b565b9150509250929050565b5f805f6060848603121561237457612373611fce565b5b5f6123818682870161204b565b93505060206123928682870161204b565b92505060406123a38682870161204b565b9150509250925092565b5f80604083850312156123c3576123c2611fce565b5b5f6123d085828601612018565b92505060206123e185828601612018565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061242f57607f821691505b602082108103612442576124416123eb565b5b50919050565b7f737761703a20616d6f756e74496e206d75737420706f736974697665000000005f82015250565b5f61247c601c83611f48565b915061248782612448565b602082019050919050565b5f6020820190508181035f8301526124a981612470565b9050919050565b7f737761703a20746f6b656e496e206e6f7420737570706f7274656400000000005f82015250565b5f6124e4601b83611f48565b91506124ef826124b0565b602082019050919050565b5f6020820190508181035f830152612511816124d8565b9050919050565b61252181611ff1565b82525050565b5f60208201905061253a5f830184612518565b92915050565b5f8151905061254e81612035565b92915050565b5f6020828403121561256957612568611fce565b5b5f61257684828501612540565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125b68261202c565b91506125c18361202c565b92508282019050808211156125d9576125d861257f565b5b92915050565b5f6125e98261202c565b91506125f48361202c565b925082820390508181111561260c5761260b61257f565b5b92915050565b5f6060820190506126255f830186612518565b6126326020830185612518565b61263f6040830184612144565b949350505050565b6126508161209d565b811461265a575f80fd5b50565b5f8151905061266b81612647565b92915050565b5f6020828403121561268657612685611fce565b5b5f6126938482850161265d565b91505092915050565b5f6040820190506126af5f830185612518565b6126bc6020830184612144565b9392505050565b7f4c5020696e73756666696369656e7400000000000000000000000000000000005f82015250565b5f6126f7600f83611f48565b9150612702826126c3565b602082019050919050565b5f6020820190508181035f830152612724816126eb565b9050919050565b5f6127358261202c565b91506127408361202c565b925082820261274e8161202c565b915082820484148315176127655761276461257f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6127a38261202c565b91506127ae8361202c565b9250826127be576127bd61276c565b5b828204905092915050565b5f6060820190506127dc5f830186612144565b6127e96020830185612144565b6127f66040830184612144565b949350505050565b7f6164644c69717569646974793a20746f6b656e30416d6f756e742063616e206e5f8201527f6f74207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f612858602783611f48565b9150612863826127fe565b604082019050919050565b5f6020820190508181035f8301526128858161284c565b9050919050565b7f6164644c69717569646974793a20746f6b656e31416d6f756e742063616e206e5f8201527f6f74207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f6128e6602783611f48565b91506128f18261288c565b604082019050919050565b5f6020820190508181035f830152612913816128da565b9050919050565b7f6164644c69717569646974793a20696e73756666696369656e74206c697175695f8201527f6469747900000000000000000000000000000000000000000000000000000000602082015250565b5f612974602483611f48565b915061297f8261291a565b604082019050919050565b5f6020820190508181035f8301526129a181612968565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a20616d6f756e74496e5f8201527f206d75737420706f736974697665000000000000000000000000000000000000602082015250565b5f612a02602e83611f48565b9150612a0d826129a8565b604082019050919050565b5f6020820190508181035f830152612a2f816129f6565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a2072657365727665495f8201527f6e206d75737420706f7369746976650000000000000000000000000000000000602082015250565b5f612a90602f83611f48565b9150612a9b82612a36565b604082019050919050565b5f6020820190508181035f830152612abd81612a84565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a20726573657276654f5f8201527f7574206d75737420706f73697469766500000000000000000000000000000000602082015250565b5f612b1e603083611f48565b9150612b2982612ac4565b604082019050919050565b5f6020820190508181035f830152612b4b81612b12565b9050919050565b5f606082019050612b655f830186612518565b612b726020830185612144565b612b7f6040830184612144565b94935050505056fea264697066735822122099834e2f6f4e98d84376552bb880117154be87b6df8bea8a7c9080f7e75105e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x30C6 CODESIZE SUB DUP1 PUSH2 0x30C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C655377617000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5353000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x4FC JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184 DUP3 PUSH2 0x169 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x17A JUMP JUMPDEST DUP2 EQ PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x146 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x22A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x2ED DUP7 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x331 PUSH2 0x32C PUSH2 0x327 DUP5 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x356 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x372 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x37D DUP2 DUP5 DUP5 PUSH2 0x341 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x395 PUSH0 DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x383 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3B6 DUP2 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x3BF DUP5 PUSH2 0x299 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E2 PUSH2 0x3DA DUP6 PUSH2 0x299 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x382 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41D DUP4 DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 DUP3 PUSH2 0x1F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH2 0x459 DUP3 SLOAD PUSH2 0x257 JUMP JUMPDEST PUSH2 0x464 DUP3 DUP3 DUP6 PUSH2 0x3A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x495 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x483 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48D DUP6 DUP3 PUSH2 0x412 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A3 DUP7 PUSH2 0x287 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BBD DUP1 PUSH2 0x509 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A76F25E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA3919E42 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2A0 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x216 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP3 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x435 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x435 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x418 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x449 PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x456 DUP2 DUP6 DUP6 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x499 PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x4A6 DUP6 DUP3 DUP6 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B0 JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7B JUMPI PUSH2 0x786 DUP8 DUP4 DUP4 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP5 DUP5 LT ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF3BA9FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xA86 DUP8 DUP3 DUP5 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP5 DUP5 LT ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF3BA9FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD35 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x80044F7893845E3883418A4D784224B0D2D9606CA5F19C2A910401C2C62761B5 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP3 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE48 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE74 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0xED5 CALLER PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF11 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF23 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 SLOAD DUP7 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x8 SLOAD DUP7 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1060 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109F SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x10B9 CALLER DUP7 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1131 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B2 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x123D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x128F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x12D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C8 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x142E PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1452 JUMPI PUSH2 0x144B DUP4 DUP6 PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP PUSH2 0x148F JUMP JUMPDEST PUSH2 0x148C PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x1464 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x146E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x147D SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C8 SWAP1 PUSH2 0x298A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DB CALLER DUP4 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1539 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1555 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1663 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AC SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EE SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x1739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1730 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1745 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP3 DUP6 PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x176E PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x177B DUP2 DUP6 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1841 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1851 DUP5 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x18D3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18C4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1949 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C4 DUP4 DUP4 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A39 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A30 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A44 DUP3 PUSH0 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1AAD JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1A65 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1A6F SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AA7 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1A8C SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x1AA0 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A72 JUMP JUMPDEST POP PUSH2 0x1ABA JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1AB9 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1ACD JUMPI DUP2 PUSH2 0x1ACF JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3E SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B52 PUSH0 DUP4 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBD SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2D SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D1F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D75 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E43 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DFE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E8A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F31 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F80 DUP3 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x1F8A DUP2 DUP6 PUSH2 0x1F48 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1FA3 DUP2 PUSH2 0x1F66 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC6 DUP2 DUP5 PUSH2 0x1F76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFB DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200B DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2015 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2026 DUP2 PUSH2 0x2002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x202C JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2059 DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2082 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2093 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B1 DUP2 PUSH2 0x209D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20CA PUSH0 DUP4 ADD DUP5 PUSH2 0x20A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F3 PUSH2 0x20EE PUSH2 0x20E9 DUP5 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2104 DUP3 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2115 DUP3 PUSH2 0x20FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2125 DUP2 PUSH2 0x210B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213E PUSH0 DUP4 ADD DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x214D DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH0 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2190 DUP7 DUP3 DUP8 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21B2 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D1 DUP2 PUSH2 0x21BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21EA PUSH0 DUP4 ADD DUP5 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA DUP3 PUSH2 0x1FF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2225 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2241 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x224F DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2260 DUP7 DUP3 DUP8 ADD PUSH2 0x2217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2271 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH0 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x229B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B6 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C4 DUP5 DUP3 DUP6 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22EF DUP5 DUP3 DUP6 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x230B PUSH0 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x2318 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2342 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2353 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2381 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2392 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23A3 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D0 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x242F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2442 JUMPI PUSH2 0x2441 PUSH2 0x23EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737761703A20616D6F756E74496E206D75737420706F73697469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x247C PUSH1 0x1C DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2487 DUP3 PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A9 DUP2 PUSH2 0x2470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737761703A20746F6B656E496E206E6F7420737570706F727465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E4 PUSH1 0x1B DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EF DUP3 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2511 DUP2 PUSH2 0x24D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253A PUSH0 DUP4 ADD DUP5 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x254E DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2576 DUP5 DUP3 DUP6 ADD PUSH2 0x2540 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25B6 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C1 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25D9 JUMPI PUSH2 0x25D8 PUSH2 0x257F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25E9 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x25F4 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x260C JUMPI PUSH2 0x260B PUSH2 0x257F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2625 PUSH0 DUP4 ADD DUP7 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x2632 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x263F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2650 DUP2 PUSH2 0x209D JUMP JUMPDEST DUP2 EQ PUSH2 0x265A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266B DUP2 PUSH2 0x2647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2686 JUMPI PUSH2 0x2685 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2693 DUP5 DUP3 DUP6 ADD PUSH2 0x265D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26AF PUSH0 DUP4 ADD DUP6 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4C5020696E73756666696369656E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH1 0xF DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP3 PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2724 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2735 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2740 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274E DUP2 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x257F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x27A3 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x27AE DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x276C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27DC PUSH0 DUP4 ADD DUP7 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x27E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20746F6B656E30416D6F756E742063616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH1 0x27 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP3 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20746F6B656E31416D6F756E742063616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E6 PUSH1 0x27 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F1 DUP3 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2913 DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20696E73756666696369656E74206C69717569 PUSH0 DUP3 ADD MSTORE PUSH32 0x6469747900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2974 PUSH1 0x24 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x297F DUP3 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29A1 DUP2 PUSH2 0x2968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A20616D6F756E74496E PUSH0 DUP3 ADD MSTORE PUSH32 0x206D75737420706F736974697665000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A02 PUSH1 0x2E DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0D DUP3 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2F DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A207265736572766549 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E206D75737420706F7369746976650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A90 PUSH1 0x2F DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9B DUP3 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ABD DUP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A20726573657276654F PUSH0 DUP3 ADD MSTORE PUSH32 0x7574206D75737420706F73697469766500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B1E PUSH1 0x30 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B29 DUP3 PUSH2 0x2AC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B65 PUSH0 DUP4 ADD DUP7 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x2B72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x2B7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP4 0x4E 0x2F PUSH16 0x4E98D84376552BB880117154BE87B6DF DUP12 0xEA DUP11 PUSH29 0x9080F7E75105E164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "224:8130:5:-:0;;;1009:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1098:7:5::1;1089:6;;:16;;;;;;;;;;;;;;;;;;1124:7;1115:6;;:16;;;;;;;;;;;;;;;;;;1009:129:::0;;224:8130;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:563::-;1124:6;1132;1181:2;1169:9;1160:7;1156:23;1152:32;1149:119;;;1187:79;;:::i;:::-;1149:119;1307:1;1332:78;1402:7;1393:6;1382:9;1378:22;1332:78;:::i;:::-;1322:88;;1278:142;1459:2;1485:78;1555:7;1546:6;1535:9;1531:22;1485:78;:::i;:::-;1475:88;;1430:143;1017:563;;;;;:::o;1586:99::-;1638:6;1672:5;1666:12;1656:22;;1586:99;;;:::o;1691:180::-;1739:77;1736:1;1729:88;1836:4;1833:1;1826:15;1860:4;1857:1;1850:15;1877:180;1925:77;1922:1;1915:88;2022:4;2019:1;2012:15;2046:4;2043:1;2036:15;2063:320;2107:6;2144:1;2138:4;2134:12;2124:22;;2191:1;2185:4;2181:12;2212:18;2202:81;;2268:4;2260:6;2256:17;2246:27;;2202:81;2330:2;2322:6;2319:14;2299:18;2296:38;2293:84;;2349:18;;:::i;:::-;2293:84;2114:269;2063:320;;;:::o;2389:141::-;2438:4;2461:3;2453:11;;2484:3;2481:1;2474:14;2518:4;2515:1;2505:18;2497:26;;2389:141;;;:::o;2536:93::-;2573:6;2620:2;2615;2608:5;2604:14;2600:23;2590:33;;2536:93;;;:::o;2635:107::-;2679:8;2729:5;2723:4;2719:16;2698:37;;2635:107;;;;:::o;2748:393::-;2817:6;2867:1;2855:10;2851:18;2890:97;2920:66;2909:9;2890:97;:::i;:::-;3008:39;3038:8;3027:9;3008:39;:::i;:::-;2996:51;;3080:4;3076:9;3069:5;3065:21;3056:30;;3129:4;3119:8;3115:19;3108:5;3105:30;3095:40;;2824:317;;2748:393;;;;;:::o;3147:77::-;3184:7;3213:5;3202:16;;3147:77;;;:::o;3230:60::-;3258:3;3279:5;3272:12;;3230:60;;;:::o;3296:142::-;3346:9;3379:53;3397:34;3406:24;3424:5;3406:24;:::i;:::-;3397:34;:::i;:::-;3379:53;:::i;:::-;3366:66;;3296:142;;;:::o;3444:75::-;3487:3;3508:5;3501:12;;3444:75;;;:::o;3525:269::-;3635:39;3666:7;3635:39;:::i;:::-;3696:91;3745:41;3769:16;3745:41;:::i;:::-;3737:6;3730:4;3724:11;3696:91;:::i;:::-;3690:4;3683:105;3601:193;3525:269;;;:::o;3800:73::-;3845:3;3800:73;:::o;3879:189::-;3956:32;;:::i;:::-;3997:65;4055:6;4047;4041:4;3997:65;:::i;:::-;3932:136;3879:189;;:::o;4074:186::-;4134:120;4151:3;4144:5;4141:14;4134:120;;;4205:39;4242:1;4235:5;4205:39;:::i;:::-;4178:1;4171:5;4167:13;4158:22;;4134:120;;;4074:186;;:::o;4266:543::-;4367:2;4362:3;4359:11;4356:446;;;4401:38;4433:5;4401:38;:::i;:::-;4485:29;4503:10;4485:29;:::i;:::-;4475:8;4471:44;4668:2;4656:10;4653:18;4650:49;;;4689:8;4674:23;;4650:49;4712:80;4768:22;4786:3;4768:22;:::i;:::-;4758:8;4754:37;4741:11;4712:80;:::i;:::-;4371:431;;4356:446;4266:543;;;:::o;4815:117::-;4869:8;4919:5;4913:4;4909:16;4888:37;;4815:117;;;;:::o;4938:169::-;4982:6;5015:51;5063:1;5059:6;5051:5;5048:1;5044:13;5015:51;:::i;:::-;5011:56;5096:4;5090;5086:15;5076:25;;4989:118;4938:169;;;;:::o;5112:295::-;5188:4;5334:29;5359:3;5353:4;5334:29;:::i;:::-;5326:37;;5396:3;5393:1;5389:11;5383:4;5380:21;5372:29;;5112:295;;;;:::o;5412:1395::-;5529:37;5562:3;5529:37;:::i;:::-;5631:18;5623:6;5620:30;5617:56;;;5653:18;;:::i;:::-;5617:56;5697:38;5729:4;5723:11;5697:38;:::i;:::-;5782:67;5842:6;5834;5828:4;5782:67;:::i;:::-;5876:1;5900:4;5887:17;;5932:2;5924:6;5921:14;5949:1;5944:618;;;;6606:1;6623:6;6620:77;;;6672:9;6667:3;6663:19;6657:26;6648:35;;6620:77;6723:67;6783:6;6776:5;6723:67;:::i;:::-;6717:4;6710:81;6579:222;5914:887;;5944:618;5996:4;5992:9;5984:6;5980:22;6030:37;6062:4;6030:37;:::i;:::-;6089:1;6103:208;6117:7;6114:1;6111:14;6103:208;;;6196:9;6191:3;6187:19;6181:26;6173:6;6166:42;6247:1;6239:6;6235:14;6225:24;;6294:2;6283:9;6279:18;6266:31;;6140:4;6137:1;6133:12;6128:17;;6103:208;;;6339:6;6330:7;6327:19;6324:179;;;6397:9;6392:3;6388:19;6382:26;6440:48;6482:4;6474:6;6470:17;6459:9;6440:48;:::i;:::-;6432:6;6425:64;6347:156;6324:179;6549:1;6545;6537:6;6533:14;6529:22;6523:4;6516:36;5951:611;;;5914:887;;5504:1303;;;5412:1395;;:::o;224:8130:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 6196,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 6998,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 6601,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 6871,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 6189,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 6214,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 6361,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 7461,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_981": {
									"entryPoint": 4684,
									"id": 981,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 6059,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1087,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 3572,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateSwapOutAmount_1326": {
									"entryPoint": 5746,
									"id": 1326,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1213,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_1399": {
									"entryPoint": 6847,
									"id": 1399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 943,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1080": {
									"entryPoint": 3785,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_830": {
									"entryPoint": 3560,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_832": {
									"entryPoint": 3566,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_1380": {
									"entryPoint": 6728,
									"id": 1380,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_1281": {
									"entryPoint": 1221,
									"id": 1281,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@symbol_206": {
									"entryPoint": 3641,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_825": {
									"entryPoint": 1121,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_828": {
									"entryPoint": 6022,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1158,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1167,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 5988,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$729": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9746,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11090,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10185,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2": {
									"entryPoint": 10664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f": {
									"entryPoint": 9923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8": {
									"entryPoint": 10948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568": {
									"entryPoint": 10806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c": {
									"entryPoint": 10380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23881:6",
										"nodeType": "YulBlock",
										"src": "0:23881:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3371:28:6",
													"nodeType": "YulBlock",
													"src": "3371:28:6",
													"statements": [
														{
															"nativeSrc": "3381:12:6",
															"nodeType": "YulAssignment",
															"src": "3381:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3388:5:6",
																"nodeType": "YulIdentifier",
																"src": "3388:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3381:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3339:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:6",
														"nodeType": "YulTypedName",
														"src": "3357:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3367:3:6",
														"nodeType": "YulTypedName",
														"src": "3367:3:6",
														"type": ""
													}
												],
												"src": "3339:60:6"
											},
											{
												"body": {
													"nativeSrc": "3465:82:6",
													"nodeType": "YulBlock",
													"src": "3465:82:6",
													"statements": [
														{
															"nativeSrc": "3475:66:6",
															"nodeType": "YulAssignment",
															"src": "3475:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3515:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3515:17:6"
																				},
																				"nativeSrc": "3515:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3515:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3506:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3506:8:6"
																		},
																		"nativeSrc": "3506:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3488:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3488:17:6"
																},
																"nativeSrc": "3488:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3488:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3475:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3475:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3405:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:6",
														"nodeType": "YulTypedName",
														"src": "3445:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3455:9:6",
														"nodeType": "YulTypedName",
														"src": "3455:9:6",
														"type": ""
													}
												],
												"src": "3405:142:6"
											},
											{
												"body": {
													"nativeSrc": "3613:66:6",
													"nodeType": "YulBlock",
													"src": "3613:66:6",
													"statements": [
														{
															"nativeSrc": "3623:50:6",
															"nodeType": "YulAssignment",
															"src": "3623:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3667:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3667:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3636:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3636:30:6"
																},
																"nativeSrc": "3636:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3636:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3623:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3623:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3553:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3593:5:6",
														"nodeType": "YulTypedName",
														"src": "3593:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3603:9:6",
														"nodeType": "YulTypedName",
														"src": "3603:9:6",
														"type": ""
													}
												],
												"src": "3553:126:6"
											},
											{
												"body": {
													"nativeSrc": "3759:66:6",
													"nodeType": "YulBlock",
													"src": "3759:66:6",
													"statements": [
														{
															"nativeSrc": "3769:50:6",
															"nodeType": "YulAssignment",
															"src": "3769:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3813:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3813:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3782:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3782:30:6"
																},
																"nativeSrc": "3782:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3782:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3769:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "3685:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3739:5:6",
														"nodeType": "YulTypedName",
														"src": "3739:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3749:9:6",
														"nodeType": "YulTypedName",
														"src": "3749:9:6",
														"type": ""
													}
												],
												"src": "3685:140:6"
											},
											{
												"body": {
													"nativeSrc": "3910:80:6",
													"nodeType": "YulBlock",
													"src": "3910:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3927:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3977:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3977:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "3932:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "3932:44:6"
																		},
																		"nativeSrc": "3932:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3932:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:6"
																},
																"nativeSrc": "3920:64:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:64:6"
															},
															"nativeSrc": "3920:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "3920:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "3831:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3898:5:6",
														"nodeType": "YulTypedName",
														"src": "3898:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3905:3:6",
														"nodeType": "YulTypedName",
														"src": "3905:3:6",
														"type": ""
													}
												],
												"src": "3831:159:6"
											},
											{
												"body": {
													"nativeSrc": "4108:138:6",
													"nodeType": "YulBlock",
													"src": "4108:138:6",
													"statements": [
														{
															"nativeSrc": "4118:26:6",
															"nodeType": "YulAssignment",
															"src": "4118:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4141:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4141:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:6"
																},
																"nativeSrc": "4126:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4126:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4225:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4236:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4236:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:6"
																		},
																		"nativeSrc": "4221:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "4154:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:57:6"
																},
																"nativeSrc": "4154:85:6",
																"nodeType": "YulFunctionCall",
																"src": "4154:85:6"
															},
															"nativeSrc": "4154:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "4154:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "3996:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:6",
														"nodeType": "YulTypedName",
														"src": "4080:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4092:6:6",
														"nodeType": "YulTypedName",
														"src": "4092:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4103:4:6",
														"nodeType": "YulTypedName",
														"src": "4103:4:6",
														"type": ""
													}
												],
												"src": "3996:250:6"
											},
											{
												"body": {
													"nativeSrc": "4317:53:6",
													"nodeType": "YulBlock",
													"src": "4317:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4334:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4334:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4357:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4357:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4339:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4339:17:6"
																		},
																		"nativeSrc": "4339:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4339:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4327:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:6"
																},
																"nativeSrc": "4327:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4327:37:6"
															},
															"nativeSrc": "4327:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4327:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4252:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4305:5:6",
														"nodeType": "YulTypedName",
														"src": "4305:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4312:3:6",
														"nodeType": "YulTypedName",
														"src": "4312:3:6",
														"type": ""
													}
												],
												"src": "4252:118:6"
											},
											{
												"body": {
													"nativeSrc": "4474:124:6",
													"nodeType": "YulBlock",
													"src": "4474:124:6",
													"statements": [
														{
															"nativeSrc": "4484:26:6",
															"nodeType": "YulAssignment",
															"src": "4484:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:6"
																},
																"nativeSrc": "4492:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4492:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4484:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4564:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4564:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4577:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4588:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4588:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:6"
																		},
																		"nativeSrc": "4573:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4573:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4520:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4520:43:6"
																},
																"nativeSrc": "4520:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4520:71:6"
															},
															"nativeSrc": "4520:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4520:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4376:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4446:9:6",
														"nodeType": "YulTypedName",
														"src": "4446:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4458:6:6",
														"nodeType": "YulTypedName",
														"src": "4458:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4469:4:6",
														"nodeType": "YulTypedName",
														"src": "4469:4:6",
														"type": ""
													}
												],
												"src": "4376:222:6"
											},
											{
												"body": {
													"nativeSrc": "4704:519:6",
													"nodeType": "YulBlock",
													"src": "4704:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4750:83:6",
																"nodeType": "YulBlock",
																"src": "4750:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4752:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4752:77:6"
																			},
																			"nativeSrc": "4752:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4752:79:6"
																		},
																		"nativeSrc": "4752:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4752:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4725:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4725:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4734:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:6"
																		},
																		"nativeSrc": "4721:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4746:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4717:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:6"
																},
																"nativeSrc": "4717:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:6"
															},
															"nativeSrc": "4714:119:6",
															"nodeType": "YulIf",
															"src": "4714:119:6"
														},
														{
															"nativeSrc": "4843:117:6",
															"nodeType": "YulBlock",
															"src": "4843:117:6",
															"statements": [
																{
																	"nativeSrc": "4858:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4862:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4887:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4887:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4922:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4922:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4933:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4933:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4918:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4918:3:6"
																				},
																				"nativeSrc": "4918:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4918:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4897:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4897:20:6"
																		},
																		"nativeSrc": "4897:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4897:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4887:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4887:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4970:118:6",
															"nodeType": "YulBlock",
															"src": "4970:118:6",
															"statements": [
																{
																	"nativeSrc": "4985:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4985:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4999:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4989:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4989:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5015:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5015:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5050:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5050:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5061:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5061:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5046:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5046:3:6"
																				},
																				"nativeSrc": "5046:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5046:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5070:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5070:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5025:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5025:20:6"
																		},
																		"nativeSrc": "5025:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5015:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5015:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5098:118:6",
															"nodeType": "YulBlock",
															"src": "5098:118:6",
															"statements": [
																{
																	"nativeSrc": "5113:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5113:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5127:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5127:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5117:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5117:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5143:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5143:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5178:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5178:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5189:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5189:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:6"
																				},
																				"nativeSrc": "5174:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5198:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5198:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5153:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5153:20:6"
																		},
																		"nativeSrc": "5153:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5143:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5143:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4604:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4658:9:6",
														"nodeType": "YulTypedName",
														"src": "4658:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4669:7:6",
														"nodeType": "YulTypedName",
														"src": "4669:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4681:6:6",
														"nodeType": "YulTypedName",
														"src": "4681:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4689:6:6",
														"nodeType": "YulTypedName",
														"src": "4689:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4697:6:6",
														"nodeType": "YulTypedName",
														"src": "4697:6:6",
														"type": ""
													}
												],
												"src": "4604:619:6"
											},
											{
												"body": {
													"nativeSrc": "5272:43:6",
													"nodeType": "YulBlock",
													"src": "5272:43:6",
													"statements": [
														{
															"nativeSrc": "5282:27:6",
															"nodeType": "YulAssignment",
															"src": "5282:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5297:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5304:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:6"
																},
																"nativeSrc": "5293:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5293:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5282:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5282:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5229:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5254:5:6",
														"nodeType": "YulTypedName",
														"src": "5254:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5264:7:6",
														"nodeType": "YulTypedName",
														"src": "5264:7:6",
														"type": ""
													}
												],
												"src": "5229:86:6"
											},
											{
												"body": {
													"nativeSrc": "5382:51:6",
													"nodeType": "YulBlock",
													"src": "5382:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5399:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5420:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5420:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5404:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5404:15:6"
																		},
																		"nativeSrc": "5404:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:6"
																},
																"nativeSrc": "5392:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5392:35:6"
															},
															"nativeSrc": "5392:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5392:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5321:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5370:5:6",
														"nodeType": "YulTypedName",
														"src": "5370:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5377:3:6",
														"nodeType": "YulTypedName",
														"src": "5377:3:6",
														"type": ""
													}
												],
												"src": "5321:112:6"
											},
											{
												"body": {
													"nativeSrc": "5533:120:6",
													"nodeType": "YulBlock",
													"src": "5533:120:6",
													"statements": [
														{
															"nativeSrc": "5543:26:6",
															"nodeType": "YulAssignment",
															"src": "5543:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5555:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5551:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:6"
																},
																"nativeSrc": "5551:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5551:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5543:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5543:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5619:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5619:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5643:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:6"
																		},
																		"nativeSrc": "5628:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5579:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5579:39:6"
																},
																"nativeSrc": "5579:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5579:67:6"
															},
															"nativeSrc": "5579:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5579:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5439:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5505:9:6",
														"nodeType": "YulTypedName",
														"src": "5505:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5517:6:6",
														"nodeType": "YulTypedName",
														"src": "5517:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5528:4:6",
														"nodeType": "YulTypedName",
														"src": "5528:4:6",
														"type": ""
													}
												],
												"src": "5439:214:6"
											},
											{
												"body": {
													"nativeSrc": "5718:51:6",
													"nodeType": "YulBlock",
													"src": "5718:51:6",
													"statements": [
														{
															"nativeSrc": "5728:35:6",
															"nodeType": "YulAssignment",
															"src": "5728:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5757:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5757:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "5739:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5739:17:6"
																},
																"nativeSrc": "5739:24:6",
																"nodeType": "YulFunctionCall",
																"src": "5739:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5728:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5728:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "5659:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5700:5:6",
														"nodeType": "YulTypedName",
														"src": "5700:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5710:7:6",
														"nodeType": "YulTypedName",
														"src": "5710:7:6",
														"type": ""
													}
												],
												"src": "5659:110:6"
											},
											{
												"body": {
													"nativeSrc": "5832:93:6",
													"nodeType": "YulBlock",
													"src": "5832:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5903:16:6",
																"nodeType": "YulBlock",
																"src": "5903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5905:6:6"
																			},
																			"nativeSrc": "5905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5905:12:6"
																		},
																		"nativeSrc": "5905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5855:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5855:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "5862:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "5862:31:6"
																				},
																				"nativeSrc": "5862:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5862:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5852:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5852:2:6"
																		},
																		"nativeSrc": "5852:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5852:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5845:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:6"
																},
																"nativeSrc": "5845:57:6",
																"nodeType": "YulFunctionCall",
																"src": "5845:57:6"
															},
															"nativeSrc": "5842:77:6",
															"nodeType": "YulIf",
															"src": "5842:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "5775:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5825:5:6",
														"nodeType": "YulTypedName",
														"src": "5825:5:6",
														"type": ""
													}
												],
												"src": "5775:150:6"
											},
											{
												"body": {
													"nativeSrc": "5997:101:6",
													"nodeType": "YulBlock",
													"src": "5997:101:6",
													"statements": [
														{
															"nativeSrc": "6007:29:6",
															"nodeType": "YulAssignment",
															"src": "6007:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6029:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6029:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6016:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:12:6"
																},
																"nativeSrc": "6016:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6007:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6007:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6086:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6086:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "6045:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "6045:40:6"
																},
																"nativeSrc": "6045:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6045:47:6"
															},
															"nativeSrc": "6045:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6045:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729",
												"nativeSrc": "5931:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5975:6:6",
														"nodeType": "YulTypedName",
														"src": "5975:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5983:3:6",
														"nodeType": "YulTypedName",
														"src": "5983:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5991:5:6",
														"nodeType": "YulTypedName",
														"src": "5991:5:6",
														"type": ""
													}
												],
												"src": "5931:167:6"
											},
											{
												"body": {
													"nativeSrc": "6218:533:6",
													"nodeType": "YulBlock",
													"src": "6218:533:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6264:83:6",
																"nodeType": "YulBlock",
																"src": "6264:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6266:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6266:77:6"
																			},
																			"nativeSrc": "6266:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6266:79:6"
																		},
																		"nativeSrc": "6266:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6266:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6239:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6239:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6248:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6248:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:6"
																		},
																		"nativeSrc": "6235:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6260:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6260:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:6"
																},
																"nativeSrc": "6231:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6231:32:6"
															},
															"nativeSrc": "6228:119:6",
															"nodeType": "YulIf",
															"src": "6228:119:6"
														},
														{
															"nativeSrc": "6357:117:6",
															"nodeType": "YulBlock",
															"src": "6357:117:6",
															"statements": [
																{
																	"nativeSrc": "6372:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6372:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6386:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6386:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6376:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6376:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6401:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6401:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6436:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6436:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6447:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6447:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6432:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6432:3:6"
																				},
																				"nativeSrc": "6432:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6432:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6456:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6456:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6411:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6411:20:6"
																		},
																		"nativeSrc": "6411:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6411:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6401:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6401:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6484:132:6",
															"nodeType": "YulBlock",
															"src": "6484:132:6",
															"statements": [
																{
																	"nativeSrc": "6499:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6499:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6513:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6513:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6503:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6503:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6529:77:6",
																	"nodeType": "YulAssignment",
																	"src": "6529:77:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6578:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6578:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6589:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6589:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6574:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6574:3:6"
																				},
																				"nativeSrc": "6574:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6574:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6598:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6598:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729",
																			"nativeSrc": "6539:34:6",
																			"nodeType": "YulIdentifier",
																			"src": "6539:34:6"
																		},
																		"nativeSrc": "6539:67:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:67:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6529:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6529:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6626:118:6",
															"nodeType": "YulBlock",
															"src": "6626:118:6",
															"statements": [
																{
																	"nativeSrc": "6641:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6641:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6655:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6645:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6645:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6671:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6671:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6706:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6706:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6717:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6717:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6702:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6702:3:6"
																				},
																				"nativeSrc": "6702:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6702:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6726:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6726:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6681:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6681:20:6"
																		},
																		"nativeSrc": "6681:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6681:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6671:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6671:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256",
												"nativeSrc": "6104:647:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6172:9:6",
														"nodeType": "YulTypedName",
														"src": "6172:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6183:7:6",
														"nodeType": "YulTypedName",
														"src": "6183:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6195:6:6",
														"nodeType": "YulTypedName",
														"src": "6195:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6203:6:6",
														"nodeType": "YulTypedName",
														"src": "6203:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6211:6:6",
														"nodeType": "YulTypedName",
														"src": "6211:6:6",
														"type": ""
													}
												],
												"src": "6104:647:6"
											},
											{
												"body": {
													"nativeSrc": "6897:220:6",
													"nodeType": "YulBlock",
													"src": "6897:220:6",
													"statements": [
														{
															"nativeSrc": "6907:26:6",
															"nodeType": "YulAssignment",
															"src": "6907:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6919:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6919:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6930:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6930:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6915:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6915:3:6"
																},
																"nativeSrc": "6915:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6915:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6907:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6907:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6987:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6987:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7000:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7011:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7011:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:6"
																		},
																		"nativeSrc": "6996:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6996:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6943:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6943:43:6"
																},
																"nativeSrc": "6943:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6943:71:6"
															},
															"nativeSrc": "6943:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6943:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7082:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7082:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:6"
																		},
																		"nativeSrc": "7091:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "7024:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "7024:57:6"
																},
																"nativeSrc": "7024:86:6",
																"nodeType": "YulFunctionCall",
																"src": "7024:86:6"
															},
															"nativeSrc": "7024:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "7024:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6757:360:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6861:9:6",
														"nodeType": "YulTypedName",
														"src": "6861:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6873:6:6",
														"nodeType": "YulTypedName",
														"src": "6873:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6881:6:6",
														"nodeType": "YulTypedName",
														"src": "6881:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6892:4:6",
														"nodeType": "YulTypedName",
														"src": "6892:4:6",
														"type": ""
													}
												],
												"src": "6757:360:6"
											},
											{
												"body": {
													"nativeSrc": "7189:263:6",
													"nodeType": "YulBlock",
													"src": "7189:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7235:83:6",
																"nodeType": "YulBlock",
																"src": "7235:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7237:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7237:77:6"
																			},
																			"nativeSrc": "7237:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7237:79:6"
																		},
																		"nativeSrc": "7237:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7237:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7210:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7210:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7219:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7219:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7206:3:6"
																		},
																		"nativeSrc": "7206:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7206:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7231:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:6"
																},
																"nativeSrc": "7202:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7202:32:6"
															},
															"nativeSrc": "7199:119:6",
															"nodeType": "YulIf",
															"src": "7199:119:6"
														},
														{
															"nativeSrc": "7328:117:6",
															"nodeType": "YulBlock",
															"src": "7328:117:6",
															"statements": [
																{
																	"nativeSrc": "7343:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7343:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7357:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7357:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7347:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7347:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7372:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7372:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7407:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7407:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7418:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7418:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7403:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7403:3:6"
																				},
																				"nativeSrc": "7403:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7403:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7427:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7427:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7382:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7382:20:6"
																		},
																		"nativeSrc": "7382:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7372:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7372:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7123:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7159:9:6",
														"nodeType": "YulTypedName",
														"src": "7159:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7170:7:6",
														"nodeType": "YulTypedName",
														"src": "7170:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7182:6:6",
														"nodeType": "YulTypedName",
														"src": "7182:6:6",
														"type": ""
													}
												],
												"src": "7123:329:6"
											},
											{
												"body": {
													"nativeSrc": "7524:263:6",
													"nodeType": "YulBlock",
													"src": "7524:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7570:83:6",
																"nodeType": "YulBlock",
																"src": "7570:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7572:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7572:77:6"
																			},
																			"nativeSrc": "7572:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7572:79:6"
																		},
																		"nativeSrc": "7572:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7572:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7545:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7545:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7554:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7554:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7541:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:6"
																		},
																		"nativeSrc": "7541:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7537:3:6"
																},
																"nativeSrc": "7537:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7537:32:6"
															},
															"nativeSrc": "7534:119:6",
															"nodeType": "YulIf",
															"src": "7534:119:6"
														},
														{
															"nativeSrc": "7663:117:6",
															"nodeType": "YulBlock",
															"src": "7663:117:6",
															"statements": [
																{
																	"nativeSrc": "7678:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7678:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7692:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7692:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7682:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7682:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7707:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7707:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7742:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7742:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7753:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7753:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7738:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7738:3:6"
																				},
																				"nativeSrc": "7738:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7738:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7762:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7762:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7717:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7717:20:6"
																		},
																		"nativeSrc": "7717:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7717:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7707:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7707:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7458:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7494:9:6",
														"nodeType": "YulTypedName",
														"src": "7494:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7505:7:6",
														"nodeType": "YulTypedName",
														"src": "7505:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7517:6:6",
														"nodeType": "YulTypedName",
														"src": "7517:6:6",
														"type": ""
													}
												],
												"src": "7458:329:6"
											},
											{
												"body": {
													"nativeSrc": "7919:206:6",
													"nodeType": "YulBlock",
													"src": "7919:206:6",
													"statements": [
														{
															"nativeSrc": "7929:26:6",
															"nodeType": "YulAssignment",
															"src": "7929:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7941:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7941:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7952:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7952:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7937:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7937:3:6"
																},
																"nativeSrc": "7937:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7937:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7929:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8009:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8009:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8022:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8022:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8033:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:6"
																		},
																		"nativeSrc": "8018:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7965:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7965:43:6"
																},
																"nativeSrc": "7965:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7965:71:6"
															},
															"nativeSrc": "7965:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7965:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8090:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8090:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8103:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8114:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8114:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8099:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:6"
																		},
																		"nativeSrc": "8099:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8099:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8046:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8046:43:6"
																},
																"nativeSrc": "8046:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8046:72:6"
															},
															"nativeSrc": "8046:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8046:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7793:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7883:9:6",
														"nodeType": "YulTypedName",
														"src": "7883:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7895:6:6",
														"nodeType": "YulTypedName",
														"src": "7895:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7903:6:6",
														"nodeType": "YulTypedName",
														"src": "7903:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7914:4:6",
														"nodeType": "YulTypedName",
														"src": "7914:4:6",
														"type": ""
													}
												],
												"src": "7793:332:6"
											},
											{
												"body": {
													"nativeSrc": "8214:391:6",
													"nodeType": "YulBlock",
													"src": "8214:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8260:83:6",
																"nodeType": "YulBlock",
																"src": "8260:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8262:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8262:77:6"
																			},
																			"nativeSrc": "8262:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8262:79:6"
																		},
																		"nativeSrc": "8262:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8262:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8235:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8235:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8244:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8244:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8231:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:6"
																		},
																		"nativeSrc": "8231:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8231:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8227:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8227:3:6"
																},
																"nativeSrc": "8227:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8227:32:6"
															},
															"nativeSrc": "8224:119:6",
															"nodeType": "YulIf",
															"src": "8224:119:6"
														},
														{
															"nativeSrc": "8353:117:6",
															"nodeType": "YulBlock",
															"src": "8353:117:6",
															"statements": [
																{
																	"nativeSrc": "8368:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8368:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8382:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8382:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8372:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8372:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8397:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8397:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8432:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8432:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8443:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8443:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8428:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8428:3:6"
																				},
																				"nativeSrc": "8428:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8428:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8452:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8452:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8407:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8407:20:6"
																		},
																		"nativeSrc": "8407:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8407:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8397:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8397:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8480:118:6",
															"nodeType": "YulBlock",
															"src": "8480:118:6",
															"statements": [
																{
																	"nativeSrc": "8495:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8495:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8509:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8509:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8499:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8499:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8525:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8525:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8560:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8560:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8571:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8571:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8556:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8556:3:6"
																				},
																				"nativeSrc": "8556:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8556:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8580:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8580:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8535:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8535:20:6"
																		},
																		"nativeSrc": "8535:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8535:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8525:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8525:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8131:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8176:9:6",
														"nodeType": "YulTypedName",
														"src": "8176:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8187:7:6",
														"nodeType": "YulTypedName",
														"src": "8187:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8199:6:6",
														"nodeType": "YulTypedName",
														"src": "8199:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8207:6:6",
														"nodeType": "YulTypedName",
														"src": "8207:6:6",
														"type": ""
													}
												],
												"src": "8131:474:6"
											},
											{
												"body": {
													"nativeSrc": "8711:519:6",
													"nodeType": "YulBlock",
													"src": "8711:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8757:83:6",
																"nodeType": "YulBlock",
																"src": "8757:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8759:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8759:77:6"
																			},
																			"nativeSrc": "8759:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8759:79:6"
																		},
																		"nativeSrc": "8759:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8759:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8732:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8732:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8741:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8728:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8728:3:6"
																		},
																		"nativeSrc": "8728:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8728:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8753:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8753:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8724:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8724:3:6"
																},
																"nativeSrc": "8724:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8724:32:6"
															},
															"nativeSrc": "8721:119:6",
															"nodeType": "YulIf",
															"src": "8721:119:6"
														},
														{
															"nativeSrc": "8850:117:6",
															"nodeType": "YulBlock",
															"src": "8850:117:6",
															"statements": [
																{
																	"nativeSrc": "8865:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8865:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8879:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8879:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8869:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8869:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8894:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8894:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8929:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8929:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8940:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8940:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8925:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8925:3:6"
																				},
																				"nativeSrc": "8925:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8925:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8949:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8949:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8904:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8904:20:6"
																		},
																		"nativeSrc": "8904:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8904:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8894:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8894:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8977:118:6",
															"nodeType": "YulBlock",
															"src": "8977:118:6",
															"statements": [
																{
																	"nativeSrc": "8992:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8992:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9006:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8996:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8996:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9022:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9022:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9057:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9057:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9068:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9068:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9053:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9053:3:6"
																				},
																				"nativeSrc": "9053:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9053:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9077:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9077:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9032:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9032:20:6"
																		},
																		"nativeSrc": "9032:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9032:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9022:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9022:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9105:118:6",
															"nodeType": "YulBlock",
															"src": "9105:118:6",
															"statements": [
																{
																	"nativeSrc": "9120:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9120:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9124:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9124:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9150:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9185:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9185:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9196:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9181:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9181:3:6"
																				},
																				"nativeSrc": "9181:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9205:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9160:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9160:20:6"
																		},
																		"nativeSrc": "9160:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9150:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9150:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "8611:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8665:9:6",
														"nodeType": "YulTypedName",
														"src": "8665:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8676:7:6",
														"nodeType": "YulTypedName",
														"src": "8676:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8688:6:6",
														"nodeType": "YulTypedName",
														"src": "8688:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8696:6:6",
														"nodeType": "YulTypedName",
														"src": "8696:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8704:6:6",
														"nodeType": "YulTypedName",
														"src": "8704:6:6",
														"type": ""
													}
												],
												"src": "8611:619:6"
											},
											{
												"body": {
													"nativeSrc": "9319:391:6",
													"nodeType": "YulBlock",
													"src": "9319:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9365:83:6",
																"nodeType": "YulBlock",
																"src": "9365:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9367:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9367:77:6"
																			},
																			"nativeSrc": "9367:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9367:79:6"
																		},
																		"nativeSrc": "9367:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9367:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9340:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9340:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9349:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9336:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:6"
																		},
																		"nativeSrc": "9336:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9332:3:6"
																},
																"nativeSrc": "9332:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9332:32:6"
															},
															"nativeSrc": "9329:119:6",
															"nodeType": "YulIf",
															"src": "9329:119:6"
														},
														{
															"nativeSrc": "9458:117:6",
															"nodeType": "YulBlock",
															"src": "9458:117:6",
															"statements": [
																{
																	"nativeSrc": "9473:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9487:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9502:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9502:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9537:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9537:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9548:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9548:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9533:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9533:3:6"
																				},
																				"nativeSrc": "9533:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9533:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9557:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9557:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9512:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9512:20:6"
																		},
																		"nativeSrc": "9512:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9512:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9502:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9502:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9585:118:6",
															"nodeType": "YulBlock",
															"src": "9585:118:6",
															"statements": [
																{
																	"nativeSrc": "9600:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9600:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9614:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9614:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9604:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9604:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9630:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9630:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9665:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9665:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9676:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9676:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9661:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9661:3:6"
																				},
																				"nativeSrc": "9661:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9661:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9685:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9685:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9640:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9640:20:6"
																		},
																		"nativeSrc": "9640:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9640:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9630:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9630:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9236:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9281:9:6",
														"nodeType": "YulTypedName",
														"src": "9281:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9292:7:6",
														"nodeType": "YulTypedName",
														"src": "9292:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9304:6:6",
														"nodeType": "YulTypedName",
														"src": "9304:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9312:6:6",
														"nodeType": "YulTypedName",
														"src": "9312:6:6",
														"type": ""
													}
												],
												"src": "9236:474:6"
											},
											{
												"body": {
													"nativeSrc": "9744:152:6",
													"nodeType": "YulBlock",
													"src": "9744:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9761:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9761:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9764:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9764:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:6"
																},
																"nativeSrc": "9754:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9754:88:6"
															},
															"nativeSrc": "9754:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9754:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9858:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9858:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9861:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9861:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:6"
																},
																"nativeSrc": "9851:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9851:15:6"
															},
															"nativeSrc": "9851:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9851:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9882:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9882:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9885:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9885:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9875:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:6"
																},
																"nativeSrc": "9875:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9875:15:6"
															},
															"nativeSrc": "9875:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9875:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9716:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9716:180:6"
											},
											{
												"body": {
													"nativeSrc": "9953:269:6",
													"nodeType": "YulBlock",
													"src": "9953:269:6",
													"statements": [
														{
															"nativeSrc": "9963:22:6",
															"nodeType": "YulAssignment",
															"src": "9963:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9977:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9977:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9983:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9983:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9973:3:6"
																},
																"nativeSrc": "9973:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9973:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9963:6:6"
																}
															]
														},
														{
															"nativeSrc": "9994:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9994:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10024:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10024:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10030:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10030:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10020:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10020:3:6"
																},
																"nativeSrc": "10020:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10020:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9998:18:6",
																	"nodeType": "YulTypedName",
																	"src": "9998:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10071:51:6",
																"nodeType": "YulBlock",
																"src": "10071:51:6",
																"statements": [
																	{
																		"nativeSrc": "10085:27:6",
																		"nodeType": "YulAssignment",
																		"src": "10085:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10099:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10099:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10107:4:6",
																					"nodeType": "YulLiteral",
																					"src": "10107:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10095:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10095:3:6"
																			},
																			"nativeSrc": "10095:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10095:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10085:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10085:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10051:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "10051:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:6"
																},
																"nativeSrc": "10044:26:6",
																"nodeType": "YulFunctionCall",
																"src": "10044:26:6"
															},
															"nativeSrc": "10041:81:6",
															"nodeType": "YulIf",
															"src": "10041:81:6"
														},
														{
															"body": {
																"nativeSrc": "10174:42:6",
																"nodeType": "YulBlock",
																"src": "10174:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10188:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10188:16:6"
																			},
																			"nativeSrc": "10188:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10188:18:6"
																		},
																		"nativeSrc": "10188:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10188:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10138:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "10138:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10161:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10161:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10169:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10169:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10158:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10158:2:6"
																		},
																		"nativeSrc": "10158:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10158:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10135:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10135:2:6"
																},
																"nativeSrc": "10135:38:6",
																"nodeType": "YulFunctionCall",
																"src": "10135:38:6"
															},
															"nativeSrc": "10132:84:6",
															"nodeType": "YulIf",
															"src": "10132:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9902:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9937:4:6",
														"nodeType": "YulTypedName",
														"src": "9937:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9946:6:6",
														"nodeType": "YulTypedName",
														"src": "9946:6:6",
														"type": ""
													}
												],
												"src": "9902:320:6"
											},
											{
												"body": {
													"nativeSrc": "10334:72:6",
													"nodeType": "YulBlock",
													"src": "10334:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10356:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10356:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10364:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10364:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:6"
																		},
																		"nativeSrc": "10352:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:14:6"
																	},
																	{
																		"hexValue": "737761703a20616d6f756e74496e206d75737420706f736974697665",
																		"kind": "string",
																		"nativeSrc": "10368:30:6",
																		"nodeType": "YulLiteral",
																		"src": "10368:30:6",
																		"type": "",
																		"value": "swap: amountIn must positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:6"
																},
																"nativeSrc": "10345:54:6",
																"nodeType": "YulFunctionCall",
																"src": "10345:54:6"
															},
															"nativeSrc": "10345:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "10345:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392",
												"nativeSrc": "10228:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10326:6:6",
														"nodeType": "YulTypedName",
														"src": "10326:6:6",
														"type": ""
													}
												],
												"src": "10228:178:6"
											},
											{
												"body": {
													"nativeSrc": "10558:220:6",
													"nodeType": "YulBlock",
													"src": "10558:220:6",
													"statements": [
														{
															"nativeSrc": "10568:74:6",
															"nodeType": "YulAssignment",
															"src": "10568:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10634:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10634:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10639:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10639:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10575:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10575:58:6"
																},
																"nativeSrc": "10575:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10575:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10568:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10568:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10740:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10740:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392",
																	"nativeSrc": "10651:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10651:88:6"
																},
																"nativeSrc": "10651:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10651:93:6"
															},
															"nativeSrc": "10651:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10651:93:6"
														},
														{
															"nativeSrc": "10753:19:6",
															"nodeType": "YulAssignment",
															"src": "10753:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10764:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10764:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10769:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10769:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10760:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10760:3:6"
																},
																"nativeSrc": "10760:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10760:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10753:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10412:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10546:3:6",
														"nodeType": "YulTypedName",
														"src": "10546:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10554:3:6",
														"nodeType": "YulTypedName",
														"src": "10554:3:6",
														"type": ""
													}
												],
												"src": "10412:366:6"
											},
											{
												"body": {
													"nativeSrc": "10955:248:6",
													"nodeType": "YulBlock",
													"src": "10955:248:6",
													"statements": [
														{
															"nativeSrc": "10965:26:6",
															"nodeType": "YulAssignment",
															"src": "10965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10977:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10977:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10988:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10973:3:6"
																},
																"nativeSrc": "10973:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10965:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10965:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11012:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11012:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11023:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11023:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11008:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11008:3:6"
																		},
																		"nativeSrc": "11008:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11008:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11031:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11031:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11037:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11037:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11027:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11027:3:6"
																		},
																		"nativeSrc": "11027:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11027:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11001:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11001:6:6"
																},
																"nativeSrc": "11001:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11001:47:6"
															},
															"nativeSrc": "11001:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11001:47:6"
														},
														{
															"nativeSrc": "11057:139:6",
															"nodeType": "YulAssignment",
															"src": "11057:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11191:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11191:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11065:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11065:124:6"
																},
																"nativeSrc": "11065:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11065:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11057:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11057:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10784:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10935:9:6",
														"nodeType": "YulTypedName",
														"src": "10935:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10950:4:6",
														"nodeType": "YulTypedName",
														"src": "10950:4:6",
														"type": ""
													}
												],
												"src": "10784:419:6"
											},
											{
												"body": {
													"nativeSrc": "11315:71:6",
													"nodeType": "YulBlock",
													"src": "11315:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11337:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11337:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11345:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11345:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11333:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:6"
																		},
																		"nativeSrc": "11333:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11333:14:6"
																	},
																	{
																		"hexValue": "737761703a20746f6b656e496e206e6f7420737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "11349:29:6",
																		"nodeType": "YulLiteral",
																		"src": "11349:29:6",
																		"type": "",
																		"value": "swap: tokenIn not supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11326:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:6"
																},
																"nativeSrc": "11326:53:6",
																"nodeType": "YulFunctionCall",
																"src": "11326:53:6"
															},
															"nativeSrc": "11326:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "11326:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910",
												"nativeSrc": "11209:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11307:6:6",
														"nodeType": "YulTypedName",
														"src": "11307:6:6",
														"type": ""
													}
												],
												"src": "11209:177:6"
											},
											{
												"body": {
													"nativeSrc": "11538:220:6",
													"nodeType": "YulBlock",
													"src": "11538:220:6",
													"statements": [
														{
															"nativeSrc": "11548:74:6",
															"nodeType": "YulAssignment",
															"src": "11548:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11614:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11614:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11619:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11619:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11555:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11555:58:6"
																},
																"nativeSrc": "11555:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11555:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11548:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11548:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11720:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11720:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910",
																	"nativeSrc": "11631:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11631:88:6"
																},
																"nativeSrc": "11631:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11631:93:6"
															},
															"nativeSrc": "11631:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11631:93:6"
														},
														{
															"nativeSrc": "11733:19:6",
															"nodeType": "YulAssignment",
															"src": "11733:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11744:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11744:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11749:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11740:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:6"
																},
																"nativeSrc": "11740:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11740:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11733:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11733:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11392:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11526:3:6",
														"nodeType": "YulTypedName",
														"src": "11526:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11534:3:6",
														"nodeType": "YulTypedName",
														"src": "11534:3:6",
														"type": ""
													}
												],
												"src": "11392:366:6"
											},
											{
												"body": {
													"nativeSrc": "11935:248:6",
													"nodeType": "YulBlock",
													"src": "11935:248:6",
													"statements": [
														{
															"nativeSrc": "11945:26:6",
															"nodeType": "YulAssignment",
															"src": "11945:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11957:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11957:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11968:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11968:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11953:3:6"
																},
																"nativeSrc": "11953:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11953:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11945:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11945:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11992:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11992:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12003:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12003:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11988:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11988:3:6"
																		},
																		"nativeSrc": "11988:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11988:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12011:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12011:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12017:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12017:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12007:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12007:3:6"
																		},
																		"nativeSrc": "12007:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12007:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11981:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11981:6:6"
																},
																"nativeSrc": "11981:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11981:47:6"
															},
															"nativeSrc": "11981:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11981:47:6"
														},
														{
															"nativeSrc": "12037:139:6",
															"nodeType": "YulAssignment",
															"src": "12037:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12171:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12171:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12045:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12045:124:6"
																},
																"nativeSrc": "12045:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12045:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12037:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12037:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11764:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11915:9:6",
														"nodeType": "YulTypedName",
														"src": "11915:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11930:4:6",
														"nodeType": "YulTypedName",
														"src": "11930:4:6",
														"type": ""
													}
												],
												"src": "11764:419:6"
											},
											{
												"body": {
													"nativeSrc": "12254:53:6",
													"nodeType": "YulBlock",
													"src": "12254:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12271:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12271:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12294:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12294:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12276:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "12276:17:6"
																		},
																		"nativeSrc": "12276:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12276:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12264:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:6"
																},
																"nativeSrc": "12264:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12264:37:6"
															},
															"nativeSrc": "12264:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "12264:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12189:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12242:5:6",
														"nodeType": "YulTypedName",
														"src": "12242:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12249:3:6",
														"nodeType": "YulTypedName",
														"src": "12249:3:6",
														"type": ""
													}
												],
												"src": "12189:118:6"
											},
											{
												"body": {
													"nativeSrc": "12411:124:6",
													"nodeType": "YulBlock",
													"src": "12411:124:6",
													"statements": [
														{
															"nativeSrc": "12421:26:6",
															"nodeType": "YulAssignment",
															"src": "12421:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12433:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12433:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12444:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12429:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:6"
																},
																"nativeSrc": "12429:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12429:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12421:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12421:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12501:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12501:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12514:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12514:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12525:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12525:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12510:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12510:3:6"
																		},
																		"nativeSrc": "12510:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12510:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12457:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12457:43:6"
																},
																"nativeSrc": "12457:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12457:71:6"
															},
															"nativeSrc": "12457:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12457:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12313:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12383:9:6",
														"nodeType": "YulTypedName",
														"src": "12383:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12395:6:6",
														"nodeType": "YulTypedName",
														"src": "12395:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12406:4:6",
														"nodeType": "YulTypedName",
														"src": "12406:4:6",
														"type": ""
													}
												],
												"src": "12313:222:6"
											},
											{
												"body": {
													"nativeSrc": "12604:80:6",
													"nodeType": "YulBlock",
													"src": "12604:80:6",
													"statements": [
														{
															"nativeSrc": "12614:22:6",
															"nodeType": "YulAssignment",
															"src": "12614:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12629:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12623:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12623:5:6"
																},
																"nativeSrc": "12623:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12623:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12614:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12614:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "12645:26:6"
																},
																"nativeSrc": "12645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "12645:33:6"
															},
															"nativeSrc": "12645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "12645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12541:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12582:6:6",
														"nodeType": "YulTypedName",
														"src": "12582:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12590:3:6",
														"nodeType": "YulTypedName",
														"src": "12590:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12598:5:6",
														"nodeType": "YulTypedName",
														"src": "12598:5:6",
														"type": ""
													}
												],
												"src": "12541:143:6"
											},
											{
												"body": {
													"nativeSrc": "12767:274:6",
													"nodeType": "YulBlock",
													"src": "12767:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12813:83:6",
																"nodeType": "YulBlock",
																"src": "12813:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12815:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12815:77:6"
																			},
																			"nativeSrc": "12815:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12815:79:6"
																		},
																		"nativeSrc": "12815:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12815:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12788:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12788:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12797:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12797:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12784:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12784:3:6"
																		},
																		"nativeSrc": "12784:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12809:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12809:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12780:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12780:3:6"
																},
																"nativeSrc": "12780:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12780:32:6"
															},
															"nativeSrc": "12777:119:6",
															"nodeType": "YulIf",
															"src": "12777:119:6"
														},
														{
															"nativeSrc": "12906:128:6",
															"nodeType": "YulBlock",
															"src": "12906:128:6",
															"statements": [
																{
																	"nativeSrc": "12921:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12921:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12935:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12935:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12925:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12925:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12950:74:6",
																	"nodeType": "YulAssignment",
																	"src": "12950:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12996:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12996:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13007:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13007:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12992:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12992:3:6"
																				},
																				"nativeSrc": "12992:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12992:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13016:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13016:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12960:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "12960:31:6"
																		},
																		"nativeSrc": "12960:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12960:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12950:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12950:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12690:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12737:9:6",
														"nodeType": "YulTypedName",
														"src": "12737:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12748:7:6",
														"nodeType": "YulTypedName",
														"src": "12748:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12760:6:6",
														"nodeType": "YulTypedName",
														"src": "12760:6:6",
														"type": ""
													}
												],
												"src": "12690:351:6"
											},
											{
												"body": {
													"nativeSrc": "13075:152:6",
													"nodeType": "YulBlock",
													"src": "13075:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13092:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13092:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13095:77:6",
																		"nodeType": "YulLiteral",
																		"src": "13095:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:6"
																},
																"nativeSrc": "13085:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13085:88:6"
															},
															"nativeSrc": "13085:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "13085:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13189:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13189:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13192:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13182:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:6"
																},
																"nativeSrc": "13182:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13182:15:6"
															},
															"nativeSrc": "13182:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13182:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13216:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13216:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13206:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:6"
																},
																"nativeSrc": "13206:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13206:15:6"
															},
															"nativeSrc": "13206:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13206:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13047:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "13047:180:6"
											},
											{
												"body": {
													"nativeSrc": "13277:147:6",
													"nodeType": "YulBlock",
													"src": "13277:147:6",
													"statements": [
														{
															"nativeSrc": "13287:25:6",
															"nodeType": "YulAssignment",
															"src": "13287:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13310:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13310:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13292:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13292:17:6"
																},
																"nativeSrc": "13292:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13292:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13287:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13287:1:6"
																}
															]
														},
														{
															"nativeSrc": "13321:25:6",
															"nodeType": "YulAssignment",
															"src": "13321:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13344:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13344:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13326:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13326:17:6"
																},
																"nativeSrc": "13326:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13326:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13321:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13321:1:6"
																}
															]
														},
														{
															"nativeSrc": "13355:16:6",
															"nodeType": "YulAssignment",
															"src": "13355:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13366:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13366:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13369:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13369:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:6"
																},
																"nativeSrc": "13362:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13362:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13355:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13355:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13395:22:6",
																"nodeType": "YulBlock",
																"src": "13395:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13397:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13397:16:6"
																			},
																			"nativeSrc": "13397:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13397:18:6"
																		},
																		"nativeSrc": "13397:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13397:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13387:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13387:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13390:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13390:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13384:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13384:2:6"
																},
																"nativeSrc": "13384:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13384:10:6"
															},
															"nativeSrc": "13381:36:6",
															"nodeType": "YulIf",
															"src": "13381:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13233:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13264:1:6",
														"nodeType": "YulTypedName",
														"src": "13264:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13267:1:6",
														"nodeType": "YulTypedName",
														"src": "13267:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13273:3:6",
														"nodeType": "YulTypedName",
														"src": "13273:3:6",
														"type": ""
													}
												],
												"src": "13233:191:6"
											},
											{
												"body": {
													"nativeSrc": "13475:149:6",
													"nodeType": "YulBlock",
													"src": "13475:149:6",
													"statements": [
														{
															"nativeSrc": "13485:25:6",
															"nodeType": "YulAssignment",
															"src": "13485:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13508:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13508:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13490:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13490:17:6"
																},
																"nativeSrc": "13490:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13490:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13485:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13485:1:6"
																}
															]
														},
														{
															"nativeSrc": "13519:25:6",
															"nodeType": "YulAssignment",
															"src": "13519:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13542:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13542:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13524:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13524:17:6"
																},
																"nativeSrc": "13524:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13524:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13519:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13519:1:6"
																}
															]
														},
														{
															"nativeSrc": "13553:17:6",
															"nodeType": "YulAssignment",
															"src": "13553:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13565:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13565:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13568:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13568:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13561:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13561:3:6"
																},
																"nativeSrc": "13561:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13561:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13553:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13553:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13595:22:6",
																"nodeType": "YulBlock",
																"src": "13595:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13597:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13597:16:6"
																			},
																			"nativeSrc": "13597:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13597:18:6"
																		},
																		"nativeSrc": "13597:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13597:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13586:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13592:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13592:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13583:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13583:2:6"
																},
																"nativeSrc": "13583:11:6",
																"nodeType": "YulFunctionCall",
																"src": "13583:11:6"
															},
															"nativeSrc": "13580:37:6",
															"nodeType": "YulIf",
															"src": "13580:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13430:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13461:1:6",
														"nodeType": "YulTypedName",
														"src": "13461:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13464:1:6",
														"nodeType": "YulTypedName",
														"src": "13464:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13470:4:6",
														"nodeType": "YulTypedName",
														"src": "13470:4:6",
														"type": ""
													}
												],
												"src": "13430:194:6"
											},
											{
												"body": {
													"nativeSrc": "13784:288:6",
													"nodeType": "YulBlock",
													"src": "13784:288:6",
													"statements": [
														{
															"nativeSrc": "13794:26:6",
															"nodeType": "YulAssignment",
															"src": "13794:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13806:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13806:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13817:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13817:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13802:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:6"
																},
																"nativeSrc": "13802:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13802:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13794:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13794:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13874:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13874:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13887:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13887:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13898:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13898:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13883:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13883:3:6"
																		},
																		"nativeSrc": "13883:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13883:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13830:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13830:43:6"
																},
																"nativeSrc": "13830:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13830:71:6"
															},
															"nativeSrc": "13830:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13830:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13955:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13955:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13968:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13968:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13979:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13979:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13964:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13964:3:6"
																		},
																		"nativeSrc": "13964:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13964:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13911:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13911:43:6"
																},
																"nativeSrc": "13911:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13911:72:6"
															},
															"nativeSrc": "13911:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13911:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14037:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14037:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14050:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14050:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14061:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14061:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:6"
																		},
																		"nativeSrc": "14046:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14046:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13993:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13993:43:6"
																},
																"nativeSrc": "13993:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13993:72:6"
															},
															"nativeSrc": "13993:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13993:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13630:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13740:9:6",
														"nodeType": "YulTypedName",
														"src": "13740:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13752:6:6",
														"nodeType": "YulTypedName",
														"src": "13752:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13760:6:6",
														"nodeType": "YulTypedName",
														"src": "13760:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13768:6:6",
														"nodeType": "YulTypedName",
														"src": "13768:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13779:4:6",
														"nodeType": "YulTypedName",
														"src": "13779:4:6",
														"type": ""
													}
												],
												"src": "13630:442:6"
											},
											{
												"body": {
													"nativeSrc": "14118:76:6",
													"nodeType": "YulBlock",
													"src": "14118:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "14172:16:6",
																"nodeType": "YulBlock",
																"src": "14172:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "14181:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14184:1:6",
																					"nodeType": "YulLiteral",
																					"src": "14184:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14174:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14174:6:6"
																			},
																			"nativeSrc": "14174:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14174:12:6"
																		},
																		"nativeSrc": "14174:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14174:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14141:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "14141:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14163:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "14163:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14148:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "14148:14:6"
																				},
																				"nativeSrc": "14148:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14148:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14138:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "14138:2:6"
																		},
																		"nativeSrc": "14138:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14138:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14131:6:6"
																},
																"nativeSrc": "14131:40:6",
																"nodeType": "YulFunctionCall",
																"src": "14131:40:6"
															},
															"nativeSrc": "14128:60:6",
															"nodeType": "YulIf",
															"src": "14128:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14078:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14111:5:6",
														"nodeType": "YulTypedName",
														"src": "14111:5:6",
														"type": ""
													}
												],
												"src": "14078:116:6"
											},
											{
												"body": {
													"nativeSrc": "14260:77:6",
													"nodeType": "YulBlock",
													"src": "14260:77:6",
													"statements": [
														{
															"nativeSrc": "14270:22:6",
															"nodeType": "YulAssignment",
															"src": "14270:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14285:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14285:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14279:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "14279:5:6"
																},
																"nativeSrc": "14279:13:6",
																"nodeType": "YulFunctionCall",
																"src": "14279:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14270:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "14270:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14325:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "14325:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14301:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "14301:23:6"
																},
																"nativeSrc": "14301:30:6",
																"nodeType": "YulFunctionCall",
																"src": "14301:30:6"
															},
															"nativeSrc": "14301:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "14301:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14200:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14238:6:6",
														"nodeType": "YulTypedName",
														"src": "14238:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14246:3:6",
														"nodeType": "YulTypedName",
														"src": "14246:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14254:5:6",
														"nodeType": "YulTypedName",
														"src": "14254:5:6",
														"type": ""
													}
												],
												"src": "14200:137:6"
											},
											{
												"body": {
													"nativeSrc": "14417:271:6",
													"nodeType": "YulBlock",
													"src": "14417:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "14463:83:6",
																"nodeType": "YulBlock",
																"src": "14463:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14465:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "14465:77:6"
																			},
																			"nativeSrc": "14465:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14465:79:6"
																		},
																		"nativeSrc": "14465:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14465:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14438:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "14438:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14447:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14447:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14434:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14434:3:6"
																		},
																		"nativeSrc": "14434:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14434:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14459:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14430:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14430:3:6"
																},
																"nativeSrc": "14430:32:6",
																"nodeType": "YulFunctionCall",
																"src": "14430:32:6"
															},
															"nativeSrc": "14427:119:6",
															"nodeType": "YulIf",
															"src": "14427:119:6"
														},
														{
															"nativeSrc": "14556:125:6",
															"nodeType": "YulBlock",
															"src": "14556:125:6",
															"statements": [
																{
																	"nativeSrc": "14571:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14571:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14585:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14585:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14575:6:6",
																			"nodeType": "YulTypedName",
																			"src": "14575:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14600:71:6",
																	"nodeType": "YulAssignment",
																	"src": "14600:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14643:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "14643:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14654:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "14654:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14639:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "14639:3:6"
																				},
																				"nativeSrc": "14639:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14639:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14663:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "14663:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14610:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "14610:28:6"
																		},
																		"nativeSrc": "14610:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14610:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14600:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "14600:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14343:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14387:9:6",
														"nodeType": "YulTypedName",
														"src": "14387:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14398:7:6",
														"nodeType": "YulTypedName",
														"src": "14398:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14410:6:6",
														"nodeType": "YulTypedName",
														"src": "14410:6:6",
														"type": ""
													}
												],
												"src": "14343:345:6"
											},
											{
												"body": {
													"nativeSrc": "14820:206:6",
													"nodeType": "YulBlock",
													"src": "14820:206:6",
													"statements": [
														{
															"nativeSrc": "14830:26:6",
															"nodeType": "YulAssignment",
															"src": "14830:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14842:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14842:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14853:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14853:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14838:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14838:3:6"
																},
																"nativeSrc": "14838:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14838:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14830:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14830:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14910:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14910:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14923:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14934:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14919:3:6"
																		},
																		"nativeSrc": "14919:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14919:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14866:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14866:43:6"
																},
																"nativeSrc": "14866:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14866:71:6"
															},
															"nativeSrc": "14866:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14866:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14991:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14991:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15004:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15004:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15015:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15015:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15000:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15000:3:6"
																		},
																		"nativeSrc": "15000:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15000:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14947:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14947:43:6"
																},
																"nativeSrc": "14947:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14947:72:6"
															},
															"nativeSrc": "14947:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14947:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14694:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14784:9:6",
														"nodeType": "YulTypedName",
														"src": "14784:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14796:6:6",
														"nodeType": "YulTypedName",
														"src": "14796:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14804:6:6",
														"nodeType": "YulTypedName",
														"src": "14804:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14815:4:6",
														"nodeType": "YulTypedName",
														"src": "14815:4:6",
														"type": ""
													}
												],
												"src": "14694:332:6"
											},
											{
												"body": {
													"nativeSrc": "15138:59:6",
													"nodeType": "YulBlock",
													"src": "15138:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15160:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15160:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15168:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15168:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15156:3:6"
																		},
																		"nativeSrc": "15156:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15156:14:6"
																	},
																	{
																		"hexValue": "4c5020696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "15172:17:6",
																		"nodeType": "YulLiteral",
																		"src": "15172:17:6",
																		"type": "",
																		"value": "LP insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15149:6:6"
																},
																"nativeSrc": "15149:41:6",
																"nodeType": "YulFunctionCall",
																"src": "15149:41:6"
															},
															"nativeSrc": "15149:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "15149:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f",
												"nativeSrc": "15032:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15130:6:6",
														"nodeType": "YulTypedName",
														"src": "15130:6:6",
														"type": ""
													}
												],
												"src": "15032:165:6"
											},
											{
												"body": {
													"nativeSrc": "15349:220:6",
													"nodeType": "YulBlock",
													"src": "15349:220:6",
													"statements": [
														{
															"nativeSrc": "15359:74:6",
															"nodeType": "YulAssignment",
															"src": "15359:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15425:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15425:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15430:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15430:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15366:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15366:58:6"
																},
																"nativeSrc": "15366:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15366:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15359:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15359:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15531:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15531:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f",
																	"nativeSrc": "15442:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15442:88:6"
																},
																"nativeSrc": "15442:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15442:93:6"
															},
															"nativeSrc": "15442:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15442:93:6"
														},
														{
															"nativeSrc": "15544:19:6",
															"nodeType": "YulAssignment",
															"src": "15544:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15555:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15555:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15560:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15560:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15551:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:6"
																},
																"nativeSrc": "15551:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15551:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15544:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15203:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15337:3:6",
														"nodeType": "YulTypedName",
														"src": "15337:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15345:3:6",
														"nodeType": "YulTypedName",
														"src": "15345:3:6",
														"type": ""
													}
												],
												"src": "15203:366:6"
											},
											{
												"body": {
													"nativeSrc": "15746:248:6",
													"nodeType": "YulBlock",
													"src": "15746:248:6",
													"statements": [
														{
															"nativeSrc": "15756:26:6",
															"nodeType": "YulAssignment",
															"src": "15756:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15768:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15768:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15779:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15779:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15764:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15764:3:6"
																},
																"nativeSrc": "15764:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15764:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15756:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15756:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15803:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15803:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15814:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15799:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:6"
																		},
																		"nativeSrc": "15799:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15799:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15822:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15822:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15828:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15828:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15818:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:6"
																		},
																		"nativeSrc": "15818:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15818:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15792:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15792:6:6"
																},
																"nativeSrc": "15792:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15792:47:6"
															},
															"nativeSrc": "15792:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15792:47:6"
														},
														{
															"nativeSrc": "15848:139:6",
															"nodeType": "YulAssignment",
															"src": "15848:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15982:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15982:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15856:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15856:124:6"
																},
																"nativeSrc": "15856:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15856:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15848:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15848:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15575:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15726:9:6",
														"nodeType": "YulTypedName",
														"src": "15726:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15741:4:6",
														"nodeType": "YulTypedName",
														"src": "15741:4:6",
														"type": ""
													}
												],
												"src": "15575:419:6"
											},
											{
												"body": {
													"nativeSrc": "16048:362:6",
													"nodeType": "YulBlock",
													"src": "16048:362:6",
													"statements": [
														{
															"nativeSrc": "16058:25:6",
															"nodeType": "YulAssignment",
															"src": "16058:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16081:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16081:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16063:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16063:17:6"
																},
																"nativeSrc": "16063:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16063:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16058:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16058:1:6"
																}
															]
														},
														{
															"nativeSrc": "16092:25:6",
															"nodeType": "YulAssignment",
															"src": "16092:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16115:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16115:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16097:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16097:17:6"
																},
																"nativeSrc": "16097:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16097:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16092:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16092:1:6"
																}
															]
														},
														{
															"nativeSrc": "16126:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "16126:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16149:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16149:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16152:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16152:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16145:3:6"
																},
																"nativeSrc": "16145:9:6",
																"nodeType": "YulFunctionCall",
																"src": "16145:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16130:11:6",
																	"nodeType": "YulTypedName",
																	"src": "16130:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16163:41:6",
															"nodeType": "YulAssignment",
															"src": "16163:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16192:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "16192:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16174:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16174:17:6"
																},
																"nativeSrc": "16174:30:6",
																"nodeType": "YulFunctionCall",
																"src": "16174:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16163:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "16163:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16381:22:6",
																"nodeType": "YulBlock",
																"src": "16381:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16383:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "16383:16:6"
																			},
																			"nativeSrc": "16383:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16383:18:6"
																		},
																		"nativeSrc": "16383:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16383:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16314:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "16314:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16307:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "16307:6:6"
																				},
																				"nativeSrc": "16307:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "16307:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16337:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "16337:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16344:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "16344:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16353:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "16353:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16340:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "16340:3:6"
																						},
																						"nativeSrc": "16340:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "16340:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16334:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "16334:2:6"
																				},
																				"nativeSrc": "16334:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "16334:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16287:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "16287:2:6"
																		},
																		"nativeSrc": "16287:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16287:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16267:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16267:6:6"
																},
																"nativeSrc": "16267:113:6",
																"nodeType": "YulFunctionCall",
																"src": "16267:113:6"
															},
															"nativeSrc": "16264:139:6",
															"nodeType": "YulIf",
															"src": "16264:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16000:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16031:1:6",
														"nodeType": "YulTypedName",
														"src": "16031:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16034:1:6",
														"nodeType": "YulTypedName",
														"src": "16034:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16040:7:6",
														"nodeType": "YulTypedName",
														"src": "16040:7:6",
														"type": ""
													}
												],
												"src": "16000:410:6"
											},
											{
												"body": {
													"nativeSrc": "16444:152:6",
													"nodeType": "YulBlock",
													"src": "16444:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16461:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16461:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16464:77:6",
																		"nodeType": "YulLiteral",
																		"src": "16464:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16454:6:6"
																},
																"nativeSrc": "16454:88:6",
																"nodeType": "YulFunctionCall",
																"src": "16454:88:6"
															},
															"nativeSrc": "16454:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "16454:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16558:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16558:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16561:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16561:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16551:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16551:6:6"
																},
																"nativeSrc": "16551:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16551:15:6"
															},
															"nativeSrc": "16551:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16551:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16582:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16582:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16585:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16585:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16575:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16575:6:6"
																},
																"nativeSrc": "16575:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16575:15:6"
															},
															"nativeSrc": "16575:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16575:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16416:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "16416:180:6"
											},
											{
												"body": {
													"nativeSrc": "16644:143:6",
													"nodeType": "YulBlock",
													"src": "16644:143:6",
													"statements": [
														{
															"nativeSrc": "16654:25:6",
															"nodeType": "YulAssignment",
															"src": "16654:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16677:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16677:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16659:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16659:17:6"
																},
																"nativeSrc": "16659:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16659:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16654:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16654:1:6"
																}
															]
														},
														{
															"nativeSrc": "16688:25:6",
															"nodeType": "YulAssignment",
															"src": "16688:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16711:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16711:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16693:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16693:17:6"
																},
																"nativeSrc": "16693:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16693:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16688:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16688:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16735:22:6",
																"nodeType": "YulBlock",
																"src": "16735:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16737:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "16737:16:6"
																			},
																			"nativeSrc": "16737:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16737:18:6"
																		},
																		"nativeSrc": "16737:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16737:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16732:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16732:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16725:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16725:6:6"
																},
																"nativeSrc": "16725:9:6",
																"nodeType": "YulFunctionCall",
																"src": "16725:9:6"
															},
															"nativeSrc": "16722:35:6",
															"nodeType": "YulIf",
															"src": "16722:35:6"
														},
														{
															"nativeSrc": "16767:14:6",
															"nodeType": "YulAssignment",
															"src": "16767:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16776:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16776:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16779:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16779:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16772:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16772:3:6"
																},
																"nativeSrc": "16772:9:6",
																"nodeType": "YulFunctionCall",
																"src": "16772:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16767:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16767:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16602:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16633:1:6",
														"nodeType": "YulTypedName",
														"src": "16633:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16636:1:6",
														"nodeType": "YulTypedName",
														"src": "16636:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16642:1:6",
														"nodeType": "YulTypedName",
														"src": "16642:1:6",
														"type": ""
													}
												],
												"src": "16602:185:6"
											},
											{
												"body": {
													"nativeSrc": "16947:288:6",
													"nodeType": "YulBlock",
													"src": "16947:288:6",
													"statements": [
														{
															"nativeSrc": "16957:26:6",
															"nodeType": "YulAssignment",
															"src": "16957:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16969:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16969:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16980:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16980:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16965:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16965:3:6"
																},
																"nativeSrc": "16965:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16965:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16957:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16957:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17037:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17037:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17050:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17050:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17061:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17061:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17046:3:6"
																		},
																		"nativeSrc": "17046:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17046:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16993:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "16993:43:6"
																},
																"nativeSrc": "16993:71:6",
																"nodeType": "YulFunctionCall",
																"src": "16993:71:6"
															},
															"nativeSrc": "16993:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "16993:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17118:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17118:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17131:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17131:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17142:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17142:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17127:3:6"
																		},
																		"nativeSrc": "17127:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17127:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17074:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17074:43:6"
																},
																"nativeSrc": "17074:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17074:72:6"
															},
															"nativeSrc": "17074:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17074:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17200:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17200:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17213:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17213:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17224:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17224:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17209:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17209:3:6"
																		},
																		"nativeSrc": "17209:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17209:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17156:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17156:43:6"
																},
																"nativeSrc": "17156:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17156:72:6"
															},
															"nativeSrc": "17156:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17156:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16793:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16903:9:6",
														"nodeType": "YulTypedName",
														"src": "16903:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16915:6:6",
														"nodeType": "YulTypedName",
														"src": "16915:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16923:6:6",
														"nodeType": "YulTypedName",
														"src": "16923:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16931:6:6",
														"nodeType": "YulTypedName",
														"src": "16931:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16942:4:6",
														"nodeType": "YulTypedName",
														"src": "16942:4:6",
														"type": ""
													}
												],
												"src": "16793:442:6"
											},
											{
												"body": {
													"nativeSrc": "17347:120:6",
													"nodeType": "YulBlock",
													"src": "17347:120:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17369:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17369:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17377:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17377:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17365:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17365:3:6"
																		},
																		"nativeSrc": "17365:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17365:14:6"
																	},
																	{
																		"hexValue": "6164644c69717569646974793a20746f6b656e30416d6f756e742063616e206e",
																		"kind": "string",
																		"nativeSrc": "17381:34:6",
																		"nodeType": "YulLiteral",
																		"src": "17381:34:6",
																		"type": "",
																		"value": "addLiquidity: token0Amount can n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17358:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17358:6:6"
																},
																"nativeSrc": "17358:58:6",
																"nodeType": "YulFunctionCall",
																"src": "17358:58:6"
															},
															"nativeSrc": "17358:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "17358:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17437:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17437:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17445:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17445:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17433:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17433:3:6"
																		},
																		"nativeSrc": "17433:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17433:15:6"
																	},
																	{
																		"hexValue": "6f74207a65726f",
																		"kind": "string",
																		"nativeSrc": "17450:9:6",
																		"nodeType": "YulLiteral",
																		"src": "17450:9:6",
																		"type": "",
																		"value": "ot zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17426:6:6"
																},
																"nativeSrc": "17426:34:6",
																"nodeType": "YulFunctionCall",
																"src": "17426:34:6"
															},
															"nativeSrc": "17426:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "17426:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde",
												"nativeSrc": "17241:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17339:6:6",
														"nodeType": "YulTypedName",
														"src": "17339:6:6",
														"type": ""
													}
												],
												"src": "17241:226:6"
											},
											{
												"body": {
													"nativeSrc": "17619:220:6",
													"nodeType": "YulBlock",
													"src": "17619:220:6",
													"statements": [
														{
															"nativeSrc": "17629:74:6",
															"nodeType": "YulAssignment",
															"src": "17629:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17695:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17695:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17700:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17700:2:6",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17636:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "17636:58:6"
																},
																"nativeSrc": "17636:67:6",
																"nodeType": "YulFunctionCall",
																"src": "17636:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17629:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17629:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17801:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17801:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde",
																	"nativeSrc": "17712:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "17712:88:6"
																},
																"nativeSrc": "17712:93:6",
																"nodeType": "YulFunctionCall",
																"src": "17712:93:6"
															},
															"nativeSrc": "17712:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "17712:93:6"
														},
														{
															"nativeSrc": "17814:19:6",
															"nodeType": "YulAssignment",
															"src": "17814:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17825:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17825:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17830:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17830:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17821:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17821:3:6"
																},
																"nativeSrc": "17821:12:6",
																"nodeType": "YulFunctionCall",
																"src": "17821:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17814:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17814:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17473:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17607:3:6",
														"nodeType": "YulTypedName",
														"src": "17607:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17615:3:6",
														"nodeType": "YulTypedName",
														"src": "17615:3:6",
														"type": ""
													}
												],
												"src": "17473:366:6"
											},
											{
												"body": {
													"nativeSrc": "18016:248:6",
													"nodeType": "YulBlock",
													"src": "18016:248:6",
													"statements": [
														{
															"nativeSrc": "18026:26:6",
															"nodeType": "YulAssignment",
															"src": "18026:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18038:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18038:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18049:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18034:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18034:3:6"
																},
																"nativeSrc": "18034:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18034:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18026:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18026:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18073:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18073:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18084:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18084:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18069:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18069:3:6"
																		},
																		"nativeSrc": "18069:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18069:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18092:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "18092:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18098:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18088:3:6"
																		},
																		"nativeSrc": "18088:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18088:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18062:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18062:6:6"
																},
																"nativeSrc": "18062:47:6",
																"nodeType": "YulFunctionCall",
																"src": "18062:47:6"
															},
															"nativeSrc": "18062:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "18062:47:6"
														},
														{
															"nativeSrc": "18118:139:6",
															"nodeType": "YulAssignment",
															"src": "18118:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18252:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "18252:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18126:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "18126:124:6"
																},
																"nativeSrc": "18126:131:6",
																"nodeType": "YulFunctionCall",
																"src": "18126:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18118:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17845:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17996:9:6",
														"nodeType": "YulTypedName",
														"src": "17996:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18011:4:6",
														"nodeType": "YulTypedName",
														"src": "18011:4:6",
														"type": ""
													}
												],
												"src": "17845:419:6"
											},
											{
												"body": {
													"nativeSrc": "18376:120:6",
													"nodeType": "YulBlock",
													"src": "18376:120:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18398:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "18398:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18406:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18406:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18394:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18394:3:6"
																		},
																		"nativeSrc": "18394:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18394:14:6"
																	},
																	{
																		"hexValue": "6164644c69717569646974793a20746f6b656e31416d6f756e742063616e206e",
																		"kind": "string",
																		"nativeSrc": "18410:34:6",
																		"nodeType": "YulLiteral",
																		"src": "18410:34:6",
																		"type": "",
																		"value": "addLiquidity: token1Amount can n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18387:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18387:6:6"
																},
																"nativeSrc": "18387:58:6",
																"nodeType": "YulFunctionCall",
																"src": "18387:58:6"
															},
															"nativeSrc": "18387:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "18387:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18466:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "18466:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18474:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18474:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18462:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18462:3:6"
																		},
																		"nativeSrc": "18462:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18462:15:6"
																	},
																	{
																		"hexValue": "6f74207a65726f",
																		"kind": "string",
																		"nativeSrc": "18479:9:6",
																		"nodeType": "YulLiteral",
																		"src": "18479:9:6",
																		"type": "",
																		"value": "ot zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18455:6:6"
																},
																"nativeSrc": "18455:34:6",
																"nodeType": "YulFunctionCall",
																"src": "18455:34:6"
															},
															"nativeSrc": "18455:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "18455:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c",
												"nativeSrc": "18270:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18368:6:6",
														"nodeType": "YulTypedName",
														"src": "18368:6:6",
														"type": ""
													}
												],
												"src": "18270:226:6"
											},
											{
												"body": {
													"nativeSrc": "18648:220:6",
													"nodeType": "YulBlock",
													"src": "18648:220:6",
													"statements": [
														{
															"nativeSrc": "18658:74:6",
															"nodeType": "YulAssignment",
															"src": "18658:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18724:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18724:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18729:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18729:2:6",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18665:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "18665:58:6"
																},
																"nativeSrc": "18665:67:6",
																"nodeType": "YulFunctionCall",
																"src": "18665:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18658:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18830:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18830:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c",
																	"nativeSrc": "18741:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "18741:88:6"
																},
																"nativeSrc": "18741:93:6",
																"nodeType": "YulFunctionCall",
																"src": "18741:93:6"
															},
															"nativeSrc": "18741:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "18741:93:6"
														},
														{
															"nativeSrc": "18843:19:6",
															"nodeType": "YulAssignment",
															"src": "18843:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18854:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18854:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18859:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18859:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18850:3:6"
																},
																"nativeSrc": "18850:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18850:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18843:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18843:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18502:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18636:3:6",
														"nodeType": "YulTypedName",
														"src": "18636:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18644:3:6",
														"nodeType": "YulTypedName",
														"src": "18644:3:6",
														"type": ""
													}
												],
												"src": "18502:366:6"
											},
											{
												"body": {
													"nativeSrc": "19045:248:6",
													"nodeType": "YulBlock",
													"src": "19045:248:6",
													"statements": [
														{
															"nativeSrc": "19055:26:6",
															"nodeType": "YulAssignment",
															"src": "19055:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19067:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19067:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19078:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19078:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19063:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19063:3:6"
																},
																"nativeSrc": "19063:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19063:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19055:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19055:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19102:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19102:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19113:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19113:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19098:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19098:3:6"
																		},
																		"nativeSrc": "19098:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19098:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19121:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "19121:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19127:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19127:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19117:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19117:3:6"
																		},
																		"nativeSrc": "19117:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19117:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19091:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19091:6:6"
																},
																"nativeSrc": "19091:47:6",
																"nodeType": "YulFunctionCall",
																"src": "19091:47:6"
															},
															"nativeSrc": "19091:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "19091:47:6"
														},
														{
															"nativeSrc": "19147:139:6",
															"nodeType": "YulAssignment",
															"src": "19147:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19281:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "19281:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19155:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "19155:124:6"
																},
																"nativeSrc": "19155:131:6",
																"nodeType": "YulFunctionCall",
																"src": "19155:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19147:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19147:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18874:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19025:9:6",
														"nodeType": "YulTypedName",
														"src": "19025:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19040:4:6",
														"nodeType": "YulTypedName",
														"src": "19040:4:6",
														"type": ""
													}
												],
												"src": "18874:419:6"
											},
											{
												"body": {
													"nativeSrc": "19405:117:6",
													"nodeType": "YulBlock",
													"src": "19405:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19427:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "19427:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19435:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19435:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19423:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19423:3:6"
																		},
																		"nativeSrc": "19423:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19423:14:6"
																	},
																	{
																		"hexValue": "6164644c69717569646974793a20696e73756666696369656e74206c69717569",
																		"kind": "string",
																		"nativeSrc": "19439:34:6",
																		"nodeType": "YulLiteral",
																		"src": "19439:34:6",
																		"type": "",
																		"value": "addLiquidity: insufficient liqui"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19416:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19416:6:6"
																},
																"nativeSrc": "19416:58:6",
																"nodeType": "YulFunctionCall",
																"src": "19416:58:6"
															},
															"nativeSrc": "19416:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "19416:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "19495:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19503:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19503:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19491:3:6"
																		},
																		"nativeSrc": "19491:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19491:15:6"
																	},
																	{
																		"hexValue": "64697479",
																		"kind": "string",
																		"nativeSrc": "19508:6:6",
																		"nodeType": "YulLiteral",
																		"src": "19508:6:6",
																		"type": "",
																		"value": "dity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19484:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19484:6:6"
																},
																"nativeSrc": "19484:31:6",
																"nodeType": "YulFunctionCall",
																"src": "19484:31:6"
															},
															"nativeSrc": "19484:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "19484:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06",
												"nativeSrc": "19299:223:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19397:6:6",
														"nodeType": "YulTypedName",
														"src": "19397:6:6",
														"type": ""
													}
												],
												"src": "19299:223:6"
											},
											{
												"body": {
													"nativeSrc": "19674:220:6",
													"nodeType": "YulBlock",
													"src": "19674:220:6",
													"statements": [
														{
															"nativeSrc": "19684:74:6",
															"nodeType": "YulAssignment",
															"src": "19684:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19750:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19750:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19755:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19755:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19691:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "19691:58:6"
																},
																"nativeSrc": "19691:67:6",
																"nodeType": "YulFunctionCall",
																"src": "19691:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19684:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19684:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19856:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19856:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06",
																	"nativeSrc": "19767:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "19767:88:6"
																},
																"nativeSrc": "19767:93:6",
																"nodeType": "YulFunctionCall",
																"src": "19767:93:6"
															},
															"nativeSrc": "19767:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "19767:93:6"
														},
														{
															"nativeSrc": "19869:19:6",
															"nodeType": "YulAssignment",
															"src": "19869:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19880:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19880:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19885:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19885:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19876:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19876:3:6"
																},
																"nativeSrc": "19876:12:6",
																"nodeType": "YulFunctionCall",
																"src": "19876:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19869:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19869:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19528:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19662:3:6",
														"nodeType": "YulTypedName",
														"src": "19662:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19670:3:6",
														"nodeType": "YulTypedName",
														"src": "19670:3:6",
														"type": ""
													}
												],
												"src": "19528:366:6"
											},
											{
												"body": {
													"nativeSrc": "20071:248:6",
													"nodeType": "YulBlock",
													"src": "20071:248:6",
													"statements": [
														{
															"nativeSrc": "20081:26:6",
															"nodeType": "YulAssignment",
															"src": "20081:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20093:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "20093:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20104:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20104:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20089:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20089:3:6"
																},
																"nativeSrc": "20089:18:6",
																"nodeType": "YulFunctionCall",
																"src": "20089:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20081:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20081:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20128:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20128:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20139:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20139:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20124:3:6"
																		},
																		"nativeSrc": "20124:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20124:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20147:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "20147:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20153:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20153:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20143:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20143:3:6"
																		},
																		"nativeSrc": "20143:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20143:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20117:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "20117:6:6"
																},
																"nativeSrc": "20117:47:6",
																"nodeType": "YulFunctionCall",
																"src": "20117:47:6"
															},
															"nativeSrc": "20117:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "20117:47:6"
														},
														{
															"nativeSrc": "20173:139:6",
															"nodeType": "YulAssignment",
															"src": "20173:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20307:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "20307:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20181:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "20181:124:6"
																},
																"nativeSrc": "20181:131:6",
																"nodeType": "YulFunctionCall",
																"src": "20181:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20173:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20173:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19900:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20051:9:6",
														"nodeType": "YulTypedName",
														"src": "20051:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20066:4:6",
														"nodeType": "YulTypedName",
														"src": "20066:4:6",
														"type": ""
													}
												],
												"src": "19900:419:6"
											},
											{
												"body": {
													"nativeSrc": "20431:127:6",
													"nodeType": "YulBlock",
													"src": "20431:127:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20453:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "20453:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20461:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20461:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20449:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20449:3:6"
																		},
																		"nativeSrc": "20449:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20449:14:6"
																	},
																	{
																		"hexValue": "63616c63756c617465537761704f7574416d6f756e743a20616d6f756e74496e",
																		"kind": "string",
																		"nativeSrc": "20465:34:6",
																		"nodeType": "YulLiteral",
																		"src": "20465:34:6",
																		"type": "",
																		"value": "calculateSwapOutAmount: amountIn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "20442:6:6"
																},
																"nativeSrc": "20442:58:6",
																"nodeType": "YulFunctionCall",
																"src": "20442:58:6"
															},
															"nativeSrc": "20442:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "20442:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20521:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "20521:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20529:2:6",
																				"nodeType": "YulLiteral",
																				"src": "20529:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20517:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20517:3:6"
																		},
																		"nativeSrc": "20517:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20517:15:6"
																	},
																	{
																		"hexValue": "206d75737420706f736974697665",
																		"kind": "string",
																		"nativeSrc": "20534:16:6",
																		"nodeType": "YulLiteral",
																		"src": "20534:16:6",
																		"type": "",
																		"value": " must positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20510:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "20510:6:6"
																},
																"nativeSrc": "20510:41:6",
																"nodeType": "YulFunctionCall",
																"src": "20510:41:6"
															},
															"nativeSrc": "20510:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "20510:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2",
												"nativeSrc": "20325:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20423:6:6",
														"nodeType": "YulTypedName",
														"src": "20423:6:6",
														"type": ""
													}
												],
												"src": "20325:233:6"
											},
											{
												"body": {
													"nativeSrc": "20710:220:6",
													"nodeType": "YulBlock",
													"src": "20710:220:6",
													"statements": [
														{
															"nativeSrc": "20720:74:6",
															"nodeType": "YulAssignment",
															"src": "20720:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20786:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20786:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20791:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20791:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20727:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "20727:58:6"
																},
																"nativeSrc": "20727:67:6",
																"nodeType": "YulFunctionCall",
																"src": "20727:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20720:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20720:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20892:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20892:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2",
																	"nativeSrc": "20803:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "20803:88:6"
																},
																"nativeSrc": "20803:93:6",
																"nodeType": "YulFunctionCall",
																"src": "20803:93:6"
															},
															"nativeSrc": "20803:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "20803:93:6"
														},
														{
															"nativeSrc": "20905:19:6",
															"nodeType": "YulAssignment",
															"src": "20905:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20916:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20916:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20921:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20921:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20912:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20912:3:6"
																},
																"nativeSrc": "20912:12:6",
																"nodeType": "YulFunctionCall",
																"src": "20912:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20905:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20564:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20698:3:6",
														"nodeType": "YulTypedName",
														"src": "20698:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20706:3:6",
														"nodeType": "YulTypedName",
														"src": "20706:3:6",
														"type": ""
													}
												],
												"src": "20564:366:6"
											},
											{
												"body": {
													"nativeSrc": "21107:248:6",
													"nodeType": "YulBlock",
													"src": "21107:248:6",
													"statements": [
														{
															"nativeSrc": "21117:26:6",
															"nodeType": "YulAssignment",
															"src": "21117:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21129:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "21129:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21140:2:6",
																		"nodeType": "YulLiteral",
																		"src": "21140:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21125:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21125:3:6"
																},
																"nativeSrc": "21125:18:6",
																"nodeType": "YulFunctionCall",
																"src": "21125:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21117:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "21117:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21164:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "21164:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21175:1:6",
																				"nodeType": "YulLiteral",
																				"src": "21175:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21160:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21160:3:6"
																		},
																		"nativeSrc": "21160:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21160:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21183:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "21183:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21189:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "21189:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21179:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21179:3:6"
																		},
																		"nativeSrc": "21179:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21179:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21153:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "21153:6:6"
																},
																"nativeSrc": "21153:47:6",
																"nodeType": "YulFunctionCall",
																"src": "21153:47:6"
															},
															"nativeSrc": "21153:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "21153:47:6"
														},
														{
															"nativeSrc": "21209:139:6",
															"nodeType": "YulAssignment",
															"src": "21209:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21343:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "21343:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21217:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "21217:124:6"
																},
																"nativeSrc": "21217:131:6",
																"nodeType": "YulFunctionCall",
																"src": "21217:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21209:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "21209:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20936:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21087:9:6",
														"nodeType": "YulTypedName",
														"src": "21087:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21102:4:6",
														"nodeType": "YulTypedName",
														"src": "21102:4:6",
														"type": ""
													}
												],
												"src": "20936:419:6"
											},
											{
												"body": {
													"nativeSrc": "21467:128:6",
													"nodeType": "YulBlock",
													"src": "21467:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21489:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "21489:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21497:1:6",
																				"nodeType": "YulLiteral",
																				"src": "21497:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21485:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21485:3:6"
																		},
																		"nativeSrc": "21485:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21485:14:6"
																	},
																	{
																		"hexValue": "63616c63756c617465537761704f7574416d6f756e743a207265736572766549",
																		"kind": "string",
																		"nativeSrc": "21501:34:6",
																		"nodeType": "YulLiteral",
																		"src": "21501:34:6",
																		"type": "",
																		"value": "calculateSwapOutAmount: reserveI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "21478:6:6"
																},
																"nativeSrc": "21478:58:6",
																"nodeType": "YulFunctionCall",
																"src": "21478:58:6"
															},
															"nativeSrc": "21478:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "21478:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21557:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "21557:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21565:2:6",
																				"nodeType": "YulLiteral",
																				"src": "21565:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21553:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21553:3:6"
																		},
																		"nativeSrc": "21553:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21553:15:6"
																	},
																	{
																		"hexValue": "6e206d75737420706f736974697665",
																		"kind": "string",
																		"nativeSrc": "21570:17:6",
																		"nodeType": "YulLiteral",
																		"src": "21570:17:6",
																		"type": "",
																		"value": "n must positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21546:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "21546:6:6"
																},
																"nativeSrc": "21546:42:6",
																"nodeType": "YulFunctionCall",
																"src": "21546:42:6"
															},
															"nativeSrc": "21546:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "21546:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568",
												"nativeSrc": "21361:234:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21459:6:6",
														"nodeType": "YulTypedName",
														"src": "21459:6:6",
														"type": ""
													}
												],
												"src": "21361:234:6"
											},
											{
												"body": {
													"nativeSrc": "21747:220:6",
													"nodeType": "YulBlock",
													"src": "21747:220:6",
													"statements": [
														{
															"nativeSrc": "21757:74:6",
															"nodeType": "YulAssignment",
															"src": "21757:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21823:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "21823:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21828:2:6",
																		"nodeType": "YulLiteral",
																		"src": "21828:2:6",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21764:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "21764:58:6"
																},
																"nativeSrc": "21764:67:6",
																"nodeType": "YulFunctionCall",
																"src": "21764:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21757:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21757:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21929:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "21929:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568",
																	"nativeSrc": "21840:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "21840:88:6"
																},
																"nativeSrc": "21840:93:6",
																"nodeType": "YulFunctionCall",
																"src": "21840:93:6"
															},
															"nativeSrc": "21840:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "21840:93:6"
														},
														{
															"nativeSrc": "21942:19:6",
															"nodeType": "YulAssignment",
															"src": "21942:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21953:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "21953:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21958:2:6",
																		"nodeType": "YulLiteral",
																		"src": "21958:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21949:3:6"
																},
																"nativeSrc": "21949:12:6",
																"nodeType": "YulFunctionCall",
																"src": "21949:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21942:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21942:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21601:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21735:3:6",
														"nodeType": "YulTypedName",
														"src": "21735:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21743:3:6",
														"nodeType": "YulTypedName",
														"src": "21743:3:6",
														"type": ""
													}
												],
												"src": "21601:366:6"
											},
											{
												"body": {
													"nativeSrc": "22144:248:6",
													"nodeType": "YulBlock",
													"src": "22144:248:6",
													"statements": [
														{
															"nativeSrc": "22154:26:6",
															"nodeType": "YulAssignment",
															"src": "22154:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22166:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "22166:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22177:2:6",
																		"nodeType": "YulLiteral",
																		"src": "22177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "22162:3:6"
																},
																"nativeSrc": "22162:18:6",
																"nodeType": "YulFunctionCall",
																"src": "22162:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "22154:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22201:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "22201:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22212:1:6",
																				"nodeType": "YulLiteral",
																				"src": "22212:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "22197:3:6"
																		},
																		"nativeSrc": "22197:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "22197:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22220:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "22220:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22226:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "22226:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "22216:3:6"
																		},
																		"nativeSrc": "22216:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "22216:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "22190:6:6"
																},
																"nativeSrc": "22190:47:6",
																"nodeType": "YulFunctionCall",
																"src": "22190:47:6"
															},
															"nativeSrc": "22190:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "22190:47:6"
														},
														{
															"nativeSrc": "22246:139:6",
															"nodeType": "YulAssignment",
															"src": "22246:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22380:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "22380:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22254:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "22254:124:6"
																},
																"nativeSrc": "22254:131:6",
																"nodeType": "YulFunctionCall",
																"src": "22254:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22246:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "22246:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21973:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22124:9:6",
														"nodeType": "YulTypedName",
														"src": "22124:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22139:4:6",
														"nodeType": "YulTypedName",
														"src": "22139:4:6",
														"type": ""
													}
												],
												"src": "21973:419:6"
											},
											{
												"body": {
													"nativeSrc": "22504:129:6",
													"nodeType": "YulBlock",
													"src": "22504:129:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22526:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "22526:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22534:1:6",
																				"nodeType": "YulLiteral",
																				"src": "22534:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22522:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "22522:3:6"
																		},
																		"nativeSrc": "22522:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "22522:14:6"
																	},
																	{
																		"hexValue": "63616c63756c617465537761704f7574416d6f756e743a20726573657276654f",
																		"kind": "string",
																		"nativeSrc": "22538:34:6",
																		"nodeType": "YulLiteral",
																		"src": "22538:34:6",
																		"type": "",
																		"value": "calculateSwapOutAmount: reserveO"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22515:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "22515:6:6"
																},
																"nativeSrc": "22515:58:6",
																"nodeType": "YulFunctionCall",
																"src": "22515:58:6"
															},
															"nativeSrc": "22515:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "22515:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22594:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "22594:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22602:2:6",
																				"nodeType": "YulLiteral",
																				"src": "22602:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22590:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "22590:3:6"
																		},
																		"nativeSrc": "22590:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "22590:15:6"
																	},
																	{
																		"hexValue": "7574206d75737420706f736974697665",
																		"kind": "string",
																		"nativeSrc": "22607:18:6",
																		"nodeType": "YulLiteral",
																		"src": "22607:18:6",
																		"type": "",
																		"value": "ut must positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22583:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "22583:6:6"
																},
																"nativeSrc": "22583:43:6",
																"nodeType": "YulFunctionCall",
																"src": "22583:43:6"
															},
															"nativeSrc": "22583:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "22583:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8",
												"nativeSrc": "22398:235:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22496:6:6",
														"nodeType": "YulTypedName",
														"src": "22496:6:6",
														"type": ""
													}
												],
												"src": "22398:235:6"
											},
											{
												"body": {
													"nativeSrc": "22785:220:6",
													"nodeType": "YulBlock",
													"src": "22785:220:6",
													"statements": [
														{
															"nativeSrc": "22795:74:6",
															"nodeType": "YulAssignment",
															"src": "22795:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22861:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "22861:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22866:2:6",
																		"nodeType": "YulLiteral",
																		"src": "22866:2:6",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22802:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "22802:58:6"
																},
																"nativeSrc": "22802:67:6",
																"nodeType": "YulFunctionCall",
																"src": "22802:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22795:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "22795:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22967:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "22967:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8",
																	"nativeSrc": "22878:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "22878:88:6"
																},
																"nativeSrc": "22878:93:6",
																"nodeType": "YulFunctionCall",
																"src": "22878:93:6"
															},
															"nativeSrc": "22878:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "22878:93:6"
														},
														{
															"nativeSrc": "22980:19:6",
															"nodeType": "YulAssignment",
															"src": "22980:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22991:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "22991:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22996:2:6",
																		"nodeType": "YulLiteral",
																		"src": "22996:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22987:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "22987:3:6"
																},
																"nativeSrc": "22987:12:6",
																"nodeType": "YulFunctionCall",
																"src": "22987:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22980:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "22980:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22639:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22773:3:6",
														"nodeType": "YulTypedName",
														"src": "22773:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22781:3:6",
														"nodeType": "YulTypedName",
														"src": "22781:3:6",
														"type": ""
													}
												],
												"src": "22639:366:6"
											},
											{
												"body": {
													"nativeSrc": "23182:248:6",
													"nodeType": "YulBlock",
													"src": "23182:248:6",
													"statements": [
														{
															"nativeSrc": "23192:26:6",
															"nodeType": "YulAssignment",
															"src": "23192:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23204:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "23204:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23215:2:6",
																		"nodeType": "YulLiteral",
																		"src": "23215:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23200:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "23200:3:6"
																},
																"nativeSrc": "23200:18:6",
																"nodeType": "YulFunctionCall",
																"src": "23200:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23192:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "23192:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "23239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23250:1:6",
																				"nodeType": "YulLiteral",
																				"src": "23250:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "23235:3:6"
																		},
																		"nativeSrc": "23235:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "23235:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23258:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "23258:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "23264:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23254:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "23254:3:6"
																		},
																		"nativeSrc": "23254:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "23254:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23228:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "23228:6:6"
																},
																"nativeSrc": "23228:47:6",
																"nodeType": "YulFunctionCall",
																"src": "23228:47:6"
															},
															"nativeSrc": "23228:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "23228:47:6"
														},
														{
															"nativeSrc": "23284:139:6",
															"nodeType": "YulAssignment",
															"src": "23284:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23418:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "23418:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23292:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "23292:124:6"
																},
																"nativeSrc": "23292:131:6",
																"nodeType": "YulFunctionCall",
																"src": "23292:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23284:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "23284:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23011:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23162:9:6",
														"nodeType": "YulTypedName",
														"src": "23162:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23177:4:6",
														"nodeType": "YulTypedName",
														"src": "23177:4:6",
														"type": ""
													}
												],
												"src": "23011:419:6"
											},
											{
												"body": {
													"nativeSrc": "23590:288:6",
													"nodeType": "YulBlock",
													"src": "23590:288:6",
													"statements": [
														{
															"nativeSrc": "23600:26:6",
															"nodeType": "YulAssignment",
															"src": "23600:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23612:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "23612:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23623:2:6",
																		"nodeType": "YulLiteral",
																		"src": "23623:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23608:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "23608:3:6"
																},
																"nativeSrc": "23608:18:6",
																"nodeType": "YulFunctionCall",
																"src": "23608:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23600:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "23600:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23680:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "23680:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23693:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "23693:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23704:1:6",
																				"nodeType": "YulLiteral",
																				"src": "23704:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23689:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "23689:3:6"
																		},
																		"nativeSrc": "23689:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "23689:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23636:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "23636:43:6"
																},
																"nativeSrc": "23636:71:6",
																"nodeType": "YulFunctionCall",
																"src": "23636:71:6"
															},
															"nativeSrc": "23636:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "23636:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23761:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "23761:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23774:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "23774:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23785:2:6",
																				"nodeType": "YulLiteral",
																				"src": "23785:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23770:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "23770:3:6"
																		},
																		"nativeSrc": "23770:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "23770:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23717:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "23717:43:6"
																},
																"nativeSrc": "23717:72:6",
																"nodeType": "YulFunctionCall",
																"src": "23717:72:6"
															},
															"nativeSrc": "23717:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "23717:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23843:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "23843:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23856:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "23856:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23867:2:6",
																				"nodeType": "YulLiteral",
																				"src": "23867:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "23852:3:6"
																		},
																		"nativeSrc": "23852:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "23852:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23799:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "23799:43:6"
																},
																"nativeSrc": "23799:72:6",
																"nodeType": "YulFunctionCall",
																"src": "23799:72:6"
															},
															"nativeSrc": "23799:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "23799:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23436:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23546:9:6",
														"nodeType": "YulTypedName",
														"src": "23546:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23558:6:6",
														"nodeType": "YulTypedName",
														"src": "23558:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23566:6:6",
														"nodeType": "YulTypedName",
														"src": "23566:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23574:6:6",
														"nodeType": "YulTypedName",
														"src": "23574:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23585:4:6",
														"nodeType": "YulTypedName",
														"src": "23585:4:6",
														"type": ""
													}
												],
												"src": "23436:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$729(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392(memPtr) {\n\n        mstore(add(memPtr, 0), \"swap: amountIn must positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910(memPtr) {\n\n        mstore(add(memPtr, 0), \"swap: tokenIn not supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"LP insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde(memPtr) {\n\n        mstore(add(memPtr, 0), \"addLiquidity: token0Amount can n\")\n\n        mstore(add(memPtr, 32), \"ot zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c(memPtr) {\n\n        mstore(add(memPtr, 0), \"addLiquidity: token1Amount can n\")\n\n        mstore(add(memPtr, 32), \"ot zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06(memPtr) {\n\n        mstore(add(memPtr, 0), \"addLiquidity: insufficient liqui\")\n\n        mstore(add(memPtr, 32), \"dity\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"calculateSwapOutAmount: amountIn\")\n\n        mstore(add(memPtr, 32), \" must positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568(memPtr) {\n\n        mstore(add(memPtr, 0), \"calculateSwapOutAmount: reserveI\")\n\n        mstore(add(memPtr, 32), \"n must positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"calculateSwapOutAmount: reserveO\")\n\n        mstore(add(memPtr, 32), \"ut must positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80635a76f25e116100a05780639cd441da1161006f5780639cd441da146102d1578063a3919e4214610301578063a9059cbb14610331578063d21220a714610361578063dd62ed3e1461037f57610109565b80635a76f25e1461023457806370a082311461025257806395d89b41146102825780639c8f9f23146102a057610109565b806323b872dd116100dc57806323b872dd14610197578063313ce567146101c757806343264349146101e5578063443cb4bc1461021657610109565b806306fdde031461010d578063095ea7b31461012b5780630dfe16811461015b57806318160ddd14610179575b5f80fd5b6101156103af565b6040516101229190611fae565b60405180910390f35b6101456004803603810190610140919061205f565b61043f565b60405161015291906120b7565b60405180910390f35b610163610461565b604051610170919061212b565b60405180910390f35b610181610486565b60405161018e9190612153565b60405180910390f35b6101b160048036038101906101ac919061216c565b61048f565b6040516101be91906120b7565b60405180910390f35b6101cf6104bd565b6040516101dc91906121d7565b60405180910390f35b6101ff60048036038101906101fa919061222b565b6104c5565b60405161020d92919061227b565b60405180910390f35b61021e610de8565b60405161022b9190612153565b60405180910390f35b61023c610dee565b6040516102499190612153565b60405180910390f35b61026c600480360381019061026791906122a2565b610df4565b6040516102799190612153565b60405180910390f35b61028a610e39565b6040516102979190611fae565b60405180910390f35b6102ba60048036038101906102b591906122cd565b610ec9565b6040516102c89291906122f8565b60405180910390f35b6102eb60048036038101906102e6919061231f565b61124c565b6040516102f89190612153565b60405180910390f35b61031b6004803603810190610316919061235d565b611672565b6040516103289190612153565b60405180910390f35b61034b6004803603810190610346919061205f565b611764565b60405161035891906120b7565b60405180910390f35b610369611786565b604051610376919061212b565b60405180910390f35b610399600480360381019061039491906123ad565b6117ab565b6040516103a69190612153565b60405180910390f35b6060600380546103be90612418565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea90612418565b80156104355780601f1061040c57610100808354040283529160200191610435565b820191905f5260205f20905b81548152906001019060200180831161041857829003601f168201915b5050505050905090565b5f8061044961182d565b9050610456818585611834565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f8061049961182d565b90506104a6858285611846565b6104b18585856118d9565b60019150509392505050565b5f6012905090565b5f805f8511610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090612492565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806105b0575060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b6105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e6906124fa565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064a9190612527565b602060405180830381865afa158015610665573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106899190612554565b90505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106e69190612527565b602060405180830381865afa158015610701573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107259190612554565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610a7b57610786878383611672565b935060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250848410156107e6576040517fcf3ba9fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108419190612527565b602060405180830381865afa15801561085c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108809190612554565b61088a91906125ac565b6007819055508360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108eb9190612527565b602060405180830381865afa158015610906573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092a9190612554565b61093491906125df565b60088190555060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161099893929190612612565b6020604051808303815f875af11580156109b4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d89190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610a3592919061269c565b6020604051808303815f875af1158015610a51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a759190612671565b50610d77565b610a86878284611672565b935060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925084841015610ae6576040517fcf3ba9fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b419190612527565b602060405180830381865afa158015610b5c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b809190612554565b610b8a91906125ac565b6008819055508360055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610beb9190612527565b602060405180830381865afa158015610c06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2a9190612554565b610c3491906125df565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610c9893929190612612565b6020604051808303815f875af1158015610cb4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd89190612671565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610d3592919061269c565b6020604051808303815f875af1158015610d51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d759190612671565b505b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f80044f7893845e3883418a4d784224b0d2d9606ca5f19c2a910401c2c62761b58987604051610dd69291906122f8565b60405180910390a35050935093915050565b60075481565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610e4890612418565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7490612418565b8015610ebf5780601f10610e9657610100808354040283529160200191610ebf565b820191905f5260205f20905b815481529060010190602001808311610ea257829003601f168201915b5050505050905090565b5f805f610ed533610df4565b905083811015610f1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f119061270d565b60405180910390fd5b5f610f23610486565b90508060075486610f34919061272b565b610f3e9190612799565b93508060085486610f4f919061272b565b610f599190612799565b92508360055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fb69190612527565b602060405180830381865afa158015610fd1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff59190612554565b610fff91906125df565b6007819055508260065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110609190612527565b602060405180830381865afa15801561107b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109f9190612554565b6110a991906125df565b6008819055506110b933866119c9565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161111592919061269c565b6020604051808303815f875af1158015611131573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111559190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016111b292919061269c565b6020604051808303815f875af11580156111ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f29190612671565b503373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d86868660405161123d939291906127c9565b60405180910390a25050915091565b5f80831161128f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112869061286e565b60405180910390fd5b5f82116112d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c8906128fc565b60405180910390fd5b8260055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161132c9190612527565b602060405180830381865afa158015611347573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136b9190612554565b61137591906125ac565b6007819055508160065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113d69190612527565b602060405180830381865afa1580156113f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114159190612554565b61141f91906125ac565b6008819055505f61142e610486565b90505f81036114525761144b8385611446919061272b565b611a48565b915061148f565b61148c6007548286611464919061272b565b61146e9190612799565b600854838661147d919061272b565b6114879190612799565b611abf565b91505b5f82116114d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c89061298a565b60405180910390fd5b6114db3383611ad7565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161153993929190612612565b6020604051808303815f875af1158015611555573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115799190612671565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016115d893929190612612565b6020604051808303815f875af11580156115f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116189190612671565b503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e858585604051611663939291906127c9565b60405180910390a25092915050565b5f8084116116b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ac90612a18565b60405180910390fd5b5f83116116f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ee90612aa6565b60405180910390fd5b5f8211611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173090612b34565b60405180910390fd5b838361174591906125ac565b8285611751919061272b565b61175b9190612799565b90509392505050565b5f8061176e61182d565b905061177b8185856118d9565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6118418383836001611b56565b505050565b5f61185184846117ab565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156118d357818110156118c4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016118bb93929190612b52565b60405180910390fd5b6118d284848484035f611b56565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611949575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119409190612527565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119b09190612527565b60405180910390fd5b6119c4838383611d25565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a39575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a309190612527565b60405180910390fd5b611a44825f83611d25565b5050565b5f6003821115611aad578190505f6001600284611a659190612799565b611a6f91906125ac565b90505b81811015611aa7578091506002818285611a8c9190612799565b611a9691906125ac565b611aa09190612799565b9050611a72565b50611aba565b5f8214611ab957600190505b5b919050565b5f818310611acd5781611acf565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b47575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b3e9190612527565b60405180910390fd5b611b525f8383611d25565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611bc6575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611bbd9190612527565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c36575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c2d9190612527565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d1f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d169190612153565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d75578060025f828254611d6991906125ac565b92505081905550611e43565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dfe578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611df593929190612b52565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e8a578060025f8282540392505081905550611ed4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f319190612153565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f8082611f3e565b611f8a8185611f48565b9350611f9a818560208601611f58565b611fa381611f66565b840191505092915050565b5f6020820190508181035f830152611fc68184611f76565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ffb82611fd2565b9050919050565b61200b81611ff1565b8114612015575f80fd5b50565b5f8135905061202681612002565b92915050565b5f819050919050565b61203e8161202c565b8114612048575f80fd5b50565b5f8135905061205981612035565b92915050565b5f806040838503121561207557612074611fce565b5b5f61208285828601612018565b92505060206120938582860161204b565b9150509250929050565b5f8115159050919050565b6120b18161209d565b82525050565b5f6020820190506120ca5f8301846120a8565b92915050565b5f819050919050565b5f6120f36120ee6120e984611fd2565b6120d0565b611fd2565b9050919050565b5f612104826120d9565b9050919050565b5f612115826120fa565b9050919050565b6121258161210b565b82525050565b5f60208201905061213e5f83018461211c565b92915050565b61214d8161202c565b82525050565b5f6020820190506121665f830184612144565b92915050565b5f805f6060848603121561218357612182611fce565b5b5f61219086828701612018565b93505060206121a186828701612018565b92505060406121b28682870161204b565b9150509250925092565b5f60ff82169050919050565b6121d1816121bc565b82525050565b5f6020820190506121ea5f8301846121c8565b92915050565b5f6121fa82611ff1565b9050919050565b61220a816121f0565b8114612214575f80fd5b50565b5f8135905061222581612201565b92915050565b5f805f6060848603121561224257612241611fce565b5b5f61224f8682870161204b565b935050602061226086828701612217565b92505060406122718682870161204b565b9150509250925092565b5f60408201905061228e5f830185612144565b61229b602083018461211c565b9392505050565b5f602082840312156122b7576122b6611fce565b5b5f6122c484828501612018565b91505092915050565b5f602082840312156122e2576122e1611fce565b5b5f6122ef8482850161204b565b91505092915050565b5f60408201905061230b5f830185612144565b6123186020830184612144565b9392505050565b5f806040838503121561233557612334611fce565b5b5f6123428582860161204b565b92505060206123538582860161204b565b9150509250929050565b5f805f6060848603121561237457612373611fce565b5b5f6123818682870161204b565b93505060206123928682870161204b565b92505060406123a38682870161204b565b9150509250925092565b5f80604083850312156123c3576123c2611fce565b5b5f6123d085828601612018565b92505060206123e185828601612018565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061242f57607f821691505b602082108103612442576124416123eb565b5b50919050565b7f737761703a20616d6f756e74496e206d75737420706f736974697665000000005f82015250565b5f61247c601c83611f48565b915061248782612448565b602082019050919050565b5f6020820190508181035f8301526124a981612470565b9050919050565b7f737761703a20746f6b656e496e206e6f7420737570706f7274656400000000005f82015250565b5f6124e4601b83611f48565b91506124ef826124b0565b602082019050919050565b5f6020820190508181035f830152612511816124d8565b9050919050565b61252181611ff1565b82525050565b5f60208201905061253a5f830184612518565b92915050565b5f8151905061254e81612035565b92915050565b5f6020828403121561256957612568611fce565b5b5f61257684828501612540565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125b68261202c565b91506125c18361202c565b92508282019050808211156125d9576125d861257f565b5b92915050565b5f6125e98261202c565b91506125f48361202c565b925082820390508181111561260c5761260b61257f565b5b92915050565b5f6060820190506126255f830186612518565b6126326020830185612518565b61263f6040830184612144565b949350505050565b6126508161209d565b811461265a575f80fd5b50565b5f8151905061266b81612647565b92915050565b5f6020828403121561268657612685611fce565b5b5f6126938482850161265d565b91505092915050565b5f6040820190506126af5f830185612518565b6126bc6020830184612144565b9392505050565b7f4c5020696e73756666696369656e7400000000000000000000000000000000005f82015250565b5f6126f7600f83611f48565b9150612702826126c3565b602082019050919050565b5f6020820190508181035f830152612724816126eb565b9050919050565b5f6127358261202c565b91506127408361202c565b925082820261274e8161202c565b915082820484148315176127655761276461257f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6127a38261202c565b91506127ae8361202c565b9250826127be576127bd61276c565b5b828204905092915050565b5f6060820190506127dc5f830186612144565b6127e96020830185612144565b6127f66040830184612144565b949350505050565b7f6164644c69717569646974793a20746f6b656e30416d6f756e742063616e206e5f8201527f6f74207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f612858602783611f48565b9150612863826127fe565b604082019050919050565b5f6020820190508181035f8301526128858161284c565b9050919050565b7f6164644c69717569646974793a20746f6b656e31416d6f756e742063616e206e5f8201527f6f74207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f6128e6602783611f48565b91506128f18261288c565b604082019050919050565b5f6020820190508181035f830152612913816128da565b9050919050565b7f6164644c69717569646974793a20696e73756666696369656e74206c697175695f8201527f6469747900000000000000000000000000000000000000000000000000000000602082015250565b5f612974602483611f48565b915061297f8261291a565b604082019050919050565b5f6020820190508181035f8301526129a181612968565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a20616d6f756e74496e5f8201527f206d75737420706f736974697665000000000000000000000000000000000000602082015250565b5f612a02602e83611f48565b9150612a0d826129a8565b604082019050919050565b5f6020820190508181035f830152612a2f816129f6565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a2072657365727665495f8201527f6e206d75737420706f7369746976650000000000000000000000000000000000602082015250565b5f612a90602f83611f48565b9150612a9b82612a36565b604082019050919050565b5f6020820190508181035f830152612abd81612a84565b9050919050565b7f63616c63756c617465537761704f7574416d6f756e743a20726573657276654f5f8201527f7574206d75737420706f73697469766500000000000000000000000000000000602082015250565b5f612b1e603083611f48565b9150612b2982612ac4565b604082019050919050565b5f6020820190508181035f830152612b4b81612b12565b9050919050565b5f606082019050612b655f830186612518565b612b726020830185612144565b612b7f6040830184612144565b94935050505056fea264697066735822122099834e2f6f4e98d84376552bb880117154be87b6df8bea8a7c9080f7e75105e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A76F25E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA3919E42 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2A0 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x216 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP3 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x435 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x435 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x418 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x449 PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x456 DUP2 DUP6 DUP6 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x499 PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x4A6 DUP6 DUP3 DUP6 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B0 JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7B JUMPI PUSH2 0x786 DUP8 DUP4 DUP4 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP5 DUP5 LT ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF3BA9FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xA86 DUP8 DUP3 DUP5 PUSH2 0x1672 JUMP JUMPDEST SWAP4 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP5 DUP5 LT ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF3BA9FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD35 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x80044F7893845E3883418A4D784224B0D2D9606CA5F19C2A910401C2C62761B5 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP3 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE48 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE74 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0xED5 CALLER PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF11 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF23 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 SLOAD DUP7 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x8 SLOAD DUP7 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1060 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109F SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x10B9 CALLER DUP7 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1131 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B2 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x123D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x128F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x12D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C8 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x142E PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1452 JUMPI PUSH2 0x144B DUP4 DUP6 PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP PUSH2 0x148F JUMP JUMPDEST PUSH2 0x148C PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x1464 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x146E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x147D SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C8 SWAP1 PUSH2 0x298A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DB CALLER DUP4 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1539 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1555 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1663 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AC SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EE SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x1739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1730 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1745 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP3 DUP6 PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x176E PUSH2 0x182D JUMP JUMPDEST SWAP1 POP PUSH2 0x177B DUP2 DUP6 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1841 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1851 DUP5 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x18D3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18C4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1949 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C4 DUP4 DUP4 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A39 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A30 SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A44 DUP3 PUSH0 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1AAD JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1A65 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1A6F SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AA7 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1A8C SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x1AA0 SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A72 JUMP JUMPDEST POP PUSH2 0x1ABA JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1AB9 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1ACD JUMPI DUP2 PUSH2 0x1ACF JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3E SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B52 PUSH0 DUP4 DUP4 PUSH2 0x1D25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBD SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2D SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D1F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D75 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E43 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DFE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E8A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F31 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F80 DUP3 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x1F8A DUP2 DUP6 PUSH2 0x1F48 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1FA3 DUP2 PUSH2 0x1F66 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC6 DUP2 DUP5 PUSH2 0x1F76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFB DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200B DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2015 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2026 DUP2 PUSH2 0x2002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x202C JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2059 DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2082 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2093 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B1 DUP2 PUSH2 0x209D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20CA PUSH0 DUP4 ADD DUP5 PUSH2 0x20A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F3 PUSH2 0x20EE PUSH2 0x20E9 DUP5 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2104 DUP3 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2115 DUP3 PUSH2 0x20FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2125 DUP2 PUSH2 0x210B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213E PUSH0 DUP4 ADD DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x214D DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH0 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2190 DUP7 DUP3 DUP8 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21B2 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D1 DUP2 PUSH2 0x21BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21EA PUSH0 DUP4 ADD DUP5 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA DUP3 PUSH2 0x1FF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2225 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2241 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x224F DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2260 DUP7 DUP3 DUP8 ADD PUSH2 0x2217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2271 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH0 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x229B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B6 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C4 DUP5 DUP3 DUP6 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22EF DUP5 DUP3 DUP6 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x230B PUSH0 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x2318 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2342 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2353 DUP6 DUP3 DUP7 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2381 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2392 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23A3 DUP7 DUP3 DUP8 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D0 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2018 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x242F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2442 JUMPI PUSH2 0x2441 PUSH2 0x23EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737761703A20616D6F756E74496E206D75737420706F73697469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x247C PUSH1 0x1C DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2487 DUP3 PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A9 DUP2 PUSH2 0x2470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737761703A20746F6B656E496E206E6F7420737570706F727465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E4 PUSH1 0x1B DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EF DUP3 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2511 DUP2 PUSH2 0x24D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253A PUSH0 DUP4 ADD DUP5 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x254E DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2576 DUP5 DUP3 DUP6 ADD PUSH2 0x2540 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25B6 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C1 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25D9 JUMPI PUSH2 0x25D8 PUSH2 0x257F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25E9 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x25F4 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x260C JUMPI PUSH2 0x260B PUSH2 0x257F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2625 PUSH0 DUP4 ADD DUP7 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x2632 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x263F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2650 DUP2 PUSH2 0x209D JUMP JUMPDEST DUP2 EQ PUSH2 0x265A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266B DUP2 PUSH2 0x2647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2686 JUMPI PUSH2 0x2685 PUSH2 0x1FCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2693 DUP5 DUP3 DUP6 ADD PUSH2 0x265D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26AF PUSH0 DUP4 ADD DUP6 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4C5020696E73756666696369656E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH1 0xF DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP3 PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2724 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2735 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2740 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274E DUP2 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x257F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x27A3 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x27AE DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x276C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27DC PUSH0 DUP4 ADD DUP7 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x27E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20746F6B656E30416D6F756E742063616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH1 0x27 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP3 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20746F6B656E31416D6F756E742063616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E6 PUSH1 0x27 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F1 DUP3 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2913 DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164644C69717569646974793A20696E73756666696369656E74206C69717569 PUSH0 DUP3 ADD MSTORE PUSH32 0x6469747900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2974 PUSH1 0x24 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x297F DUP3 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29A1 DUP2 PUSH2 0x2968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A20616D6F756E74496E PUSH0 DUP3 ADD MSTORE PUSH32 0x206D75737420706F736974697665000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A02 PUSH1 0x2E DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0D DUP3 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2F DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A207265736572766549 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E206D75737420706F7369746976650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A90 PUSH1 0x2F DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9B DUP3 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ABD DUP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C63756C617465537761704F7574416D6F756E743A20726573657276654F PUSH0 DUP3 ADD MSTORE PUSH32 0x7574206D75737420706F73697469766500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B1E PUSH1 0x30 DUP4 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B29 DUP3 PUSH2 0x2AC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B65 PUSH0 DUP4 ADD DUP7 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x2B72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x2B7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2144 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP4 0x4E 0x2F PUSH16 0x4E98D84376552BB880117154BE87B6DF DUP12 0xEA DUP11 PUSH29 0x9080F7E75105E164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "224:8130:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;851:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:1867:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;927:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3787:852:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1812:1447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7255:575;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;851:20:5:-;;;;;;;;;;;;;:::o;2849:97:1:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;4881:1867:5:-;4967:17;4986:15;5050:1;5039:8;:12;5031:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5113:6;;;;;;;;;;;5102:17;;:7;:17;;;:38;;;;5134:6;;;;;;;;;;;5123:17;;:7;:17;;;5102:38;5094:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5182:16;5201:6;;;;;;;;;;;:16;;;5226:4;5201:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5182:50;;5242:16;5261:6;;;;;;;;;;;:16;;;5286:4;5261:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5242:50;;5317:6;;;;;;;;;;;5306:17;;:7;:17;;;5302:1356;;5400:52;5423:8;5433;5443;5400:22;:52::i;:::-;5388:64;;5477:6;;;;;;;;;;;5466:17;;5513:12;5501:9;:24;5497:96;;;5552:26;;;;;;;;;;;;;;5497:96;5712:8;5678:6;;;;;;;;;;;:16;;;5703:4;5678:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;:::-;5667:8;:53;;;;5818:9;5784:6;;;;;;;;;;;:16;;;5809:4;5784:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;5773:8;:54;;;;5869:6;;;;;;;;;;;:19;;;5889:10;5909:4;5916:8;5869:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5939:6;;;;;;;;;;;:15;;;5955:10;5967:9;5939:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5302:1356;;;6068:52;6091:8;6101;6111;6068:22;:52::i;:::-;6056:64;;6145:6;;;;;;;;;;;6134:17;;6181:12;6169:9;:24;6165:96;;;6220:26;;;;;;;;;;;;;;6165:96;6381:8;6347:6;;;;;;;;;;;:16;;;6372:4;6347:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;:::-;6336:8;:53;;;;6488:9;6454:6;;;;;;;;;;;:16;;;6479:4;6454:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;6443:8;:54;;;;6539:6;;;;;;;;;;;:19;;;6559:10;6579:4;6586:8;6539:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6609:6;;;;;;;;;;;:15;;;6625:10;6637:9;6609:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5302:1356;6720:8;6672:69;;6692:7;6672:69;;;6702:8;6731:9;6672:69;;;;;;;:::i;:::-;;;;;;;;5003:1745;;4881:1867;;;;;;:::o;927:23::-;;;;:::o;980:::-;;;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3787:852:5:-;3847:20;3869;3919:15;3937:21;3947:10;3937:9;:21::i;:::-;3919:39;;3987:9;3976:7;:20;;3968:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4080:19;4102:13;:11;:13::i;:::-;4080:35;;4163:11;4152:8;;4140:9;:20;;;;:::i;:::-;:34;;;;:::i;:::-;4125:49;;4222:11;4211:8;;4199:9;:20;;;;:::i;:::-;:34;;;;:::i;:::-;4184:49;;4288:12;4254:6;;;;;;;;;;;:16;;;4279:4;4254:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;;:::i;:::-;4243:8;:57;;;;4355:12;4321:6;;;;;;;;;;;:16;;;4346:4;4321:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;;:::i;:::-;4310:8;:57;;;;4397:28;4403:10;4415:9;4397:5;:28::i;:::-;4459:6;;;;;;;;;;;:15;;;4475:10;4487:12;4459:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4510:6;;;;;;;;;;;:15;;;4526:10;4538:12;4510:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4583:10;4566:66;;;4595:9;4606:12;4619;4566:66;;;;;;;;:::i;:::-;;;;;;;;3891:748;;3787:852;;;:::o;1812:1447::-;1983:17;2053:1;2038:12;:16;2030:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2131:1;2116:12;:16;2108:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2277:12;2243:6;;;;;;;;;;;:16;;;2268:4;2243:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;;:::i;:::-;2232:8;:57;;;;2344:12;2310:6;;;;;;;;;;;:16;;;2335:4;2310:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;;:::i;:::-;2299:8;:57;;;;2366:19;2388:13;:11;:13::i;:::-;2366:35;;2430:1;2415:11;:16;2411:418;;2536:33;2556:12;2541;:27;;;;:::i;:::-;2536:4;:33::i;:::-;2524:45;;2411:418;;;2737:81;2770:8;;2756:11;2741:12;:26;;;;:::i;:::-;:37;;;;:::i;:::-;2809:8;;2795:11;2780:12;:26;;;;:::i;:::-;:37;;;;:::i;:::-;2737:3;:81::i;:::-;2725:93;;2411:418;2884:1;2872:9;:13;2864:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2956:28;2962:10;2974:9;2956:5;:28::i;:::-;3018:6;;;;;;;;;;;:19;;;3038:10;3058:4;3065:12;3018:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3088:6;;;;;;;;;;;:19;;;3108:10;3128:4;3135:12;3088:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3202:10;3187:65;;;3214:12;3228;3242:9;3187:65;;;;;;;;:::i;:::-;;;;;;;;2002:1257;1812:1447;;;;:::o;7255:575::-;7489:17;7537:1;7526:8;:12;7518:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7619:1;7607:9;:13;7599:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7703:1;7690:10;:14;7682:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;7814:8;7804:9;:18;;;;:::i;:::-;7789:10;7780:8;:19;;;;:::i;:::-;7779:44;;;;:::i;:::-;7767:56;;7255:575;;;;;:::o;3315:178:1:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;877:20:5:-;;;;;;;;;;;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;7863:336:5:-;7913:14;7949:1;7943:3;:7;7939:254;;;7975:3;7966:12;;7992:9;8014:1;8010;8004:3;:7;;;;:::i;:::-;:11;;;;:::i;:::-;7992:23;;8029:101;8040:6;8036:1;:10;8029:101;;;8075:1;8066:10;;8114:1;8109;8105;8099:3;:7;;;;:::i;:::-;:11;;;;:::i;:::-;8098:17;;;;:::i;:::-;8094:21;;8029:101;;;7952:188;7939:254;;;8155:1;8148:3;:8;8145:48;;8181:1;8172:10;;8145:48;7939:254;7863:336;;;:::o;8224:128::-;8285:14;8327:4;8320;:11;:25;;8341:4;8320:25;;;8334:4;8320:25;8311:34;;8224:128;;;;:::o;7458:208:1:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:60::-;3367:3;3388:5;3381:12;;3339:60;;;:::o;3405:142::-;3455:9;3488:53;3506:34;3515:24;3533:5;3515:24;:::i;:::-;3506:34;:::i;:::-;3488:53;:::i;:::-;3475:66;;3405:142;;;:::o;3553:126::-;3603:9;3636:37;3667:5;3636:37;:::i;:::-;3623:50;;3553:126;;;:::o;3685:140::-;3749:9;3782:37;3813:5;3782:37;:::i;:::-;3769:50;;3685:140;;;:::o;3831:159::-;3932:51;3977:5;3932:51;:::i;:::-;3927:3;3920:64;3831:159;;:::o;3996:250::-;4103:4;4141:2;4130:9;4126:18;4118:26;;4154:85;4236:1;4225:9;4221:17;4212:6;4154:85;:::i;:::-;3996:250;;;;:::o;4252:118::-;4339:24;4357:5;4339:24;:::i;:::-;4334:3;4327:37;4252:118;;:::o;4376:222::-;4469:4;4507:2;4496:9;4492:18;4484:26;;4520:71;4588:1;4577:9;4573:17;4564:6;4520:71;:::i;:::-;4376:222;;;;:::o;4604:619::-;4681:6;4689;4697;4746:2;4734:9;4725:7;4721:23;4717:32;4714:119;;;4752:79;;:::i;:::-;4714:119;4872:1;4897:53;4942:7;4933:6;4922:9;4918:22;4897:53;:::i;:::-;4887:63;;4843:117;4999:2;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;:::i;:::-;5015:63;;4970:118;5127:2;5153:53;5198:7;5189:6;5178:9;5174:22;5153:53;:::i;:::-;5143:63;;5098:118;4604:619;;;;;:::o;5229:86::-;5264:7;5304:4;5297:5;5293:16;5282:27;;5229:86;;;:::o;5321:112::-;5404:22;5420:5;5404:22;:::i;:::-;5399:3;5392:35;5321:112;;:::o;5439:214::-;5528:4;5566:2;5555:9;5551:18;5543:26;;5579:67;5643:1;5632:9;5628:17;5619:6;5579:67;:::i;:::-;5439:214;;;;:::o;5659:110::-;5710:7;5739:24;5757:5;5739:24;:::i;:::-;5728:35;;5659:110;;;:::o;5775:150::-;5862:38;5894:5;5862:38;:::i;:::-;5855:5;5852:49;5842:77;;5915:1;5912;5905:12;5842:77;5775:150;:::o;5931:167::-;5991:5;6029:6;6016:20;6007:29;;6045:47;6086:5;6045:47;:::i;:::-;5931:167;;;;:::o;6104:647::-;6195:6;6203;6211;6260:2;6248:9;6239:7;6235:23;6231:32;6228:119;;;6266:79;;:::i;:::-;6228:119;6386:1;6411:53;6456:7;6447:6;6436:9;6432:22;6411:53;:::i;:::-;6401:63;;6357:117;6513:2;6539:67;6598:7;6589:6;6578:9;6574:22;6539:67;:::i;:::-;6529:77;;6484:132;6655:2;6681:53;6726:7;6717:6;6706:9;6702:22;6681:53;:::i;:::-;6671:63;;6626:118;6104:647;;;;;:::o;6757:360::-;6892:4;6930:2;6919:9;6915:18;6907:26;;6943:71;7011:1;7000:9;6996:17;6987:6;6943:71;:::i;:::-;7024:86;7106:2;7095:9;7091:18;7082:6;7024:86;:::i;:::-;6757:360;;;;;:::o;7123:329::-;7182:6;7231:2;7219:9;7210:7;7206:23;7202:32;7199:119;;;7237:79;;:::i;:::-;7199:119;7357:1;7382:53;7427:7;7418:6;7407:9;7403:22;7382:53;:::i;:::-;7372:63;;7328:117;7123:329;;;;:::o;7458:::-;7517:6;7566:2;7554:9;7545:7;7541:23;7537:32;7534:119;;;7572:79;;:::i;:::-;7534:119;7692:1;7717:53;7762:7;7753:6;7742:9;7738:22;7717:53;:::i;:::-;7707:63;;7663:117;7458:329;;;;:::o;7793:332::-;7914:4;7952:2;7941:9;7937:18;7929:26;;7965:71;8033:1;8022:9;8018:17;8009:6;7965:71;:::i;:::-;8046:72;8114:2;8103:9;8099:18;8090:6;8046:72;:::i;:::-;7793:332;;;;;:::o;8131:474::-;8199:6;8207;8256:2;8244:9;8235:7;8231:23;8227:32;8224:119;;;8262:79;;:::i;:::-;8224:119;8382:1;8407:53;8452:7;8443:6;8432:9;8428:22;8407:53;:::i;:::-;8397:63;;8353:117;8509:2;8535:53;8580:7;8571:6;8560:9;8556:22;8535:53;:::i;:::-;8525:63;;8480:118;8131:474;;;;;:::o;8611:619::-;8688:6;8696;8704;8753:2;8741:9;8732:7;8728:23;8724:32;8721:119;;;8759:79;;:::i;:::-;8721:119;8879:1;8904:53;8949:7;8940:6;8929:9;8925:22;8904:53;:::i;:::-;8894:63;;8850:117;9006:2;9032:53;9077:7;9068:6;9057:9;9053:22;9032:53;:::i;:::-;9022:63;;8977:118;9134:2;9160:53;9205:7;9196:6;9185:9;9181:22;9160:53;:::i;:::-;9150:63;;9105:118;8611:619;;;;;:::o;9236:474::-;9304:6;9312;9361:2;9349:9;9340:7;9336:23;9332:32;9329:119;;;9367:79;;:::i;:::-;9329:119;9487:1;9512:53;9557:7;9548:6;9537:9;9533:22;9512:53;:::i;:::-;9502:63;;9458:117;9614:2;9640:53;9685:7;9676:6;9665:9;9661:22;9640:53;:::i;:::-;9630:63;;9585:118;9236:474;;;;;:::o;9716:180::-;9764:77;9761:1;9754:88;9861:4;9858:1;9851:15;9885:4;9882:1;9875:15;9902:320;9946:6;9983:1;9977:4;9973:12;9963:22;;10030:1;10024:4;10020:12;10051:18;10041:81;;10107:4;10099:6;10095:17;10085:27;;10041:81;10169:2;10161:6;10158:14;10138:18;10135:38;10132:84;;10188:18;;:::i;:::-;10132:84;9953:269;9902:320;;;:::o;10228:178::-;10368:30;10364:1;10356:6;10352:14;10345:54;10228:178;:::o;10412:366::-;10554:3;10575:67;10639:2;10634:3;10575:67;:::i;:::-;10568:74;;10651:93;10740:3;10651:93;:::i;:::-;10769:2;10764:3;10760:12;10753:19;;10412:366;;;:::o;10784:419::-;10950:4;10988:2;10977:9;10973:18;10965:26;;11037:9;11031:4;11027:20;11023:1;11012:9;11008:17;11001:47;11065:131;11191:4;11065:131;:::i;:::-;11057:139;;10784:419;;;:::o;11209:177::-;11349:29;11345:1;11337:6;11333:14;11326:53;11209:177;:::o;11392:366::-;11534:3;11555:67;11619:2;11614:3;11555:67;:::i;:::-;11548:74;;11631:93;11720:3;11631:93;:::i;:::-;11749:2;11744:3;11740:12;11733:19;;11392:366;;;:::o;11764:419::-;11930:4;11968:2;11957:9;11953:18;11945:26;;12017:9;12011:4;12007:20;12003:1;11992:9;11988:17;11981:47;12045:131;12171:4;12045:131;:::i;:::-;12037:139;;11764:419;;;:::o;12189:118::-;12276:24;12294:5;12276:24;:::i;:::-;12271:3;12264:37;12189:118;;:::o;12313:222::-;12406:4;12444:2;12433:9;12429:18;12421:26;;12457:71;12525:1;12514:9;12510:17;12501:6;12457:71;:::i;:::-;12313:222;;;;:::o;12541:143::-;12598:5;12629:6;12623:13;12614:22;;12645:33;12672:5;12645:33;:::i;:::-;12541:143;;;;:::o;12690:351::-;12760:6;12809:2;12797:9;12788:7;12784:23;12780:32;12777:119;;;12815:79;;:::i;:::-;12777:119;12935:1;12960:64;13016:7;13007:6;12996:9;12992:22;12960:64;:::i;:::-;12950:74;;12906:128;12690:351;;;;:::o;13047:180::-;13095:77;13092:1;13085:88;13192:4;13189:1;13182:15;13216:4;13213:1;13206:15;13233:191;13273:3;13292:20;13310:1;13292:20;:::i;:::-;13287:25;;13326:20;13344:1;13326:20;:::i;:::-;13321:25;;13369:1;13366;13362:9;13355:16;;13390:3;13387:1;13384:10;13381:36;;;13397:18;;:::i;:::-;13381:36;13233:191;;;;:::o;13430:194::-;13470:4;13490:20;13508:1;13490:20;:::i;:::-;13485:25;;13524:20;13542:1;13524:20;:::i;:::-;13519:25;;13568:1;13565;13561:9;13553:17;;13592:1;13586:4;13583:11;13580:37;;;13597:18;;:::i;:::-;13580:37;13430:194;;;;:::o;13630:442::-;13779:4;13817:2;13806:9;13802:18;13794:26;;13830:71;13898:1;13887:9;13883:17;13874:6;13830:71;:::i;:::-;13911:72;13979:2;13968:9;13964:18;13955:6;13911:72;:::i;:::-;13993;14061:2;14050:9;14046:18;14037:6;13993:72;:::i;:::-;13630:442;;;;;;:::o;14078:116::-;14148:21;14163:5;14148:21;:::i;:::-;14141:5;14138:32;14128:60;;14184:1;14181;14174:12;14128:60;14078:116;:::o;14200:137::-;14254:5;14285:6;14279:13;14270:22;;14301:30;14325:5;14301:30;:::i;:::-;14200:137;;;;:::o;14343:345::-;14410:6;14459:2;14447:9;14438:7;14434:23;14430:32;14427:119;;;14465:79;;:::i;:::-;14427:119;14585:1;14610:61;14663:7;14654:6;14643:9;14639:22;14610:61;:::i;:::-;14600:71;;14556:125;14343:345;;;;:::o;14694:332::-;14815:4;14853:2;14842:9;14838:18;14830:26;;14866:71;14934:1;14923:9;14919:17;14910:6;14866:71;:::i;:::-;14947:72;15015:2;15004:9;15000:18;14991:6;14947:72;:::i;:::-;14694:332;;;;;:::o;15032:165::-;15172:17;15168:1;15160:6;15156:14;15149:41;15032:165;:::o;15203:366::-;15345:3;15366:67;15430:2;15425:3;15366:67;:::i;:::-;15359:74;;15442:93;15531:3;15442:93;:::i;:::-;15560:2;15555:3;15551:12;15544:19;;15203:366;;;:::o;15575:419::-;15741:4;15779:2;15768:9;15764:18;15756:26;;15828:9;15822:4;15818:20;15814:1;15803:9;15799:17;15792:47;15856:131;15982:4;15856:131;:::i;:::-;15848:139;;15575:419;;;:::o;16000:410::-;16040:7;16063:20;16081:1;16063:20;:::i;:::-;16058:25;;16097:20;16115:1;16097:20;:::i;:::-;16092:25;;16152:1;16149;16145:9;16174:30;16192:11;16174:30;:::i;:::-;16163:41;;16353:1;16344:7;16340:15;16337:1;16334:22;16314:1;16307:9;16287:83;16264:139;;16383:18;;:::i;:::-;16264:139;16048:362;16000:410;;;;:::o;16416:180::-;16464:77;16461:1;16454:88;16561:4;16558:1;16551:15;16585:4;16582:1;16575:15;16602:185;16642:1;16659:20;16677:1;16659:20;:::i;:::-;16654:25;;16693:20;16711:1;16693:20;:::i;:::-;16688:25;;16732:1;16722:35;;16737:18;;:::i;:::-;16722:35;16779:1;16776;16772:9;16767:14;;16602:185;;;;:::o;16793:442::-;16942:4;16980:2;16969:9;16965:18;16957:26;;16993:71;17061:1;17050:9;17046:17;17037:6;16993:71;:::i;:::-;17074:72;17142:2;17131:9;17127:18;17118:6;17074:72;:::i;:::-;17156;17224:2;17213:9;17209:18;17200:6;17156:72;:::i;:::-;16793:442;;;;;;:::o;17241:226::-;17381:34;17377:1;17369:6;17365:14;17358:58;17450:9;17445:2;17437:6;17433:15;17426:34;17241:226;:::o;17473:366::-;17615:3;17636:67;17700:2;17695:3;17636:67;:::i;:::-;17629:74;;17712:93;17801:3;17712:93;:::i;:::-;17830:2;17825:3;17821:12;17814:19;;17473:366;;;:::o;17845:419::-;18011:4;18049:2;18038:9;18034:18;18026:26;;18098:9;18092:4;18088:20;18084:1;18073:9;18069:17;18062:47;18126:131;18252:4;18126:131;:::i;:::-;18118:139;;17845:419;;;:::o;18270:226::-;18410:34;18406:1;18398:6;18394:14;18387:58;18479:9;18474:2;18466:6;18462:15;18455:34;18270:226;:::o;18502:366::-;18644:3;18665:67;18729:2;18724:3;18665:67;:::i;:::-;18658:74;;18741:93;18830:3;18741:93;:::i;:::-;18859:2;18854:3;18850:12;18843:19;;18502:366;;;:::o;18874:419::-;19040:4;19078:2;19067:9;19063:18;19055:26;;19127:9;19121:4;19117:20;19113:1;19102:9;19098:17;19091:47;19155:131;19281:4;19155:131;:::i;:::-;19147:139;;18874:419;;;:::o;19299:223::-;19439:34;19435:1;19427:6;19423:14;19416:58;19508:6;19503:2;19495:6;19491:15;19484:31;19299:223;:::o;19528:366::-;19670:3;19691:67;19755:2;19750:3;19691:67;:::i;:::-;19684:74;;19767:93;19856:3;19767:93;:::i;:::-;19885:2;19880:3;19876:12;19869:19;;19528:366;;;:::o;19900:419::-;20066:4;20104:2;20093:9;20089:18;20081:26;;20153:9;20147:4;20143:20;20139:1;20128:9;20124:17;20117:47;20181:131;20307:4;20181:131;:::i;:::-;20173:139;;19900:419;;;:::o;20325:233::-;20465:34;20461:1;20453:6;20449:14;20442:58;20534:16;20529:2;20521:6;20517:15;20510:41;20325:233;:::o;20564:366::-;20706:3;20727:67;20791:2;20786:3;20727:67;:::i;:::-;20720:74;;20803:93;20892:3;20803:93;:::i;:::-;20921:2;20916:3;20912:12;20905:19;;20564:366;;;:::o;20936:419::-;21102:4;21140:2;21129:9;21125:18;21117:26;;21189:9;21183:4;21179:20;21175:1;21164:9;21160:17;21153:47;21217:131;21343:4;21217:131;:::i;:::-;21209:139;;20936:419;;;:::o;21361:234::-;21501:34;21497:1;21489:6;21485:14;21478:58;21570:17;21565:2;21557:6;21553:15;21546:42;21361:234;:::o;21601:366::-;21743:3;21764:67;21828:2;21823:3;21764:67;:::i;:::-;21757:74;;21840:93;21929:3;21840:93;:::i;:::-;21958:2;21953:3;21949:12;21942:19;;21601:366;;;:::o;21973:419::-;22139:4;22177:2;22166:9;22162:18;22154:26;;22226:9;22220:4;22216:20;22212:1;22201:9;22197:17;22190:47;22254:131;22380:4;22254:131;:::i;:::-;22246:139;;21973:419;;;:::o;22398:235::-;22538:34;22534:1;22526:6;22522:14;22515:58;22607:18;22602:2;22594:6;22590:15;22583:43;22398:235;:::o;22639:366::-;22781:3;22802:67;22866:2;22861:3;22802:67;:::i;:::-;22795:74;;22878:93;22967:3;22878:93;:::i;:::-;22996:2;22991:3;22987:12;22980:19;;22639:366;;;:::o;23011:419::-;23177:4;23215:2;23204:9;23200:18;23192:26;;23264:9;23258:4;23254:20;23250:1;23239:9;23235:17;23228:47;23292:131;23418:4;23292:131;:::i;:::-;23284:139;;23011:419;;;:::o;23436:442::-;23585:4;23623:2;23612:9;23608:18;23600:26;;23636:71;23704:1;23693:9;23689:17;23680:6;23636:71;:::i;:::-;23717:72;23785:2;23774:9;23770:18;23761:6;23717:72;:::i;:::-;23799;23867:2;23856:9;23852:18;23843:6;23799:72;:::i;:::-;23436:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2239400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"calculateSwapOutAmount(uint256,uint256,uint256)": "infinite",
								"decimals()": "383",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2514",
								"reserve1()": "2448",
								"swap(uint256,address,uint256)": "infinite",
								"symbol()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1009,
									"end": 1138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "53696D706C655377617000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "5353000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1089,
									"end": 1095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1105,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1131,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1115,
									"end": 1121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1131,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1138,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1178,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1179,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1184,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1187,
									"end": 1266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1402,
									"end": 1409,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1391,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1378,
									"end": 1400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1332,
									"end": 1410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1278,
									"end": 1420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1555,
									"end": 1562,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1535,
									"end": 1544,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1531,
									"end": 1553,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1485,
									"end": 1563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1677,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1678,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1871,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1691,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1816,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1736,
									"end": 1737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1817,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1840,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1833,
									"end": 1834,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1826,
									"end": 1841,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 2057,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1877,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1925,
									"end": 2002,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1922,
									"end": 1923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1915,
									"end": 2003,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2026,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2019,
									"end": 2020,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2012,
									"end": 2027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2046,
									"end": 2050,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2043,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2051,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2113,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2144,
									"end": 2145,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2138,
									"end": 2142,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2134,
									"end": 2146,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2146,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2146,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2192,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2185,
									"end": 2189,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2193,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2212,
									"end": 2230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2268,
									"end": 2272,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2260,
									"end": 2266,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2273,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2273,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2330,
									"end": 2332,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2322,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2319,
									"end": 2333,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2317,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2349,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2461,
									"end": 2464,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2464,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2484,
									"end": 2487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2481,
									"end": 2482,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2474,
									"end": 2488,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2518,
									"end": 2522,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2515,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2523,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2523,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2573,
									"end": 2579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2620,
									"end": 2622,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2615,
									"end": 2617,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2608,
									"end": 2613,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2604,
									"end": 2618,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2600,
									"end": 2623,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2590,
									"end": 2623,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2590,
									"end": 2623,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2679,
									"end": 2687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2729,
									"end": 2734,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2723,
									"end": 2727,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2735,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2698,
									"end": 2735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2698,
									"end": 2735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2823,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2867,
									"end": 2868,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2855,
									"end": 2865,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2851,
									"end": 2869,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2920,
									"end": 2986,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2909,
									"end": 2918,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2890,
									"end": 2987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3038,
									"end": 3046,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3027,
									"end": 3036,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3008,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3047,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3047,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3080,
									"end": 3084,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3069,
									"end": 3074,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3086,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3086,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3086,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3129,
									"end": 3133,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3119,
									"end": 3127,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 3134,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3108,
									"end": 3113,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3105,
									"end": 3135,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3135,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3213,
									"end": 3218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3202,
									"end": 3218,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3202,
									"end": 3218,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3258,
									"end": 3261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3279,
									"end": 3284,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3284,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3284,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3424,
									"end": 3429,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3406,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3397,
									"end": 3431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3379,
									"end": 3432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3432,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3432,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3508,
									"end": 3513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3501,
									"end": 3513,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3501,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3666,
									"end": 3673,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3635,
									"end": 3674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3769,
									"end": 3785,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3745,
									"end": 3786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3737,
									"end": 3743,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3730,
									"end": 3734,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3724,
									"end": 3735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3696,
									"end": 3787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3694,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3683,
									"end": 3788,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3845,
									"end": 3848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3956,
									"end": 3988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4055,
									"end": 4061,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4053,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4045,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3997,
									"end": 4062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3932,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4151,
									"end": 4154,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4149,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4155,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4242,
									"end": 4243,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4235,
									"end": 4240,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4205,
									"end": 4244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4179,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4171,
									"end": 4176,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4167,
									"end": 4180,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4158,
									"end": 4180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4158,
									"end": 4180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4367,
									"end": 4369,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4362,
									"end": 4365,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4359,
									"end": 4370,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4401,
									"end": 4439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4503,
									"end": 4513,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4485,
									"end": 4514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4471,
									"end": 4515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4670,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4656,
									"end": 4666,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4671,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4689,
									"end": 4697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4674,
									"end": 4697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4674,
									"end": 4697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4786,
									"end": 4789,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4768,
									"end": 4790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4758,
									"end": 4766,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4741,
									"end": 4752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4712,
									"end": 4792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4919,
									"end": 4924,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4913,
									"end": 4917,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4909,
									"end": 4925,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4888,
									"end": 4925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4888,
									"end": 4925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4982,
									"end": 4988,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5063,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5065,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5056,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5048,
									"end": 5049,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5044,
									"end": 5057,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5015,
									"end": 5066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5011,
									"end": 5067,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5100,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5090,
									"end": 5094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5086,
									"end": 5101,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5101,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5101,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4989,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5188,
									"end": 5192,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5359,
									"end": 5362,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5357,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5334,
									"end": 5363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5363,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5396,
									"end": 5399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5393,
									"end": 5394,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5389,
									"end": 5400,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5383,
									"end": 5387,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5401,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5372,
									"end": 5401,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5372,
									"end": 5401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5529,
									"end": 5566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5631,
									"end": 5649,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5623,
									"end": 5629,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5620,
									"end": 5650,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5653,
									"end": 5671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5729,
									"end": 5733,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5723,
									"end": 5734,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 5697,
									"end": 5735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5842,
									"end": 5848,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5840,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5782,
									"end": 5849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5876,
									"end": 5877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5900,
									"end": 5904,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5887,
									"end": 5904,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5904,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5932,
									"end": 5934,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5924,
									"end": 5930,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5921,
									"end": 5935,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5949,
									"end": 5950,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6606,
									"end": 6607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6623,
									"end": 6629,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6682,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6657,
									"end": 6683,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6783,
									"end": 6789,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6776,
									"end": 6781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6723,
									"end": 6790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6717,
									"end": 6721,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6710,
									"end": 6791,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6000,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5992,
									"end": 6001,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5984,
									"end": 5990,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5980,
									"end": 6002,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6062,
									"end": 6066,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6030,
									"end": 6067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6089,
									"end": 6090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6114,
									"end": 6115,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6111,
									"end": 6125,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6196,
									"end": 6205,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6191,
									"end": 6194,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6187,
									"end": 6206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6181,
									"end": 6207,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6173,
									"end": 6179,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6166,
									"end": 6208,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6247,
									"end": 6248,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6225,
									"end": 6249,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6225,
									"end": 6249,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6296,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6283,
									"end": 6292,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6279,
									"end": 6297,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6297,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6140,
									"end": 6144,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6138,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6133,
									"end": 6145,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6145,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6145,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6345,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6330,
									"end": 6337,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6346,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6406,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6392,
									"end": 6395,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6407,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6408,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6482,
									"end": 6486,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6474,
									"end": 6480,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6470,
									"end": 6487,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6468,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6440,
									"end": 6488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6438,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6489,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6347,
									"end": 6503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6549,
									"end": 6550,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6545,
									"end": 6546,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6537,
									"end": 6543,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6533,
									"end": 6547,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6529,
									"end": 6551,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6523,
									"end": 6527,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 8354,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099834e2f6f4e98d84376552bb880117154be87b6df8bea8a7c9080f7e75105e164736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "A3919E42"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "43264349"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 224,
											"end": 8354,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 851,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 851,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 851,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4881,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4881,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4881,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 927,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 980,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3787,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3787,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3787,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1812,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1812,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 7255,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7255,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7255,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 851,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5031,
											"end": 5084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5031,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5119,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5130,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5102,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5094,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5094,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5217,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5226,
											"end": 5230,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5201,
											"end": 5232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5201,
											"end": 5232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5277,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5261,
											"end": 5277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5277,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5286,
											"end": 5290,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5261,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5261,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5261,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5313,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5423,
											"end": 5431,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5443,
											"end": 5451,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5400,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5452,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5400,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5452,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5525,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5525,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5593,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5497,
											"end": 5593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "PUSH",
											"source": 5,
											"value": "CF3BA9FC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5578,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5593,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5497,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5720,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5703,
											"end": 5707,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5678,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5678,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5678,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5678,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5800,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5800,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5800,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5809,
											"end": 5813,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5784,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5784,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5784,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5784,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5784,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5781,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5773,
											"end": 5827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5827,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5888,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 5888,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5888,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5889,
											"end": 5899,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5924,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5869,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5869,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5954,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5939,
											"end": 5954,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5954,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5939,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5939,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6091,
											"end": 6099,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6068,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6120,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6151,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6178,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6165,
											"end": 6261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "PUSH",
											"source": 5,
											"value": "CF3BA9FC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6261,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6165,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6381,
											"end": 6389,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6363,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6363,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6363,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6347,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6347,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6347,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6347,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6344,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6336,
											"end": 6389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6389,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6470,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6470,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6454,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6454,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6454,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6454,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6454,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6451,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6443,
											"end": 6497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6497,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 6559,
											"end": 6569,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6594,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6539,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6539,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6609,
											"end": 6624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6625,
											"end": 6635,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6637,
											"end": 6646,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6609,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6609,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5302,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6692,
											"end": 6699,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH",
											"source": 5,
											"value": "80044F7893845E3883418A4D784224B0D2D9606CA5F19C2A910401C2C62761B5"
										},
										{
											"begin": 6702,
											"end": 6710,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6672,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6741,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 6748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 6748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 6748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 927,
											"end": 950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3947,
											"end": 3957,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3937,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3937,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3968,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3968,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4102,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4102,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4152,
											"end": 4160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4140,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4140,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4174,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4211,
											"end": 4219,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4199,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4199,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4233,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4279,
											"end": 4283,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4254,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4254,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4254,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4254,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4254,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4251,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4243,
											"end": 4300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4300,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4337,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4346,
											"end": 4350,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4321,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4321,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4321,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4321,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4321,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4403,
											"end": 4413,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4424,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4397,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4425,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4397,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4475,
											"end": 4485,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4459,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4459,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4525,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4510,
											"end": 4525,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4525,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4526,
											"end": 4536,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4510,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4510,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D"
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4631,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4566,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4632,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 4639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 4639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 4639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2030,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2030,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2132,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2108,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2259,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2268,
											"end": 2272,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2243,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2243,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2243,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2240,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2232,
											"end": 2289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2289,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2310,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2310,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2310,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2310,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2310,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2299,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2356,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2388,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2388,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2388,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2553,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2541,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2536,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2536,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2770,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2770,
											"end": 2778,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2741,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2741,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2780,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2780,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2780,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2737,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2818,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2737,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2411,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2864,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2864,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 2983,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2956,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2956,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3038,
											"end": 3048,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3018,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3018,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3108,
											"end": 3118,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3132,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3088,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3088,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 3214,
											"end": 3226,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3240,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3251,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3187,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3252,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7489,
											"end": 7506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7534,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7538,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7518,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 7518,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7607,
											"end": 7620,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 7599,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7599,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7682,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7682,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7804,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7788,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7780,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7779,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7779,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 8199,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7863,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7950,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7943,
											"end": 7946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7943,
											"end": 7950,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7975,
											"end": 7978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 7978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 7978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8004,
											"end": 8007,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8004,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 8004,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8066,
											"end": 8076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8066,
											"end": 8076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8099,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 8099,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8099,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8098,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8098,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8029,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 8140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8156,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8145,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8145,
											"end": 8193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8145,
											"end": 8193,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8145,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7939,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 8199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 8199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 8199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 8199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8285,
											"end": 8299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8331,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8334,
											"end": 8338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8320,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3515,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3506,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3488,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3636,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3813,
											"end": 3818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 3782,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 3932,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4154,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4339,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4364,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4520,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4732,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 4752,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 4897,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 5025,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 5198,
											"end": 5205,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 5153,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5404,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5579,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5769,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 5659,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 5757,
											"end": 5762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 5739,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 5763,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 5739,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5925,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 5775,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 5894,
											"end": 5899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 5862,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5900,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 5862,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5852,
											"end": 5901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5842,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 5842,
											"end": 5919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5842,
											"end": 5919,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 5842,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 5996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6036,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 6086,
											"end": 6091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 6045,
											"end": 6092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6248,
											"end": 6257,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 6228,
											"end": 6347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 6266,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6266,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6345,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 6266,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6347,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 6228,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6411,
											"end": 6464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6464,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 6411,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6464,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6357,
											"end": 6474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6539,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 6598,
											"end": 6605,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 6539,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6606,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 6539,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6606,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 6726,
											"end": 6733,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6702,
											"end": 6724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6681,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 6681,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6932,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 6993,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 6943,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 7014,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 6943,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7095,
											"end": 7104,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 7024,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7110,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 7024,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 7117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7182,
											"end": 7188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7234,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 7199,
											"end": 7318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 7237,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 7237,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7316,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 7237,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7318,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 7199,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 7427,
											"end": 7434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7416,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 7382,
											"end": 7435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7435,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 7382,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7328,
											"end": 7445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7564,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7569,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7653,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 7534,
											"end": 7653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 7572,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 7572,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7651,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 7572,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7653,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 7534,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7692,
											"end": 7693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7717,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 7717,
											"end": 7770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7717,
											"end": 7770,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 7717,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7952,
											"end": 7954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7941,
											"end": 7950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7937,
											"end": 7955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8015,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 7965,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8036,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 7965,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8090,
											"end": 8096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 8046,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8118,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 8046,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8253,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8242,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8231,
											"end": 8254,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8259,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 8224,
											"end": 8343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 8262,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 8262,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8343,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 8224,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 8452,
											"end": 8459,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8441,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 8407,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8460,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 8407,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8397,
											"end": 8460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8397,
											"end": 8460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 8580,
											"end": 8587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 8535,
											"end": 8588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8702,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8704,
											"end": 8710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8741,
											"end": 8750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8739,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8724,
											"end": 8756,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 8721,
											"end": 8840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 8759,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 8759,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8838,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 8759,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8840,
											"name": "tag",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 8721,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 8880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8949,
											"end": 8956,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8925,
											"end": 8947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 8904,
											"end": 8957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8957,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8904,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8957,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8850,
											"end": 8967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 9077,
											"end": 9084,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 9032,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 9205,
											"end": 9212,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 9160,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9105,
											"end": 9223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 9230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9347,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9364,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 9367,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 9557,
											"end": 9564,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9546,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 9512,
											"end": 9565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9614,
											"end": 9616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 9685,
											"end": 9692,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9665,
											"end": 9674,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9661,
											"end": 9683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 9640,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9896,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9716,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9841,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9761,
											"end": 9762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 9865,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9858,
											"end": 9859,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9851,
											"end": 9866,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9889,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9882,
											"end": 9883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 10222,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9902,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10024,
											"end": 10028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10041,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 10041,
											"end": 10122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10107,
											"end": 10111,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 10099,
											"end": 10105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10041,
											"end": 10122,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 10041,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10161,
											"end": 10167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10158,
											"end": 10172,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10135,
											"end": 10173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 10132,
											"end": 10216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 10188,
											"end": 10206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10216,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 10132,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 10222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 10222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 10222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 10222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10406,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 10228,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10368,
											"end": 10398,
											"name": "PUSH",
											"source": 6,
											"value": "737761703A20616D6F756E74496E206D75737420706F73697469766500000000"
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10345,
											"end": 10399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10778,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 10412,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 10639,
											"end": 10641,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 10634,
											"end": 10637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10575,
											"end": 10642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 10740,
											"end": 10743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 10651,
											"end": 10744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10744,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 10651,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10764,
											"end": 10767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 11203,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10784,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10977,
											"end": 10986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11037,
											"end": 11046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11031,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11023,
											"end": 11024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11012,
											"end": 11021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 11065,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11196,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 11065,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11057,
											"end": 11196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11057,
											"end": 11196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 11203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 11203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 11203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11386,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 11209,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11349,
											"end": 11378,
											"name": "PUSH",
											"source": 6,
											"value": "737761703A20746F6B656E496E206E6F7420737570706F727465640000000000"
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11758,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 11392,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11555,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 11619,
											"end": 11621,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 11614,
											"end": 11617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11555,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11555,
											"end": 11622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11555,
											"end": 11622,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 11555,
											"end": 11622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11548,
											"end": 11622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11548,
											"end": 11622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11631,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 11720,
											"end": 11723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11631,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 11631,
											"end": 11724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11631,
											"end": 11724,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 11631,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11749,
											"end": 11751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11744,
											"end": 11747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 12183,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 11764,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11930,
											"end": 11934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 11970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 11966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 11971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 11971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12017,
											"end": 12026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12011,
											"end": 12015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12007,
											"end": 12027,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12003,
											"end": 12004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11988,
											"end": 12005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11981,
											"end": 12028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12045,
											"end": 12176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12045,
											"end": 12176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 12045,
											"end": 12176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12045,
											"end": 12176,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 12045,
											"end": 12176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12037,
											"end": 12176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12037,
											"end": 12176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 12183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 12183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 12183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 12183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12307,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 12189,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 12294,
											"end": 12299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 12276,
											"end": 12300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12300,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 12276,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12271,
											"end": 12274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12264,
											"end": 12301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12421,
											"end": 12447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12421,
											"end": 12447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12510,
											"end": 12527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12501,
											"end": 12507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 12457,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12528,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 12457,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12598,
											"end": 12603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12629,
											"end": 12635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12623,
											"end": 12636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12614,
											"end": 12636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12614,
											"end": 12636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12645,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 12672,
											"end": 12677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12645,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 12645,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12645,
											"end": 12678,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 12645,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12797,
											"end": 12806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12788,
											"end": 12795,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12780,
											"end": 12812,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12777,
											"end": 12896,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12777,
											"end": 12896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 12777,
											"end": 12896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12815,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 12815,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 12815,
											"end": 12894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12815,
											"end": 12894,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 12815,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12777,
											"end": 12896,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 12777,
											"end": 12896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12960,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13007,
											"end": 13013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12996,
											"end": 13005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12960,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 12960,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12960,
											"end": 13024,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 12960,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12950,
											"end": 13024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12950,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12906,
											"end": 13034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 13041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13047,
											"end": 13227,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 13047,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13095,
											"end": 13172,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13092,
											"end": 13093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13085,
											"end": 13173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13182,
											"end": 13197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13220,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13221,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 13310,
											"end": 13311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13292,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13292,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13292,
											"end": 13312,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 13292,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13287,
											"end": 13312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13287,
											"end": 13312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 13344,
											"end": 13345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13326,
											"end": 13346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13346,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 13326,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13321,
											"end": 13346,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13321,
											"end": 13346,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13369,
											"end": 13370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13362,
											"end": 13371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13355,
											"end": 13371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13355,
											"end": 13371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13390,
											"end": 13393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13387,
											"end": 13388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13384,
											"end": 13394,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13417,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 13381,
											"end": 13417,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 13397,
											"end": 13415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "tag",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13417,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 13381,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13470,
											"end": 13474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 13508,
											"end": 13509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13490,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13490,
											"end": 13510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13490,
											"end": 13510,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 13490,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13485,
											"end": 13510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13485,
											"end": 13510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 13542,
											"end": 13543,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13524,
											"end": 13544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13544,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 13524,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13519,
											"end": 13544,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13519,
											"end": 13544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13565,
											"end": 13566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13561,
											"end": 13570,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13553,
											"end": 13570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13553,
											"end": 13570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13592,
											"end": 13593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13586,
											"end": 13590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13583,
											"end": 13594,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 13580,
											"end": 13617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 13597,
											"end": 13615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13617,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 13580,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13430,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13819,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13806,
											"end": 13815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13794,
											"end": 13820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13794,
											"end": 13820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13830,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 13898,
											"end": 13899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 13880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13830,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13830,
											"end": 13901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13830,
											"end": 13901,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 13830,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13911,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 13979,
											"end": 13981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 13977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13955,
											"end": 13961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13911,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13911,
											"end": 13983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13911,
											"end": 13983,
											"name": "tag",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 13911,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14043,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 13993,
											"end": 14065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14065,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 13993,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13630,
											"end": 14072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14194,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 14078,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 14148,
											"end": 14169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14169,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 14148,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14141,
											"end": 14146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14138,
											"end": 14170,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14128,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 14128,
											"end": 14188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14174,
											"end": 14186,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14128,
											"end": 14188,
											"name": "tag",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 14128,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14254,
											"end": 14259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14279,
											"end": 14292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14270,
											"end": 14292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14270,
											"end": 14292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14301,
											"end": 14331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 14325,
											"end": 14330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14301,
											"end": 14331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 14301,
											"end": 14331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14301,
											"end": 14331,
											"name": "tag",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 14301,
											"end": 14331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14200,
											"end": 14337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14410,
											"end": 14416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14459,
											"end": 14461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14447,
											"end": 14456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14438,
											"end": 14445,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14434,
											"end": 14457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14430,
											"end": 14462,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 14427,
											"end": 14546,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14427,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 14427,
											"end": 14546,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14465,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 14465,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 14465,
											"end": 14544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14465,
											"end": 14544,
											"name": "tag",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 14465,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14427,
											"end": 14546,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 14427,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14610,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 14663,
											"end": 14670,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14654,
											"end": 14660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14643,
											"end": 14652,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 14661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14610,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14610,
											"end": 14671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14610,
											"end": 14671,
											"name": "tag",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 14610,
											"end": 14671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14556,
											"end": 14681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14343,
											"end": 14688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 14819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14853,
											"end": 14855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14842,
											"end": 14851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14838,
											"end": 14856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 14856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 14856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14866,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 14934,
											"end": 14935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14923,
											"end": 14932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14919,
											"end": 14936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14910,
											"end": 14916,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14866,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 14866,
											"end": 14937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14866,
											"end": 14937,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 14866,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14947,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15004,
											"end": 15013,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14991,
											"end": 14997,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14947,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 14947,
											"end": 15019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14947,
											"end": 15019,
											"name": "tag",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 14947,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 15026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15032,
											"end": 15197,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 15032,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15172,
											"end": 15189,
											"name": "PUSH",
											"source": 6,
											"value": "4C5020696E73756666696369656E740000000000000000000000000000000000"
										},
										{
											"begin": 15168,
											"end": 15169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15160,
											"end": 15166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15156,
											"end": 15170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15149,
											"end": 15190,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15032,
											"end": 15197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15032,
											"end": 15197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15345,
											"end": 15348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 15430,
											"end": 15432,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 15425,
											"end": 15428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 15366,
											"end": 15433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "tag",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15359,
											"end": 15433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15359,
											"end": 15433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 15531,
											"end": 15534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 15442,
											"end": 15535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15560,
											"end": 15562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15555,
											"end": 15558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15551,
											"end": 15563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15203,
											"end": 15569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15741,
											"end": 15745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15764,
											"end": 15782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15756,
											"end": 15782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15756,
											"end": 15782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15828,
											"end": 15837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15822,
											"end": 15826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15818,
											"end": 15838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15814,
											"end": 15815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15799,
											"end": 15816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15792,
											"end": 15839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 15982,
											"end": 15986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 15856,
											"end": 15987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "tag",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15848,
											"end": 15987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15848,
											"end": 15987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16040,
											"end": 16047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16063,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 16081,
											"end": 16082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16063,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16063,
											"end": 16083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16063,
											"end": 16083,
											"name": "tag",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 16063,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16058,
											"end": 16083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16058,
											"end": 16083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16097,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "566"
										},
										{
											"begin": 16115,
											"end": 16116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16097,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16097,
											"end": 16117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16097,
											"end": 16117,
											"name": "tag",
											"source": 6,
											"value": "566"
										},
										{
											"begin": 16097,
											"end": 16117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16149,
											"end": 16150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16145,
											"end": 16154,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 16192,
											"end": 16203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16174,
											"end": 16204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "tag",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16163,
											"end": 16204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16163,
											"end": 16204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16353,
											"end": 16354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16344,
											"end": 16351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16340,
											"end": 16355,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16334,
											"end": 16356,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16314,
											"end": 16315,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16307,
											"end": 16316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16287,
											"end": 16370,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 16264,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 16264,
											"end": 16403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 16383,
											"end": 16401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "tag",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16264,
											"end": 16403,
											"name": "tag",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 16264,
											"end": 16403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16048,
											"end": 16410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16000,
											"end": 16410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16416,
											"end": 16596,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 16416,
											"end": 16596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16464,
											"end": 16541,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16454,
											"end": 16542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16561,
											"end": 16565,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 16558,
											"end": 16559,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16551,
											"end": 16566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16585,
											"end": 16589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 16582,
											"end": 16583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16575,
											"end": 16590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16642,
											"end": 16643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16659,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "572"
										},
										{
											"begin": 16677,
											"end": 16678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16659,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16659,
											"end": 16679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16659,
											"end": 16679,
											"name": "tag",
											"source": 6,
											"value": "572"
										},
										{
											"begin": 16659,
											"end": 16679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16654,
											"end": 16679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16654,
											"end": 16679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 16711,
											"end": 16712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16693,
											"end": 16713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16713,
											"name": "tag",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 16693,
											"end": 16713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16688,
											"end": 16713,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16688,
											"end": 16713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16732,
											"end": 16733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16722,
											"end": 16757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 16722,
											"end": 16757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "575"
										},
										{
											"begin": 16737,
											"end": 16755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 16737,
											"end": 16755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16755,
											"name": "tag",
											"source": 6,
											"value": "575"
										},
										{
											"begin": 16737,
											"end": 16755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16722,
											"end": 16757,
											"name": "tag",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 16722,
											"end": 16757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16779,
											"end": 16780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16772,
											"end": 16781,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 16767,
											"end": 16781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16767,
											"end": 16781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 16787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16942,
											"end": 16946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16980,
											"end": 16982,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 16969,
											"end": 16978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16957,
											"end": 16983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16957,
											"end": 16983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16993,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 17061,
											"end": 17062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17050,
											"end": 17059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17046,
											"end": 17063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17043,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 16993,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 16993,
											"end": 17064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16993,
											"end": 17064,
											"name": "tag",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 16993,
											"end": 17064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "578"
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17131,
											"end": 17140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17127,
											"end": 17145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17118,
											"end": 17124,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 17074,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17146,
											"name": "tag",
											"source": 6,
											"value": "578"
										},
										{
											"begin": 17074,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17156,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 17224,
											"end": 17226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17213,
											"end": 17222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17206,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17156,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 17156,
											"end": 17228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17156,
											"end": 17228,
											"name": "tag",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 17156,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16793,
											"end": 17235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17241,
											"end": 17467,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 17241,
											"end": 17467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17415,
											"name": "PUSH",
											"source": 6,
											"value": "6164644C69717569646974793A20746F6B656E30416D6F756E742063616E206E"
										},
										{
											"begin": 17377,
											"end": 17378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17369,
											"end": 17375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17365,
											"end": 17379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17358,
											"end": 17416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17459,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207A65726F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17445,
											"end": 17447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17437,
											"end": 17443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17433,
											"end": 17448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17426,
											"end": 17460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17241,
											"end": 17467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17241,
											"end": 17467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17839,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 17473,
											"end": 17839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17615,
											"end": 17618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17636,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 17700,
											"end": 17702,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 17695,
											"end": 17698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17636,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 17636,
											"end": 17703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17636,
											"end": 17703,
											"name": "tag",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 17636,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17629,
											"end": 17703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17629,
											"end": 17703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17712,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 17801,
											"end": 17804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17712,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 17712,
											"end": 17805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17712,
											"end": 17805,
											"name": "tag",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 17712,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17825,
											"end": 17828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17821,
											"end": 17833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17814,
											"end": 17833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17814,
											"end": 17833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17845,
											"end": 18264,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 17845,
											"end": 18264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18011,
											"end": 18015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18038,
											"end": 18047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18034,
											"end": 18052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18026,
											"end": 18052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18026,
											"end": 18052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18098,
											"end": 18107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18092,
											"end": 18096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18088,
											"end": 18108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18073,
											"end": 18082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18069,
											"end": 18086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18062,
											"end": 18109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18126,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 18252,
											"end": 18256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18126,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 18126,
											"end": 18257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18126,
											"end": 18257,
											"name": "tag",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 18126,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18118,
											"end": 18257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18118,
											"end": 18257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17845,
											"end": 18264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17845,
											"end": 18264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17845,
											"end": 18264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17845,
											"end": 18264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18270,
											"end": 18496,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 18270,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18410,
											"end": 18444,
											"name": "PUSH",
											"source": 6,
											"value": "6164644C69717569646974793A20746F6B656E31416D6F756E742063616E206E"
										},
										{
											"begin": 18406,
											"end": 18407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18398,
											"end": 18404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18394,
											"end": 18408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18387,
											"end": 18445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18479,
											"end": 18488,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207A65726F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18474,
											"end": 18476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18466,
											"end": 18472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18462,
											"end": 18477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18455,
											"end": 18489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18270,
											"end": 18496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18270,
											"end": 18496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18502,
											"end": 18868,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 18502,
											"end": 18868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18644,
											"end": 18647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 18729,
											"end": 18731,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 18724,
											"end": 18727,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 18665,
											"end": 18732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 18665,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18658,
											"end": 18732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18658,
											"end": 18732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18741,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 18830,
											"end": 18833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18741,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 18741,
											"end": 18834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18741,
											"end": 18834,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 18741,
											"end": 18834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18859,
											"end": 18861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18854,
											"end": 18857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18850,
											"end": 18862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18843,
											"end": 18862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18843,
											"end": 18862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18502,
											"end": 18868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18502,
											"end": 18868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18502,
											"end": 18868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18502,
											"end": 18868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 19293,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 18874,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19040,
											"end": 19044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19076,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19063,
											"end": 19081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19055,
											"end": 19081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19055,
											"end": 19081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19127,
											"end": 19136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19121,
											"end": 19125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19117,
											"end": 19137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19113,
											"end": 19114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19102,
											"end": 19111,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19098,
											"end": 19115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19091,
											"end": 19138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19155,
											"end": 19286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 19281,
											"end": 19285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19155,
											"end": 19286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 19155,
											"end": 19286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19155,
											"end": 19286,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 19155,
											"end": 19286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19147,
											"end": 19286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19147,
											"end": 19286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 19293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 19293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 19293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 19293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19299,
											"end": 19522,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 19299,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19439,
											"end": 19473,
											"name": "PUSH",
											"source": 6,
											"value": "6164644C69717569646974793A20696E73756666696369656E74206C69717569"
										},
										{
											"begin": 19435,
											"end": 19436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19427,
											"end": 19433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19423,
											"end": 19437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19416,
											"end": 19474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19508,
											"end": 19514,
											"name": "PUSH",
											"source": 6,
											"value": "6469747900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19503,
											"end": 19505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19495,
											"end": 19501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19491,
											"end": 19506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19484,
											"end": 19515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19299,
											"end": 19522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19299,
											"end": 19522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19670,
											"end": 19673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 19755,
											"end": 19757,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 19750,
											"end": 19753,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 19691,
											"end": 19758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19684,
											"end": 19758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19684,
											"end": 19758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 19856,
											"end": 19859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 19767,
											"end": 19860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "tag",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19885,
											"end": 19887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19880,
											"end": 19883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19876,
											"end": 19888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19869,
											"end": 19888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19869,
											"end": 19888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20066,
											"end": 20070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20104,
											"end": 20106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20093,
											"end": 20102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20089,
											"end": 20107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20081,
											"end": 20107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20081,
											"end": 20107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20153,
											"end": 20162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20147,
											"end": 20151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20139,
											"end": 20140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20128,
											"end": 20137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20124,
											"end": 20141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20117,
											"end": 20164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 20307,
											"end": 20311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 20181,
											"end": 20312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20173,
											"end": 20312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20173,
											"end": 20312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 20319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20325,
											"end": 20558,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 20325,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20465,
											"end": 20499,
											"name": "PUSH",
											"source": 6,
											"value": "63616C63756C617465537761704F7574416D6F756E743A20616D6F756E74496E"
										},
										{
											"begin": 20461,
											"end": 20462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20453,
											"end": 20459,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20449,
											"end": 20463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20442,
											"end": 20500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20534,
											"end": 20550,
											"name": "PUSH",
											"source": 6,
											"value": "206D75737420706F736974697665000000000000000000000000000000000000"
										},
										{
											"begin": 20529,
											"end": 20531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20521,
											"end": 20527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20517,
											"end": 20532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20510,
											"end": 20551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20325,
											"end": 20558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20325,
											"end": 20558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20564,
											"end": 20930,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 20564,
											"end": 20930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20727,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 20791,
											"end": 20793,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 20786,
											"end": 20789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20727,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 20727,
											"end": 20794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20727,
											"end": 20794,
											"name": "tag",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 20727,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20720,
											"end": 20794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20720,
											"end": 20794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20803,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 20892,
											"end": 20895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20803,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 20803,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20803,
											"end": 20896,
											"name": "tag",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 20803,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20921,
											"end": 20923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20916,
											"end": 20919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20912,
											"end": 20924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20905,
											"end": 20924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20905,
											"end": 20924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20564,
											"end": 20930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20564,
											"end": 20930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20564,
											"end": 20930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20564,
											"end": 20930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20936,
											"end": 21355,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 20936,
											"end": 21355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21102,
											"end": 21106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21129,
											"end": 21138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21125,
											"end": 21143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21117,
											"end": 21143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21117,
											"end": 21143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21189,
											"end": 21198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21183,
											"end": 21187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21179,
											"end": 21199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21175,
											"end": 21176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21164,
											"end": 21173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21160,
											"end": 21177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21153,
											"end": 21200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21217,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 21343,
											"end": 21347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21217,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 21217,
											"end": 21348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21217,
											"end": 21348,
											"name": "tag",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 21217,
											"end": 21348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21209,
											"end": 21348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21209,
											"end": 21348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20936,
											"end": 21355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20936,
											"end": 21355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20936,
											"end": 21355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20936,
											"end": 21355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21361,
											"end": 21595,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 21361,
											"end": 21595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21501,
											"end": 21535,
											"name": "PUSH",
											"source": 6,
											"value": "63616C63756C617465537761704F7574416D6F756E743A207265736572766549"
										},
										{
											"begin": 21497,
											"end": 21498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21489,
											"end": 21495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21485,
											"end": 21499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21478,
											"end": 21536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21570,
											"end": 21587,
											"name": "PUSH",
											"source": 6,
											"value": "6E206D75737420706F7369746976650000000000000000000000000000000000"
										},
										{
											"begin": 21565,
											"end": 21567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21557,
											"end": 21563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21553,
											"end": 21568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21546,
											"end": 21588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21361,
											"end": 21595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21361,
											"end": 21595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21601,
											"end": 21967,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 21601,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21743,
											"end": 21746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21764,
											"end": 21831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 21828,
											"end": 21830,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 21823,
											"end": 21826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21764,
											"end": 21831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 21764,
											"end": 21831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21764,
											"end": 21831,
											"name": "tag",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 21764,
											"end": 21831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21757,
											"end": 21831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21757,
											"end": 21831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21840,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 21929,
											"end": 21932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21840,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 21840,
											"end": 21933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21840,
											"end": 21933,
											"name": "tag",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 21840,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21958,
											"end": 21960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21953,
											"end": 21956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21942,
											"end": 21961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21942,
											"end": 21961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21601,
											"end": 21967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21601,
											"end": 21967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21601,
											"end": 21967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21601,
											"end": 21967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22139,
											"end": 22143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22177,
											"end": 22179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22226,
											"end": 22235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22220,
											"end": 22224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22216,
											"end": 22236,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 22212,
											"end": 22213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22201,
											"end": 22210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 22197,
											"end": 22214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22190,
											"end": 22237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 22380,
											"end": 22384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 22254,
											"end": 22385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "tag",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22246,
											"end": 22385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22246,
											"end": 22385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21973,
											"end": 22392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22398,
											"end": 22633,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 22398,
											"end": 22633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "PUSH",
											"source": 6,
											"value": "63616C63756C617465537761704F7574416D6F756E743A20726573657276654F"
										},
										{
											"begin": 22534,
											"end": 22535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22526,
											"end": 22532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22522,
											"end": 22536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22515,
											"end": 22573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 22607,
											"end": 22625,
											"name": "PUSH",
											"source": 6,
											"value": "7574206D75737420706F73697469766500000000000000000000000000000000"
										},
										{
											"begin": 22602,
											"end": 22604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 22594,
											"end": 22600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22590,
											"end": 22605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22583,
											"end": 22626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 22398,
											"end": 22633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22398,
											"end": 22633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22639,
											"end": 23005,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 22639,
											"end": 23005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22781,
											"end": 22784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22802,
											"end": 22869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "612"
										},
										{
											"begin": 22866,
											"end": 22868,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 22861,
											"end": 22864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 22802,
											"end": 22869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 22802,
											"end": 22869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22802,
											"end": 22869,
											"name": "tag",
											"source": 6,
											"value": "612"
										},
										{
											"begin": 22802,
											"end": 22869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22795,
											"end": 22869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 22795,
											"end": 22869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22878,
											"end": 22971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "613"
										},
										{
											"begin": 22967,
											"end": 22970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22878,
											"end": 22971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 22878,
											"end": 22971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22878,
											"end": 22971,
											"name": "tag",
											"source": 6,
											"value": "613"
										},
										{
											"begin": 22878,
											"end": 22971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22996,
											"end": 22998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 22991,
											"end": 22994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22987,
											"end": 22999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22980,
											"end": 22999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22980,
											"end": 22999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22639,
											"end": 23005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 22639,
											"end": 23005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22639,
											"end": 23005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22639,
											"end": 23005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23011,
											"end": 23430,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 23011,
											"end": 23430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23177,
											"end": 23181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23215,
											"end": 23217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23204,
											"end": 23213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23200,
											"end": 23218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23192,
											"end": 23218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23192,
											"end": 23218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23264,
											"end": 23273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23258,
											"end": 23262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23254,
											"end": 23274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23250,
											"end": 23251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23239,
											"end": 23248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23235,
											"end": 23252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23228,
											"end": 23275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23292,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 23418,
											"end": 23422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23292,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 23292,
											"end": 23423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23292,
											"end": 23423,
											"name": "tag",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 23292,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23284,
											"end": 23423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23284,
											"end": 23423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23011,
											"end": 23430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23011,
											"end": 23430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23011,
											"end": 23430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23011,
											"end": 23430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23585,
											"end": 23589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23623,
											"end": 23625,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 23612,
											"end": 23621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23608,
											"end": 23626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23600,
											"end": 23626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23600,
											"end": 23626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23636,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "617"
										},
										{
											"begin": 23704,
											"end": 23705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23693,
											"end": 23702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23689,
											"end": 23706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23680,
											"end": 23686,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 23636,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 23636,
											"end": 23707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23636,
											"end": 23707,
											"name": "tag",
											"source": 6,
											"value": "617"
										},
										{
											"begin": 23636,
											"end": 23707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23717,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 23785,
											"end": 23787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23774,
											"end": 23783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23770,
											"end": 23788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23761,
											"end": 23767,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23717,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 23717,
											"end": 23789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23717,
											"end": 23789,
											"name": "tag",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 23717,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23799,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 23867,
											"end": 23869,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23856,
											"end": 23865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23852,
											"end": 23870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23843,
											"end": 23849,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23799,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 23799,
											"end": 23871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23799,
											"end": 23871,
											"name": "tag",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 23799,
											"end": 23871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23436,
											"end": 23878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/token/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateSwapOutAmount(uint256,uint256,uint256)": "a3919e42",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(uint256,address,uint256)": "43264349",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountLessThanOutMin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"calculateSwapOutAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token/SimpleSwap.sol\":{\"keccak256\":\"0xfeb9bace26386712e4530906c2a1250a5f892e3b9b7a42b4037e792e3046e49a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb46ea777cc214d5782ba36b73b65f7938db22962a9dd87642419fc0649b48e9\",\"dweb:/ipfs/QmVPyKzWJ9cnyDwW5d5yZK9pEs4e822MKMpdceDXbaqtwf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 825,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "token0",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 828,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "token1",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 830,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "reserve0",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/token/SimpleSwap.sol:SimpleSwap",
								"label": "reserve1",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/token/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/token/SimpleSwap.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SimpleSwap": [
							1400
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"247:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "247:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "247:5:5"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								651,
								41,
								755,
								729,
								785
							],
							"name": "SimpleSwap",
							"nameLocation": "233:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 800,
									"name": "LiquidityAdded",
									"nameLocation": "318:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityProvider",
												"nameLocation": "349:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "333:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "376:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "368:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "398:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "390:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "420:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "412:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:98:5"
									},
									"src": "312:119:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d",
									"id": 810,
									"name": "LiquidityRemoved",
									"nameLocation": "481:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityProvider",
												"nameLocation": "514:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "498:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "541:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "533:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "560:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "552:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "582:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "574:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:98:5"
									},
									"src": "475:121:5"
								},
								{
									"anonymous": false,
									"eventSelector": "80044f7893845e3883418a4d784224b0d2d9606ca5f19c2a910401c2c62761b5",
									"id": 820,
									"name": "SwapSuccess",
									"nameLocation": "633:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "678:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "670:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "704:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "688:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "722:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "714:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:88:5"
									},
									"src": "627:106:5"
								},
								{
									"errorSelector": "cf3ba9fc",
									"id": 822,
									"name": "SwapAmountLessThanOutMin",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:5"
									},
									"src": "792:33:5"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 825,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "865:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "851:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 824,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 823,
											"name": "IERC20",
											"nameLocations": [
												"851:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "851:6:5"
										},
										"referencedDeclaration": 729,
										"src": "851:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 828,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "891:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "877:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 826,
											"name": "IERC20",
											"nameLocations": [
												"877:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "877:6:5"
										},
										"referencedDeclaration": 729,
										"src": "877:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 830,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "942:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "927:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 829,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "927:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 832,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "995:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "980:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "980:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1079:59:5",
										"statements": [
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1089:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "1098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1089:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1089:16:5"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1115:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1124:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1115:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1115:16:5"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c6553776170",
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1059:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0f41d54f2f2b7966a90e9cd39ab4f298f5040988f380cfafec39a85446da985",
														"typeString": "literal_string \"SimpleSwap\""
													},
													"value": "SimpleSwap"
												},
												{
													"hexValue": "5353",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1073:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8535e3db6464e317fd034d686701432ec45f68985b6a58376f7d984274c3141b",
														"typeString": "literal_string \"SS\""
													},
													"value": "SS"
												}
											],
											"id": 843,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 840,
												"name": "ERC20",
												"nameLocations": [
													"1053:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1053:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1053:25:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "1028:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1021:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 833,
														"name": "IERC20",
														"nameLocations": [
															"1021:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1021:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1021:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "1044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1037:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 836,
														"name": "IERC20",
														"nameLocations": [
															"1037:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1037:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1037:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:32:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:5"
									},
									"scope": 1400,
									"src": "1009:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "2002:1257:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "token0Amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "2038:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2053:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2038:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164644c69717569646974793a20746f6b656e30416d6f756e742063616e206e6f74207a65726f",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2056:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde",
																"typeString": "literal_string \"addLiquidity: token0Amount can not zero\""
															},
															"value": "addLiquidity: token0Amount can not zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25f0bcef9eca5e13d2c82cd6938ad5ac9f0197fafe8c51cf028d12e2ef846bde",
																"typeString": "literal_string \"addLiquidity: token0Amount can not zero\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2030:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2030:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "2030:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 871,
																"name": "token1Amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "2116:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2116:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164644c69717569646974793a20746f6b656e31416d6f756e742063616e206e6f74207a65726f",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c",
																"typeString": "literal_string \"addLiquidity: token1Amount can not zero\""
															},
															"value": "addLiquidity: token1Amount can not zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dcae987c21546fcb3fd18ed3074fd58c8e1248734fcd9d65dbf51ae0f860441c",
																"typeString": "literal_string \"addLiquidity: token1Amount can not zero\""
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2108:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "2108:68:5"
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2232:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 882,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2268:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		],
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2260:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 880,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2260:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2260:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 878,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "2243:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2250:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 686,
																"src": "2243:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2243:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 885,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2277:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2243:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2232:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2232:57:5"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "2299:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 894,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2335:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		],
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2327:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 892,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2327:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2327:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 890,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "2310:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2317:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 686,
																"src": "2310:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2310:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 897,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "2344:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2310:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2299:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "2299:57:5"
											},
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "2374:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "2366:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2366:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2388:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2366:35:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 906,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "2415:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2430:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2415:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "2585:244:5",
													"statements": [
														{
															"expression": {
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 918,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "2725:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 920,
																					"name": "token0Amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 856,
																					"src": "2741:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 921,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "2756:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2741:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 923,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "2770:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2741:37:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 925,
																					"name": "token1Amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 858,
																					"src": "2780:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 926,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "2795:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2780:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 928,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "2809:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2780:37:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 919,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "2737:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:81:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2725:93:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "2725:93:5"
														}
													]
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "2411:418:5",
												"trueBody": {
													"id": 917,
													"nodeType": "Block",
													"src": "2433:147:5",
													"statements": [
														{
															"expression": {
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 909,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "2524:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 911,
																				"name": "token0Amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 856,
																				"src": "2541:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 912,
																				"name": "token1Amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "2556:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2541:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 910,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "2536:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2536:33:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2524:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 916,
															"nodeType": "ExpressionStatement",
															"src": "2524:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "2872:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2884:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2872:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164644c69717569646974793a20696e73756666696369656e74206c6971756964697479",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2887:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06",
																"typeString": "literal_string \"addLiquidity: insufficient liquidity\""
															},
															"value": "addLiquidity: insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ad0988790dd6247c70f230f9d5fa89fe5fab14eb84359bbee0b164a76a4e06",
																"typeString": "literal_string \"addLiquidity: insufficient liquidity\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2864:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2864:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 943,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2962:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2966:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2962:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "2974:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2956:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "2956:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3038:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3042:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3038:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 955,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3058:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3050:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3050:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3050:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 948,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "3018:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3025:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3018:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "3018:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 963,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3108:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3112:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3108:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 967,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3128:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3120:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3120:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3120:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3135:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 960,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "3088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3095:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3088:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "3088:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 973,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3202:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3206:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3202:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3214:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 976,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3228:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 977,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3242:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "3187:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3187:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "EmitStatement",
												"src": "3182:70:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1821:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "1884:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1876:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "1948:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1940:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:133:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1991:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1983:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:19:5"
									},
									"scope": 1400,
									"src": "1812:1447:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "3891:748:5",
										"statements": [
											{
												"assignments": [
													991
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3927:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "3919:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 990,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3919:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 993,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3947:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3951:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 992,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3937:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 998,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "3976:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 999,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "3987:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3976:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c5020696e73756666696369656e74",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3998:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f",
																"typeString": "literal_string \"LP insufficient\""
															},
															"value": "LP insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c89baf0f05b3208cfeec31b9e27820df4020e24f7de63567148f139265a3ef6f",
																"typeString": "literal_string \"LP insufficient\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3968:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3968:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "3968:48:5"
											},
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "4088:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "4080:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4080:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1006,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4102:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4102:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4080:35:5"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "4125:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "4140:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1011,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4152:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4140:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1013,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "4163:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4140:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4125:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "4125:49:5"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4184:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "4199:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1019,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "4211:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4199:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1021,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "4222:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4199:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4184:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "4184:49:5"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4243:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1030,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4279:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		],
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4271:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1028,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4271:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4271:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1026,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "4254:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4261:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 686,
																"src": "4254:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4254:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1033,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "4288:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4254:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4243:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "4243:57:5"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4310:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1042,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4346:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																				"typeString": "contract SimpleSwap"
																			}
																		],
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4338:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1040,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4338:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4338:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1038,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4321:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4328:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 686,
																"src": "4321:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4321:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1045,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4355:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4321:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4310:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "4310:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4403:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4407:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4403:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4415:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4397:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "4397:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1058,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4475:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4479:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4475:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "4487:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1055,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "4459:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4466:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4459:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4459:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "4459:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4526:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4530:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4526:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4538:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1063,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "4510:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4517:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4510:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "4510:41:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4583:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4587:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4583:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4595:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1075,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "4606:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1076,
															"name": "token1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4619:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4566:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "EmitStatement",
												"src": "4561:71:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3796:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3820:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3812:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:19:5"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "3855:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3847:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "3877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3869:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3846:44:5"
									},
									"scope": 1400,
									"src": "3787:852:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "5003:1745:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "5039:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5050:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5039:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "737761703a20616d6f756e74496e206d75737420706f736974697665",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5053:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392",
																"typeString": "literal_string \"swap: amountIn must positive\""
															},
															"value": "swap: amountIn must positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_252911cde111e46b74cae8cdc1b4159d0eed348d6123005cd3d83e492f018392",
																"typeString": "literal_string \"swap: amountIn must positive\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5031:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5031:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "5031:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "5102:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1104,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "5113:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "5102:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "5123:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1107,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5134:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "5123:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5102:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "737761703a20746f6b656e496e206e6f7420737570706f72746564",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5142:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910",
																"typeString": "literal_string \"swap: tokenIn not supported\""
															},
															"value": "swap: tokenIn not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_696e9b0499eac45a8910812423b2fcaa4fbdbced78b3c41027165d6132b32910",
																"typeString": "literal_string \"swap: tokenIn not supported\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5094:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "5094:78:5"
											},
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "5190:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "5182:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5182:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5226:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5218:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5218:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5218:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1115,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "5201:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5208:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "5201:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5182:50:5"
											},
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "5250:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "5242:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1129,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5286:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5278:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5278:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5278:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1125,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5261:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5268:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "5261:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5261:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5242:50:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1133,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "5306:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1134,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5317:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "5306:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "5993:665:5",
													"statements": [
														{
															"expression": {
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1201,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6056:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1203,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "6091:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1204,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "6101:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1205,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "6111:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1202,
																		"name": "calculateSwapOutAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "6068:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6068:52:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6056:64:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "6056:64:5"
														},
														{
															"expression": {
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "6134:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1210,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "6145:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "6134:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "6134:17:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1213,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6169:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1214,
																	"name": "amountOutMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "6181:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6169:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1220,
															"nodeType": "IfStatement",
															"src": "6165:96:5",
															"trueBody": {
																"id": 1219,
																"nodeType": "Block",
																"src": "6195:66:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1216,
																				"name": "SwapAmountLessThanOutMin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "6220:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6220:26:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1218,
																		"nodeType": "RevertStatement",
																		"src": "6213:33:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1221,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6336:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1226,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "6372:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					],
																					"id": 1225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6364:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1224,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "6364:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6364:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1222,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "6347:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6354:9:5",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 686,
																			"src": "6347:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6347:31:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1229,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6381:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6347:42:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6336:53:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1232,
															"nodeType": "ExpressionStatement",
															"src": "6336:53:5"
														},
														{
															"expression": {
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1233,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "6443:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1238,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "6479:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					],
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6471:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1236,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "6471:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6471:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1234,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "6454:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6461:9:5",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 686,
																			"src": "6454:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6454:31:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1241,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "6488:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6454:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6443:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "6443:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1248,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6559:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6563:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6559:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1252,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6579:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6571:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1250,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6571:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6571:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1254,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6586:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1245,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "6539:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6546:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "6539:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6539:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1256,
															"nodeType": "ExpressionStatement",
															"src": "6539:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1260,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6625:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6629:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6625:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1262,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "6637:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1257,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "6609:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6616:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6609:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6609:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1264,
															"nodeType": "ExpressionStatement",
															"src": "6609:38:5"
														}
													]
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "5302:1356:5",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "5325:663:5",
													"statements": [
														{
															"expression": {
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1136,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "5388:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1138,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "5423:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1139,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "5433:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1140,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "5443:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1137,
																		"name": "calculateSwapOutAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "5400:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5400:52:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5388:64:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "5388:64:5"
														},
														{
															"expression": {
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1144,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "5466:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1145,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5477:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "5466:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1147,
															"nodeType": "ExpressionStatement",
															"src": "5466:17:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "5501:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1149,
																	"name": "amountOutMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "5513:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5501:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1155,
															"nodeType": "IfStatement",
															"src": "5497:96:5",
															"trueBody": {
																"id": 1154,
																"nodeType": "Block",
																"src": "5527:66:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1151,
																				"name": "SwapAmountLessThanOutMin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "5552:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5552:26:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1153,
																		"nodeType": "RevertStatement",
																		"src": "5545:33:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1156,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "5667:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1161,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "5703:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					],
																					"id": 1160,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5695:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1159,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "5695:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5695:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1157,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "5678:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5685:9:5",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 686,
																			"src": "5678:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5678:31:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1164,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "5712:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5678:42:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5667:53:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "5667:53:5"
														},
														{
															"expression": {
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1168,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "5773:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1173,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "5809:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																							"typeString": "contract SimpleSwap"
																						}
																					],
																					"id": 1172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5801:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1171,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "5801:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5801:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1169,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "5784:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5791:9:5",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 686,
																			"src": "5784:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5784:31:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1176,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "5818:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5784:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5773:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "5773:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1183,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5889:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5893:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5889:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1187,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5909:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$1400",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5901:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1185,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5901:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5901:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1189,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "5916:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1180,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "5869:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5876:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "5869:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5869:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1191,
															"nodeType": "ExpressionStatement",
															"src": "5869:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1195,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5955:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5959:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5955:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1197,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "5967:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1192,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "5939:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5946:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "5939:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5939:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1199,
															"nodeType": "ExpressionStatement",
															"src": "5939:38:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1270,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "6692:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6684:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6684:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6684:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "6702:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1275,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "6720:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6712:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1273,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6712:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6712:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "6731:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "SwapSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "6672:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,uint256)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6672:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "6667:74:5"
											}
										]
									},
									"functionSelector": "43264349",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4890:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4903:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4895:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "4920:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4913:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1083,
														"name": "IERC20",
														"nameLocations": [
															"4913:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "4913:6:5"
													},
													"referencedDeclaration": 729,
													"src": "4913:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4937:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4929:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:56:5"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4975:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4967:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "4993:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4986:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1091,
														"name": "IERC20",
														"nameLocations": [
															"4986:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "4986:6:5"
													},
													"referencedDeclaration": 729,
													"src": "4986:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:36:5"
									},
									"scope": 1400,
									"src": "4881:1867:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "7508:322:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1293,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "7526:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7537:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7526:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c63756c617465537761704f7574416d6f756e743a20616d6f756e74496e206d75737420706f736974697665",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7540:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2",
																"typeString": "literal_string \"calculateSwapOutAmount: amountIn must positive\""
															},
															"value": "calculateSwapOutAmount: amountIn must positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42d7f36160c87d17a093c198dd9fc489ad3076c00176b534aa4b5625e35308f2",
																"typeString": "literal_string \"calculateSwapOutAmount: amountIn must positive\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7518:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7518:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "7518:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1300,
																"name": "reserveIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "7607:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7619:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7607:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c63756c617465537761704f7574416d6f756e743a2072657365727665496e206d75737420706f736974697665",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7622:49:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568",
																"typeString": "literal_string \"calculateSwapOutAmount: reserveIn must positive\""
															},
															"value": "calculateSwapOutAmount: reserveIn must positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfc9a9cd6e3a23ccbb78cb0e81935c0a81c60b1f940ec6111705f496b4c88568",
																"typeString": "literal_string \"calculateSwapOutAmount: reserveIn must positive\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7599:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7599:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "7599:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "7690:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7703:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7690:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c63756c617465537761704f7574416d6f756e743a20726573657276654f7574206d75737420706f736974697665",
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8",
																"typeString": "literal_string \"calculateSwapOutAmount: reserveOut must positive\""
															},
															"value": "calculateSwapOutAmount: reserveOut must positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8aaf19b9d33ab332ac1c074290566f63d83ecd55d8fdf7cf2972246fbf07fb8",
																"typeString": "literal_string \"calculateSwapOutAmount: reserveOut must positive\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7682:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7682:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "7682:75:5"
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1313,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "7767:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1314,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "7780:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1315,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "7789:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7780:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1317,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7779:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7804:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1319,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "7814:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7804:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7803:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7779:44:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7767:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "7767:56:5"
											}
										]
									},
									"functionSelector": "a3919e42",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSwapOutAmount",
									"nameLocation": "7264:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7330:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "7325:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7325:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7390:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "7382:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7451:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "7443:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7286:181:5"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7497:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "7489:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7488:19:5"
									},
									"scope": 1400,
									"src": "7255:575:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "7929:270:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1333,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "7943:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7949:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7943:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1369,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "8148:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8155:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8148:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1377,
													"nodeType": "IfStatement",
													"src": "8145:48:5",
													"trueBody": {
														"id": 1376,
														"nodeType": "Block",
														"src": "8158:35:5",
														"statements": [
															{
																"expression": {
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1372,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "8172:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8181:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8172:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1375,
																"nodeType": "ExpressionStatement",
																"src": "8172:10:5"
															}
														]
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "7939:254:5",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "7952:188:5",
													"statements": [
														{
															"expression": {
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1336,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "7966:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1337,
																	"name": "num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "7975:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "7966:12:5"
														},
														{
															"assignments": [
																1341
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1341,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "8000:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1368,
																	"src": "7992:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1340,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7992:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1347,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1342,
																		"name": "num",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "8004:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8010:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8004:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8014:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8004:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7992:23:5"
														},
														{
															"body": {
																"id": 1366,
																"nodeType": "Block",
																"src": "8048:82:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1351,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "8066:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1352,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1341,
																				"src": "8075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8066:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1354,
																		"nodeType": "ExpressionStatement",
																		"src": "8066:10:5"
																	},
																	{
																		"expression": {
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1355,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1341,
																				"src": "8094:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1356,
																									"name": "num",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1328,
																									"src": "8099:3:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1357,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1341,
																									"src": "8105:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "8099:7:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1359,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1341,
																								"src": "8109:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8099:11:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1361,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8098:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8114:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8098:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8094:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1365,
																		"nodeType": "ExpressionStatement",
																		"src": "8094:21:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1348,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "8036:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1349,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "8040:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8036:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1367,
															"nodeType": "WhileStatement",
															"src": "8029:101:5"
														}
													]
												}
											}
										]
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7872:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "7885:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "7877:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7877:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7876:13:5"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7921:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "7913:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:16:5"
									},
									"scope": 1400,
									"src": "7863:336:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "8301:51:5",
										"statements": [
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1389,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "8311:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1390,
																"name": "num0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "8320:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1391,
																"name": "num1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "8327:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8320:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1394,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "8341:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8320:25:5",
														"trueExpression": {
															"id": 1393,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "8334:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8311:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "8311:34:5"
											}
										]
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "8233:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "8242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "8237:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8237:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "8256:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "8248:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8248:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8236:25:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "8293:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "8285:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8284:16:5"
									},
									"scope": 1400,
									"src": "8224:128:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1401,
							"src": "224:8130:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								822
							],
							"usedEvents": [
								663,
								672,
								800,
								810,
								820
							]
						}
					],
					"src": "32:12395:5"
				},
				"id": 5
			}
		}
	}
}