{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "key",
						"type": "address"
					}
				],
				"name": "AddressToFacetMapNonexistentKey",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "_functionSelector",
						"type": "bytes4"
					}
				],
				"name": "facetAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "facetAddress_",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facetAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "facetAddresses_",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_facet",
						"type": "address"
					}
				],
				"name": "facetFunctionSelectors",
				"outputs": [
					{
						"internalType": "bytes4[]",
						"name": "facetFunctionSelectors_",
						"type": "bytes4[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "facetAddress",
								"type": "address"
							},
							{
								"internalType": "bytes4[]",
								"name": "functionSelectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IDiamondLoupe.Facet[]",
						"name": "facets_",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "funcSign",
						"type": "string"
					}
				],
				"name": "getSelector",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Implements the loupe functions as defined in EIP-2535. These functions allow querying information about the facets and function selectors of a diamond. This is particularly useful for user interfaces to visualize the structure of a diamond contract.",
			"kind": "dev",
			"methods": {
				"facetAddress(bytes4)": {
					"details": "If no facet is found for the selector, returns address(0).",
					"params": {
						"_functionSelector": "The function selector to query."
					},
					"returns": {
						"facetAddress_": "The address of the facet that supports the given selector."
					}
				},
				"facetAddresses()": {
					"returns": {
						"facetAddresses_": "An array of addresses representing all facets in the diamond."
					}
				},
				"facetFunctionSelectors(address)": {
					"params": {
						"_facet": "The address of the facet."
					},
					"returns": {
						"facetFunctionSelectors_": "An array of function selectors associated with the facet."
					}
				},
				"facets()": {
					"returns": {
						"facets_": "An array of Facet structs, each containing a facet address and its function selectors."
					}
				},
				"getSelector(string)": {
					"details": "Computes the function selector from a given function signature string. Example: \"transfer(address,uint256)\" returns the selector for the transfer function.",
					"params": {
						"funcSign": "The function signature as a string."
					},
					"returns": {
						"_0": "The bytes4 function selector."
					}
				}
			},
			"title": "DiamondLoupeFacet",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"facetAddress(bytes4)": {
					"notice": "Returns the facet address that supports the given function selector."
				},
				"facetAddresses()": {
					"notice": "Returns all facet addresses used by the diamond."
				},
				"facetFunctionSelectors(address)": {
					"notice": "Returns all function selectors supported by a specific facet."
				},
				"facets()": {
					"notice": "Returns all facet addresses and their corresponding function selectors."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/proxy/EIP2535/DiamondLoupeFacet.sol": "DiamondLoupeFacet"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/SlotDerivation.sol": {
			"keccak256": "0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618",
			"license": "MIT",
			"urls": [
				"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb",
				"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc"
			]
		},
		"@openzeppelin/contracts/utils/StorageSlot.sol": {
			"keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
			"license": "MIT",
			"urls": [
				"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
				"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
			"license": "MIT",
			"urls": [
				"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
				"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
			]
		},
		"contracts/proxy/EIP2535/CommonStorage.sol": {
			"keccak256": "0x7c51885989588f5f290980252b53498f3be9afb4522db7bd43859736384bac77",
			"license": "MIT",
			"urls": [
				"bzz-raw://589c1a9521f3d393b56525512c2a85688173412cf280dd1998e02148fb7275b7",
				"dweb:/ipfs/QmTbBFPXweXcTRma9ByzcLZn5wfAVcFmXbfK39uyi4Ce8r"
			]
		},
		"contracts/proxy/EIP2535/DiamondLoupeFacet.sol": {
			"keccak256": "0x2b966f6272ffc1a1ef72ae94be22a279638bf20dfbe4a65b75f7ee7ff172c5bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://560640060c16b2409f2c933e3a2751bccbcf3d06039d573b0a3439cb5f59e87d",
				"dweb:/ipfs/QmVTxXQPsR7TVJ1thETofTNz1P6r4uFiqugjPkWrEqZep6"
			]
		},
		"contracts/proxy/EIP2535/DiamondStorage.sol": {
			"keccak256": "0x5bb3609fecbd73b7a823710b47a2f6569fc615eca7e1d22da11f4211e68e513b",
			"license": "MIT",
			"urls": [
				"bzz-raw://858d3a9408cfb55afc23aa9eba9ca4eabf2551f3a49de4acc098c0e88b1b40b7",
				"dweb:/ipfs/QmWRX3BRAybJZtqtWgPkzej8EDM5LdRYY5ysuDeZEBwNWN"
			]
		},
		"contracts/proxy/EIP2535/IDiamondLoupe.sol": {
			"keccak256": "0xc78b43f5af45089bbe54a37795c3debfe351d60ec0b7428a3c2c03f412b8a3e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://c31a23aeba13823bc77516db74c1252cccca6db10f2eadab49d8b81a7171afbc",
				"dweb:/ipfs/QmeBXiVnHxNhMQPE77zN2GniUDpw4iMqZ3nLDnqcytE4mF"
			]
		}
	},
	"version": 1
}